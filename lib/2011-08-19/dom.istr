
// TODO: There is actually no constructor for Window, though it is an object, and it's prototype 
//       This is being modelled here as a constructor which would throw, but better would be a private constructor?

extern class Window() : EventTarget {   // TODO: Do the members of this interface need to be redeclared?  What are the rules?

  public window: Window;
  public self: Window;
  public name: string;
  public location: Location;
  public history: History;

  public close(): void;
  public focus(): void;
  public blur(): void
  public frames: Window;
  public length: number;
  public top: Window;
  public opener: Window;
  public parent: Window;

  public open(): Window;  
  public open(url: string): Window;
  public open(url: string, target: string): Window;
  public open(url: string, target: string, features: string): Window;
  public open(url: string, target: string, features: string, replace: bool): Window;

  // TODO: Is it legal to have both of there?
  public [index: number]: Window;
  public [name: string]: any; // TODO: can return Window, Element and HTMLCollection 

  // TODO: Note that this are function-valued properties on the instance
  public onfocus: FocusEvent => void; // TODO: Not actually typed this strongly in IDL, not sure why? 
  public onhashchange: Event => void;

  // ...
}

// TODO: An interface instead of class because of NoInterfaceObject
interface EventTarget {
  // TODO
}

extern class Location() {
  // TODO
}

extern class History() {
  // TODO
}

class Document() {

}


// Note: Every property of Window needs to be copied into the global to simulate Object Environment Record
//       WebIDL avoids duplication by using msGlobalObjectPolluter

extern window: Window;
extern self: Window;
extern name: string;
extern location: Location;
extern close(): void;
extern focus(): void;
extern blur(): void
extern frames: Window;
extern length: number;
extern top: Window;
extern opener: Window;
extern parent: Window;
extern open(): Window;  
extern open(url: string): Window;
extern open(url: string, target: string): Window;
extern open(url: string, target: string, features: string): Window;
extern open(url: string, target: string, features: string, replace: bool): Window;
extern [index: number]: Window;
extern [name: string]: any;
extern onfocus: FocusEvent => void;
extern onhashchange: Event => void;
// ...