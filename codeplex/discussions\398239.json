[
  {
    "Id": "922638",
    "ThreadId": "398239",
    "Html": "\r\n<p>Hello, I've a class which I'll call &quot;Base&quot; and a subclass (&quot;SubBase&quot;).</p>\r\n<p>&nbsp;</p>\r\n<p>Base has some methods where it returns &quot;this&quot;. The class is designed to help method chainability so that I can:</p>\r\n<p>&nbsp;</p>\r\n<p>new SubBase().methodA().methodB().methodC() =&gt; SubBase.</p>\r\n<p>&nbsp;</p>\r\n<p>The problem is that base and subBase are defined as follow:&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>declare module test {\r\n\t<span style=\"color:blue\">export</span> <span style=\"color:blue\">class</span> Base {\r\n\t\tsetAnchorPoint(x:number, y:number):Base;\r\n\t\tsetPosition(x:number, y:number): Base;\r\n\t}\r\n\t<span style=\"color:blue\">export</span> <span style=\"color:blue\">class</span> SubBase <span style=\"color:blue\">extends</span> test.Base{\r\n\r\n\t\tsetSomethingElse(x:number, y:number): SubBase;\r\n\t}\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>in this snippet, when I do something like:</p>\r\n<p>new SubBase().setAnchorPoint(0,0).setPosition(0,0).setSomethingElse()&nbsp;;</p>\r\n<p>since setPosition() returns Base, the compiler tells me that Base does not have method &quot;setSomethingElse&quot;.</p>\r\n<p>So i'm trying to understand if there's some keyword I can use like &quot;<strong><em>self</em></strong><em>&quot;</em>&nbsp;so that all the subclasses will also inherit the method and &quot;override&quot; the return value.</p>\r\n<p>Thanks</p>\r\n",
    "PostedDate": "2012-10-05T13:51:28.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923536",
    "ThreadId": "398239",
    "Html": "<p>There is&nbsp;discussion of something like this in one of the other forum posts: <a href=\"http://typescript.codeplex.com/discussions/398363\">http://typescript.codeplex.com/discussions/398363</a></p>",
    "PostedDate": "2012-10-08T09:58:44.523-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]