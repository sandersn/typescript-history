[
  {
    "Id": "1230947",
    "ThreadId": "541380",
    "Html": "I have been looking extensively for a feedback portal for discussion on Typescript, but cannot find one (something similar to uservoice) - is this discussion area the appropriate venue for such, then?\r<br />\n<br />\nOne of my biggest problems with typescript so far is that its integration with RequireJS always assumes the very bare minimum implementation. You have to simply declare &quot;export [class]&quot; or &quot;export [function]&quot;.\r<br />\n<br />\nBut module loading is more robust than that - is it possible to extend add a new keyword to the typescript compiler? Perhaps called &quot;named&quot; that can take a string?<br />\n<pre><code>export class Horse extends Animal implements IAnimal named &quot;Horsie&quot; {\n    constructor(name: string) { super(name); }\n}</code></pre>\n\nWhich would allow interpreters to use explicit module names for better organization and behavior. This would essentially compile to ...<br />\n<pre><code>define(&quot;Horsie&quot;, [&quot;require&quot;, &quot;exports&quot;], function(require, exports) {\n    var Animal = (function () {\n        function Animal(name) {\n            this.name = name;\n        }\n        Animal.prototype.move = function (meters) {\n            alert(this.name + &quot; moved &quot; + meters + &quot;m.&quot;);\n        };\n        return Animal;\n    })();\n\n    var Horse = (function (_super) {\n        __extends(Horse, _super);\n        function Horse(name) {\n            _super.call(this, name);\n        }\n        return Horse;\n    })(Animal);\n    exports.Horse = Horse;\n});\n</code></pre>\n\nI get that this isn't that cut and dry, but it has driven me nuts since I started to use Typescript. It has made organizing projects a little more frustrating than it should have been.<br />\n",
    "PostedDate": "2014-04-06T08:39:42.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]