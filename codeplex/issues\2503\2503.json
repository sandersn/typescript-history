{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-05-13T18:15:18.703-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "Putting a new line after a \"return\" will cause the generated javascript to split the statement in two. You can also reproduce it in the playground with the basic example:\r\n\r\n```\r\nclass Greeter {\r\n    greeting: string;\r\n    constructor(message: string) {\r\n        this.greeting = message;\r\n    }\r\n    greet() {\r\n        return \r\n            \"Hello, \" + this.greeting;\r\n    }\r\n} \r\n\r\nvar greeter = new Greeter(\"world\");\r\n```\r\n\r\ngenerates:\r\n\r\n```\r\nvar Greeter = (function () {\r\n    function Greeter(message) {\r\n        this.greeting = message;\r\n    }\r\n    Greeter.prototype.greet = function () {\r\n        return;\r\n        \"Hello, \" + this.greeting;\r\n    };\r\n    return Greeter;\r\n})();\r\n\r\nvar greeter = new Greeter(\"world\");\r\n```",
    "LastUpdatedDate": "2014-05-13T18:22:47.75-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-13T18:02:30.98-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Putting a new line after a \"return\" will cause the generated javascript to split the statement in two.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2503
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "simpler example:\n```\nfunction a(){\n\treturn \n\t\t\"blaat\";\n}\n```\ngenerates:\n```\nfunction a() {\n    return;\n    \"blaat\";\n}\n```",
      "PostedDate": "2014-05-13T18:04:05.283-07:00",
      "Id": 146508
    },
    {
      "Message": "This is by design, we have to match JavaScript semantics. Try running this JavaScript in your browser:\n\n```TypeScript\nfunction foo() {\n\treturn\n\t'blah'\n}\n\nvar r = foo();\nalert(r); // will this print 'blah'?\n```\n\nhttp://stackoverflow.com/questions/2846283/what-are-the-rules-for-javascripts-automatic-semicolon-insertion-asi",
      "PostedDate": "2014-05-13T18:15:14.397-07:00",
      "Id": 146509
    },
    {
      "Message": "ok... just realised that that is normal javascript behaviour..... How can I close this?",
      "PostedDate": "2014-05-13T18:22:47.75-07:00",
      "Id": 146510
    }
  ]
}