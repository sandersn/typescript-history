{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Closing this issue for now, as it appears to have become a request around compile-on-save and better project support.  This is work on our backlog we just haven't don't yet, not 'issues' (i.e. defects) in the work we have done.",
    "ClosedDate": "2012-12-28T12:56:05.723-08:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "Environment:\n- Windows 7 Professional Service Pack 1\n- Visual Studio 2012 Professional\n\nCreated a new ASP.NET MVC 4 Empty Project and added a .TS file to a Scripts folder that I had added. The .TS File contains the sample Shapes TypeScript example.\n\nAs I edit the .TS file, and rebuild the project. I notice that the underlying .JS still has the Shapes example code, not the code I've written. I cannot spot what I'm supposed to do in order to rebuild the .JS file so that it contains my code.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 0.8.2",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-01T14:37:25.78-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Underlying JS file not rebuilt/changed after TS file is changed.",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 19,
    "Id": 12
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The templates that ship with the first release of TypeScript only ship with a ASP.NET MVC 3 template, not MVC 4.  If you select MVC 3, then next dialog will offer a \"TypeScript Internet Application\" template, which should behave as you expect.\n\nIf you look at the structure of the project file for this MVC 3 project, you should be able to mimic what it is doing in your MVC 4 project relatively easily.",
      "PostedDate": "2012-10-01T14:58:41.14-07:00",
      "Id": 78216
    },
    {
      "Message": "To be explicit, put this in your MVC4 project file:\n\n  <Target Name=\"BeforeBuild\">\n    <Exec Command=\"&quot;$(PROGRAMFILES)\\Microsoft SDKs\\TypeScript\\0.8.0.0\\tsc&quot; @(TypeScriptCompile ->'&quot;%(fullpath)&quot;', ' ')\" />\n  </Target>\n\nI put it right before the <Target Name=\"MvcBuildViews..........\n\nWorks for existing MVC4 projects too. ",
      "PostedDate": "2012-10-01T15:40:37.263-07:00",
      "Id": 78222
    },
    {
      "Message": "I'd recommend you talk to Mads Kristiansen about how he integrated LESS, SASS and CoffeeScript support into the WebEssentials. Having to add a BeforeBuild batch file is kind of sub-optimal. Check out his CoffeeScript splitscreen. It autoupdates on save, not on build.  ",
      "PostedDate": "2012-10-02T03:31:14.373-07:00",
      "Id": 78260
    },
    {
      "Message": "Looks like Mads has done it again :)\nhttp://visualstudiogallery.msdn.microsoft.com/07d54d12-7133-4e15-becb-6f451ea3bea6\n\nUpdate Web Essentials for VS2012 now has support for TypeScript rebuilding when you save your .ts file (no need to build the project).",
      "PostedDate": "2012-10-03T01:17:40.297-07:00",
      "Id": 78382
    },
    {
      "Message": "If rebuilding get implemented with an ASP.NET build provider, it would work even without Visual Studio, with any editor.\n\nAbout build providers:  http://weblogs.asp.net/scottgu/archive/2005/09/02/424337.aspx\nA separate issue for this idea: http://typescript.codeplex.com/workitem/122",
      "PostedDate": "2012-10-09T04:41:28.21-07:00",
      "Id": 79127
    }
  ]
}