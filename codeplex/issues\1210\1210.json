{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Unfortunately we don't have a good solution in 0.9.0 for this, but we're working on a solution for a future version.",
    "ClosedDate": "2013-06-24T11:32:26.94-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "There should be a way to refer to the global namespace, just like c#'s \"global::\" for types.\r\n\r\nHere is what happens in Backbone definition:\r\n\r\n```ts\r\ndeclare module Backbone {\r\n    class History {\r\n         history: History; // <-- lib.d's History interface, not Backbone.History\r\n    }\r\n}\r\n```\r\n\r\nThis History type is actually a reference to window.history, defined as the History interface in lib.d.ts\r\n\r\nCurrently, we have to define this as any.",
    "LastUpdatedDate": "2013-06-24T11:32:26.94-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-22T07:04:32.913-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Allow access to global namespace in declarations",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 4,
    "Id": 1210
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "the same problem was in my project with the Error class.\nIt was difficult to distinguish global Error type and local Error class.\n```\nthrow new Error('eprst');\n```\nused local class definition\n",
      "PostedDate": "2013-06-24T00:58:26.92-07:00",
      "Id": 103898
    }
  ]
}