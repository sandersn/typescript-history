{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "JavaScript programs are valid TypeScript syntactically, but not necessarily from a type system perspective. If you attempt to add [3] + 2, you will get a type error as intended (note that type errors don't block compilation).",
    "ClosedDate": "2013-01-21T13:57:58.903-08:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "Below is a very obfuscated function that will generate UUID/GUID strings. The TypeScript 8.1.1 compiler will not accept it. It complains about the array coercion trickery.\r\n\r\n```\r\nfunction b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)}\r\n```\r\n\r\nTaken as the winner from an ad-hoc \"obfuscated UUID generator function\" competition gist :)\r\n\r\nhttps://gist.github.com/982883\r\n",
    "LastUpdatedDate": "2013-08-13T09:50:01.797-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-01-21T13:51:17.103-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Valid Javascript that is not accepted as TypeScript",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 630
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Oh, invoke b() to get a valid uuid/guid string. The \"a\" argument is for the recursion trick it uses.",
      "PostedDate": "2013-01-21T13:58:36.06-08:00",
      "Id": 86806
    },
    {
      "Message": "In Typescript 0.9.0.1 this is now an error.\n__Invalid '+' expression - types not known to support the addition operator.__",
      "PostedDate": "2013-07-05T02:07:22.717-07:00",
      "Id": 105181
    }
  ]
}