[
  {
    "Id": "1072491",
    "ThreadId": "451129",
    "Html": "Currently I see that TypeScript provides a syntax for private members on classes, but the generated javascript actually creates a public property.<br />\n<br />\nAs a workaround, could the developers generate a property that is declared using the var keyword withing the class definition?<br />\n<br />\nIf they don't want to do that, it would be really helpful if the compiler could at least permit private members declared using the &quot;var&quot; keyword within the class definition body.<br />\n<br />\nRight now, in order to get private members that I can use in my class, I define my private member using the &quot;var&quot; keyword outside of the class definition and I wrap my code in a module, to avoid polluting the global namespace.  Defining my private members outside of my class definition makes for very ugly code.<br />\n<br />\nIs it possible that some kind of workaround for this could be implemented by version 1?  It would provide actual private members on classes, and I wouldn't have to declare my private variables (using &quot;var&quot;) outside of my class definition.<br />\n<br />\nI'm very excited about this language, and I've really enjoyed using it in a javascript app for salesforce.<br />\n",
    "PostedDate": "2013-07-24T14:10:13.057-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1072534",
    "ThreadId": "451129",
    "Html": "This has been discussed before, and the issue is that the patterns for enforced private members in JavaScript have a lot of performance overhead. TypeScript is mainly targeting large applications, so compiling to code with performance overhead is not optimal.<br />\n",
    "PostedDate": "2013-07-24T17:02:24.81-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]