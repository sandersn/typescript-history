{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:24.063-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "Add option to generate one external module from multiple TS source files.\r\n\r\n[See last sentence of comment by jonturner here.](http://typescript.codeplex.com/discussions/430782#PostDetailsCell_993118)\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-25T18:13:29.393-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Build external modules out of multiple source files",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 55,
    "Id": 759
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This functionality would be extremely useful!",
      "PostedDate": "2013-05-11T20:54:14.51-07:00",
      "Id": 100006
    },
    {
      "Message": "Most JavaScript libraries are built from multiple source files, including JQuery. It would be extremely useful to be able to compile an external module from multiple source files, especially as, like ourselves, you begin working on very large code-bases using TypeScripts.\n",
      "PostedDate": "2013-06-19T01:23:48.32-07:00",
      "Id": 103390
    },
    {
      "Message": "On further thought, couldn't you just emulate what the RequireJS r.js Optimizer tool does? Each module get wrapped with a define(...) and output into the single file. I've tried this and it works, although debugging doesn't work because the source map is no longer reflective of the generated JavaScript. You could only do this, I think, if the --module AMD switch is present.",
      "PostedDate": "2013-06-24T02:12:58.597-07:00",
      "Id": 103903
    },
    {
      "Message": "We definitely need to land on a good design for this, as it's something you hit as you refactor your project to use external modules, you inevitably end up clumping things together into a single file (or worse, using some post-processing concatenation step that respects the proper file ordering that you have to maintain)\n\nWe're currently working hard to iron out the last of the stability and conformance issues for 1.0, but this one is on the radar for sure.\n",
      "PostedDate": "2013-10-24T10:06:57.38-07:00",
      "Id": 119537
    }
  ]
}