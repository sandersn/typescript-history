{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "What rwaldron said - you can extend JQueryStatic or any other JQuery interface as suggested. You might try poking around the internet to see if someone's written a .d.ts for JSrender already; I don't see one yet but it might be out there.",
    "ClosedDate": "2012-11-05T16:40:24.65-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I try to use JSRender. And when I type \"$.template(\" in order to access templates method of JSRender, \r\nTypeScript says that there's no  \".template\"  in jQuery definition. \r\nHey, what if I use some other third-party libraries? and there would not be definitions?\r\nPerhaps you should make a possibility to reference not only definition files, but js-files too.",
    "LastUpdatedDate": "2012-11-05T16:40:24.65-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-25T06:11:04.06-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "JSrender definition",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 328
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Just add it to the jQueryStatic interface...\n\n\ninterface JQueryStatic {\n  template( str: any ): string;\n}\n\njQuery.template = function( str ) {\n  return str;\n};\nconsole.log( jQuery.template(\"my template!\") );\n\n\n",
      "PostedDate": "2012-10-25T08:42:12.903-07:00",
      "Id": 80997
    }
  ]
}