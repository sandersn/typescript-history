{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Seems like the same issue as https://typescript.codeplex.com/workitem/1942 so we'll track the issue with that work item. Thanks for reducing this further.",
    "ClosedDate": "2013-11-25T09:16:36.04-08:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "I'm checking TS 0.95 beta.\r\nI attached the project which reproduces the bug.\r\nTry to open it in VS 2012 , and then try to build it.\r\nIt will show errors of the same origin:\r\n\r\nError\t26\tBuild: The property 'autoGenerated' does not exist on value of type 'RIAPP.MOD.collection.ListItem'.\tC:\\DATA2\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts\t823\t46\tjriappTS\r\nError\t19\tBuild: The property 'dec_count' does not exist on value of type 'RIAPP.MOD.collection.ListItem'.\tC:\\DATA2\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts\t690\t59\tjriappTS\r\nError\t30\tBuild: The property 'dest_dec_count' does not exist on value of type \r\n\r\nThe problem, that it can not resolve fully a generic argument which should be RIAPP.SVMDB.ColMapListItem which is a descendant of RIAPP.MOD.collection.ListItem, but the compiler sees it as RIAPP.MOD.collection.ListItem inside this blocks of code.\r\nStrange, but intellisense in vs2012 sees it correctly and shows all the properties!\r\n\r\nAnd trying a cast where item is inside a closure scope \r\nvar cm = <RIAPP.SVMDB.ColMapListItem>item;\r\nthere's another error description:\r\n\r\nError 5 Build: Cannot convert 'TItem' to 'RIAPP.SVMDB.ColMapListItem': C:\\DATA\\NEW_SVM\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts 816 30 jriappTS\r\nError 6 Build: Cannot convert 'TItem' to 'RIAPP.SVMDB.ColMapListItem': C:\\DATA\\NEW_SVM\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts 820 30 jriappTS",
    "LastUpdatedDate": "2013-11-25T09:16:36.04-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-20T04:47:00.193-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "TS 0.95 errors with resolving generics",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1925
  },
  "FileAttachments": [
    {
      "FileId": 760115,
      "FileName": "project.zip",
      "DownloadUrl": ".\\760115"
    },
    {
      "FileId": 760116,
      "FileName": "bug.jpg",
      "DownloadUrl": ".\\760116"
    },
    {
      "FileId": 761603,
      "FileName": "bugprj.zip",
      "DownloadUrl": ".\\761603"
    }
  ],
  "Comments": [
    {
      "Message": "attached also image of the bug in VS",
      "PostedDate": "2013-11-20T04:48:04.67-08:00",
      "Id": 123643
    },
    {
      "Message": "Seems the  problem arises only in in the array's filter method.\nIf you remove filter it will compile OK.\nI commented filter method, and after that there's no error.\n\n```\n get exportInfo(): string {\n                var items = this.colMap.items, name = items[0].src_name; //here it is compiled\n                return null;\n                /*, filtered = items.filter(function (cm) {\n                    return cm.useColumn; //but inside filter and later after filtering there's an error\n                }), cols = filtered.map(function (cm)\n                {\n                    return {\n                        num: cm.num, name: cm.src_name, type: cm.fldtype,\n                        max_length: cm.fldlen, is_nullable: cm.nullable,\n                        is_autogenerated: cm.autoGenerated, dest: cm.dest_name,\n                        fldtype: cm.dest_fldtype, fldlen: cm.dest_fldlen,\n                        deccnt: cm.dest_dec_count\n                    };\n                });\n                \n                return JSON.stringify({\n                    dbname: this.currentDB.k,\n                    sql: this.sql,\n                    commandtype: this._currentCmdType.k,\n                    createFile: this.createNewDBF,\n                    filePath: this.filePath,\n                    cols: cols\n                });*/\n            }\n```",
      "PostedDate": "2013-11-20T22:32:28.947-08:00",
      "Id": 123734
    },
    {
      "Message": "P.S. I tested it further it occurs in every array's callback function\nlike in callbacks for forEach, map and filter.\nBut if i access directly from items like\n```\nvar name = items[0].src_name;\n```\nit is OK",
      "PostedDate": "2013-11-20T22:46:01.997-08:00",
      "Id": 123735
    },
    {
      "Message": "Then after further testing i converted code to\n```\n      get exportInfo(): string {\n                var items = this.colMap.items, filtered: typeof items = items.filter((item) => {\n                    var cm = <RIAPP.SVMDB.ColMapListItem>item;\n                    return cm.useColumn;\n                }), cols = filtered.map(function (item)\n                {\n                    var cm = <RIAPP.SVMDB.ColMapListItem>item;\n                    return {\n                        num: cm.num, name: cm.src_name, type: cm.fldtype,\n                        max_length: cm.fldlen, is_nullable: cm.nullable,\n                        is_autogenerated: cm.autoGenerated, dest: cm.dest_name,\n                        fldtype: cm.dest_fldtype, fldlen: cm.dest_fldlen,\n                        deccnt: cm.dest_dec_count\n                    };\n                });\n                \n                return JSON.stringify({\n                    dbname: this.currentDB.k,\n                    sql: this.sql,\n                    commandtype: this._currentCmdType.k,\n                    createFile: this.createNewDBF,\n                    filePath: this.filePath,\n                    cols: cols\n                });\n            }\n```\nThen it produces another error at lines with    var cm = <RIAPP.SVMDB.ColMapListItem>item;\n\nError\t5\tBuild: Cannot convert 'TItem' to 'RIAPP.SVMDB.ColMapListItem':\tC:\\DATA\\NEW_SVM\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts\t816\t30\tjriappTS\nError\t6\tBuild: Cannot convert 'TItem' to 'RIAPP.SVMDB.ColMapListItem':\tC:\\DATA\\NEW_SVM\\jriappTS\\jriappTS\\SVM2\\impexpDbf.ts\t820\t30\tjriappTS\n",
      "PostedDate": "2013-11-20T22:53:15.783-08:00",
      "Id": 123736
    },
    {
      "Message": "And if you replace the code exportInfo property with:\n```\n get exportInfo(): string {\n                //if it gets array of items from items2 property which returns IColMap[] (not ColMapListItem[] )\n                //then it compiles OK.\n                var items = this.colMap.items2, filtered = items.filter((cm) => {\n                    return cm.useColumn;\n                }), cols = filtered.map(function (cm)\n                {\n                    return {\n                        num: cm.num, name: cm.src_name, type: cm.fldtype,\n                        max_length: cm.fldlen, is_nullable: cm.nullable,\n                        is_autogenerated: cm.autoGenerated, dest: cm.dest_name,\n                        fldtype: cm.dest_fldtype, fldlen: cm.dest_fldlen,\n                        deccnt: cm.dest_dec_count\n                    };\n                });\n                \n                return JSON.stringify({\n                    dbname: this.currentDB.k,\n                    sql: this.sql,\n                    commandtype: this._currentCmdType.k,\n                    createFile: this.createNewDBF,\n                    filePath: this.filePath,\n                    cols: cols\n                });\n            }\n```",
      "PostedDate": "2013-11-20T23:21:35.787-08:00",
      "Id": 123737
    },
    {
      "Message": "attached more reduced project for easier testing",
      "PostedDate": "2013-11-22T18:37:26.213-08:00",
      "Id": 123977
    },
    {
      "Message": "I had found the source of the bug\nif you replace in the file modules\\collection.ts in class BaseList\nmethod fillItems with\n```\n fillItems(objArray: TObj[], clearAll?: boolean) {\n                    var self = this, newItems:TItem[] = [], positions:number[] = [], fetchedItems:TItem[] = [];\n                    if (!objArray)\n                        objArray = [];\n                    this._onFillStart({ isBegin: true, rowCount: objArray.length, time: new Date(), isPageChanged: false });\n                    try {\n                        if (!!clearAll) this.clear();\n                        objArray.forEach(function (obj) {\n                            var item = new self._itemType(self,obj);\n                            item._key = self._getNewKey(item);\n                            var oldItem = self._itemsByKey[item._key];\n                            if (!oldItem) {\n                                self._items.push(item);\n                                self._itemsByKey[item._key] = item;\n                                newItems.push(item);\n                                positions.push(self._items.length - 1);\n                                fetchedItems.push(item);\n                            }\n                            else {\n                                fetchedItems.push(oldItem);\n                            }\n                        });\n\n                        if (newItems.length > 0) {\n                            this._onItemsChanged({ change_type: COLL_CHANGE_TYPE.ADDED, items: newItems, pos: positions });\n                            this.raisePropertyChanged('count');\n                        }\n                    }\n                    finally {\n                        this._onFillEnd({\n                            isBegin: false, rowCount: fetchedItems.length, time: new Date(), resetUI: !!clearAll,\n                            fetchedItems: fetchedItems, newItems: newItems, isPageChanged: false\n                        });\n                    }\n                    this.moveFirst();\n                }\n```\nthe errors dissapear\n\nSeems it is related to what how the compiler treats 'any' type now.\nit skiped the error in the fillItems method\nwhere there was an assigment any[] to TItem[] typed arguments. \nBut later stops to compile the project with weird errors.",
      "PostedDate": "2013-11-22T19:41:03.603-08:00",
      "Id": 123983
    }
  ]
}