{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:22.75-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Many JavaScript libraries have a way of returning tuples of data, in the form of 2-element arrays.\r\n\r\nFor example, some iterators (like Lazy.js) or stream libraries (like Highland) can iterate over an object's properties and will emit a sequence of 2 -element arrays: with the first element of each tuple being the property name, and the second one the actual value.\r\n\r\nSo when iterating a Dict object that maps strings to numbers it yields this:\r\n\r\n````\r\n[['keyA', 123], ['keyB', 456], ['keyC', 789]]\r\n````\r\n\r\nThis would also be relevant when iterating ES6 Map's through a stream wrapper:\r\n\r\n````\r\n[[objA, decorationA], [objB, decorationB], [objC, decorationC]]\r\n````\r\n\r\nMaybe this could in some way mesh with the indexer declaration feature? It seems conceptually closely related.\r\n\r\nLike:\r\n````\r\ninterface MapTuple<K, V> {\r\n    [0]: K;\r\n    [1]: V;\r\n}\r\n````",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-16T10:23:37.987-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "decaring types for array-based tuples",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 2323
  },
  "FileAttachments": [],
  "Comments": []
}