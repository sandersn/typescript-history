[
  {
    "Id": "993561",
    "ThreadId": "431246",
    "Html": "\r\n<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>I ran into <a href=\"http://typescript.codeplex.com/workitem/666\">this</a>&nbsp;problem when trying to convert an existing node project to typescript.</p>\r\n<p>Is there any work-around for this issue (obviously I could turn the node modules into typescript modules and change `module.exports` to `export function(...)` etc. but that would render the whole &quot;every js file is a valid typescript file&quot; argument meaningless).</p>\r\n<p>Thanks in advance.</p>\r\n",
    "PostedDate": "2013-01-29T04:02:31.573-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "993722",
    "ThreadId": "431246",
    "Html": "\r\n<p>So you are trying to compile two files as separate things? Then call tsc twice, once for each file. Otherwise, compiling them together, the same var at the global scope causes name ambiguity. If you need the var defined globally, it can only be defined once...if\r\n you need to reference it from another file, create a ///&lt;reference to the other one. Otherwise, use modules or some other mechanism to avoid polluting the global scope.</p>\r\n",
    "PostedDate": "2013-01-29T08:51:11.21-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "993731",
    "ThreadId": "431246",
    "Html": "\r\n<p>@cretz &nbsp;Thanks for your response, I will use your ```<span>///&lt;reference``` idea</span>&nbsp;in the future! for now &nbsp;I ended up turning my node modules into typescript modules.</p>\r\n",
    "PostedDate": "2013-01-29T09:05:00.573-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]