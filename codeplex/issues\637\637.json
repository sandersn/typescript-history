{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.47-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "The JSDoc support added so far is great, but it would save time and be helpful to have Visual Studio generate the JSDoc skeleton on typing `/**`. This would include adding another line with a `*`, moving the cursor to that line, and generating lines and parameter names for each parameter defined in the function. \r\n\r\nIt would also be helpful if Visual Studio would format JSDocs correctly so that the stars line up vertically. \r\n\r\nExample workflow:\r\n1)\r\n``` TypeScript\r\nfunction myFunc(foo: string, bar: Number): int {\r\n\r\n}\r\n```\r\n2) User types: `/**`\r\n\r\n3)\r\n``` TypeScript\r\n/**\r\n * [Cursor is now here]\r\n * @param foo \r\n * @param bar\r\n * @returns \r\n */\r\nfunction myFunc(foo: string, bar: Number): int{\r\n\r\n}\r\n```\r\n\r\nEDIT: \r\nI think it should also add `@returns` to the skeleton if the function has a return type. I've updated the example to demonstrate.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 1.x",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-01-22T11:54:25.307-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "JSDoc formatting",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 34,
    "Id": 637
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I agree, besides being faster to write, this would be very helpful for all of us who are used to VSDoc syntax and have yet to learn JSDoc.",
      "PostedDate": "2013-01-31T01:20:42.263-08:00",
      "Id": 87878
    },
    {
      "Message": "Also related, I think it would be helpful if upon invoking Rename, the language renamed any corresponding JSDoc `@param`s as well. In addition, it might make sense to give an error or warning squiggly if the `@param` definitions do not match the actual parameter list.",
      "PostedDate": "2013-03-27T06:40:58.5-07:00",
      "Id": 94518
    },
    {
      "Message": "The pieces most important to me are:\n\n* Scaffold docs for me based on the code\n* Warn/sync parameter names when they change\n* Allow the docs to be collapsible; but when they collapse, show the description, not just `/**`\n* If an interface has a doc and the implementing class member does not, let me sync them somehow (in VS, maybe a smart tab or like R# show an icon indicating this member implements an interface member)",
      "PostedDate": "2013-08-07T12:35:48.327-07:00",
      "Id": 108905
    },
    {
      "Message": "Update: I see the [Playground](http://www.typescriptlang.org/Playground/) has added some formatting help for JSDoc. Looking forward to getting this and more in Visual Studio.",
      "PostedDate": "2013-09-03T06:22:44.007-07:00",
      "Id": 111908
    },
    {
      "Message": "Yeah, coming from a C# environment and onboarding with TypeScript, this would be super helpful and make things feel right at home.\n\nI also noticed if I'm in the middle of a block comment and hit enter, the * isn't automatically added, that would help as part of this auto-fill in as well.\n\nIt should behave just like annotating C# does in VS.",
      "PostedDate": "2013-09-03T23:18:54.507-07:00",
      "Id": 112009
    },
    {
      "Message": "Agree with all of the above. Coming from C#, I love being able to type /// and the necessary XML is inserted for me. I should be able to do the equivalent in TypeScript with /**, and it should insert @params, @return and whatever else JSDoc can do (...!?). Likewise, @param names should remain in sync when the parameter in question is renamed, a newline should insert the * automatically, it should be collapsible, etc.",
      "PostedDate": "2013-11-20T14:41:53.243-08:00",
      "Id": 123706
    }
  ]
}