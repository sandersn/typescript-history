[
  {
    "Id": "1031551",
    "ThreadId": "440545",
    "Html": "Hi,\r<br />\n<br />\ni am using tsc to compile multiple ts sources to individual js files in a defined output directory (using &quot;--out dir&quot;).\r<br />\nWhen I then reference a source file (not a declaration file) in one of my sources using\r<br />\n/// &lt;reference path=&quot;Util.ts&quot; /&gt;\r<br />\ntsc produces an &quot;Util.js&quot; even when my Util.ts was not specified as source file in the tsc command.\r<br />\n<br />\nHow can this be prevented?\r<br />\n<br />\nThe background of my question is that I try to compile test sources separated from the real application sources. The tests need to reference the application sources but should not produce js files again...\r<br />\n<br />\nThanks for any help.\r<br />\n<br />\nRegards,\r<br />\nGerald<br />\n",
    "PostedDate": "2013-04-16T23:49:59.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1031810",
    "ThreadId": "440545",
    "Html": "One pattern you might want to try is to not mix /// reference .ts files while also importing external modules.  The general rule of thumb is to use one or the other as much as possible, without mixing them.\r<br />\n<br />\nYou can always /// reference .d.ts files.  One thing you might want to try is to convert your .ts files like Utils to .d.ts file, which would avoid the extra .js emit.<br />\n",
    "PostedDate": "2013-04-17T07:09:23.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]