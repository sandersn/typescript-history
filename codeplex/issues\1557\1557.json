{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "The type inference/propagation issues should be fixed now. I checked your project against our current bits. As far as the VS and reliability stuff goes we have a few other issues covering that and the long running work items to improve those cases.",
    "ClosedDate": "2013-10-07T14:53:58.957-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I've seen this in the 0.9.1 release, but since it's still there in 0.9.1.1 I thought I better report this. I use TypeScript in a SharePoint 2010 project. \r\n\r\nWhenever my TypeScript produces errors and I double click on the error in the Visual Studio 2012 error list to take me to the error in the TypeScript file, it opens the TypeScript file in a new tab in the tab well, even if I already had the TypeScript file open in a tab in the tab well. The class and member dropdowns at the top of this new tab continue to display Refreshing and I get no Intellisense in this second tab. When I save changes in one tab, the other tab asks to reload the changes.\r\n\r\nI also see errors in the error list that belong to a different non-existing project named after my main TypeScript file (I use external AMD modules). Even when the errors in my real project are resolved, the errors from this other project can remain. \r\n\r\nSometimes I see errors in lib.d.ts or my other .d.ts files, that otherwise compile fine, at which point I need to restart Visual Studio to get rid of those.\r\n\r\nI have seen intellisense improved in 0.9.1.1 compared to 0.9.1. It does a better job of inferring and propagating types, but it still fails to properly infer and propagate types in places. And even when intellisense correctly infers and propagates types and the project compiles with NoImplicitAny set to false, as soon as I set NoImplicitAny to true it complains about implicit any's where intellisense was able to correctly infer and propagate the type. So it seems there is a difference between what intellisense can infer and propagate, and what actual compilation can infer and propagate. \r\n\r\nI'll be happy to send the TypeScript team my project, but not as an attachment to this issue.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-22T01:34:34.38-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "TypeScript 0.9.1.1 in SharePoint 2010 project weirdness",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1557
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Followed up privately, we can re-open this once I get access to your project.\n\r\n\r** Closed by danquirk 08/22/2013 1:17PM",
      "PostedDate": "2013-08-22T13:17:55.677-07:00",
      "Id": 111363
    },
    {
      "Message": "I've repro'd at least some of the type inference issues here, marking as active.",
      "PostedDate": "2013-08-27T19:58:21.433-07:00",
      "Id": 111364
    }
  ]
}