[
  {
    "Id": "1202130",
    "ThreadId": "528772",
    "Html": "Hello,<br />\n<br />\nI'm prototyping a somewhat complex Typescript library for a Dynamics CRM application my team is developing. So far I'm loving the language, but my prototyping is nearing that nasty phase where logistics instead of theory suddenly becomes important.<br />\n<br />\nSo our library will consist of several components, something along the lines of this hierarchy:<br />\n<ol>\n<li>Utility Code</li>\n<li>Computer-Generated Data Access Code</li>\n<li>\nBusiness Code<br />\n</li>\n</ol>\nBoth Utility and Business code &quot;modules&quot; have a nested hierarchy and use the &quot;One-class-per-file&quot; rule. In general I would like these hierarchies to be compiled to a single file each. The Data Access Code on the other hand should be compiled into many different JS files so that consumers of the libraries can pick and choose which files they need access to.<br />\n<br />\nAll of that being said, I know how to invoke the TSC command-line compiler to get what I want. The problem I'm having is setting up Visual Studio 2013 and MSBuild (we're running on a TFS 2012 server) to do this. I started hacking around the CSProj file and quickly made a mess of the &lt;TypescriptCompile&gt; nodes and... well I am not sure where to go next.<br />\n<br />\nAny guidance on this issue would be greatly appreciated. Thanks!<br />\n",
    "PostedDate": "2014-02-03T09:37:30.69-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1203237",
    "ThreadId": "528772",
    "Html": "What's the dependency graph between the 3 components? \r<br />\n<br />\nI would start with 3 different projects for each, so you can easily set the single/multi-file output for each. Further the easiest is to generate d.ts files from each project and add this to the dependent projects. \r<br />\n<br />\nHth<br />\n",
    "PostedDate": "2014-02-05T15:11:49.207-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]