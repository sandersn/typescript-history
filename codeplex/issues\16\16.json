{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:24.487-07:00",
    "CommentCount": 11,
    "Custom": null,
    "Description": "Scenario:\r\n\r\n- Entity A uses TypeScript to generate a JavaScript library, and offers it in both TypeScript and JavaScript form.\r\n- Entity B chooses to consume the JavaScript version, but all the type information is lost, so there's no useful Intellisense in Visual Studio.\r\n\r\nSolution: generate rudimentary XML Doc comments in the generated JS so that Intellisense can start to reason about the JS code and imply some rough type information.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 1.x",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-01T17:33:14.99-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Generate XML Doc comments",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 81,
    "Id": 16
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Yep - optionally generating XML (for VS tooling) and/or JSDoc (for broader JS tools pipelines) comments based on TypeScript type information is a planned area of investment.",
      "PostedDate": "2012-10-02T13:23:19.657-07:00",
      "Id": 78343
    },
    {
      "Message": "Please also add support for emitting JSDoc comments for use by closure compiler and tools.",
      "PostedDate": "2012-10-10T01:27:17.997-07:00",
      "Id": 79276
    },
    {
      "Message": "Seems like focusing on emitting JSDoc (and making VS2012 consume JSDoc metadata too) would be the most efficient investment of time, since that would give TypeScript the best support for other tooling (IDEs, minifiers, etc.) and VS2012 the best support for working with a wide range of JavaScript libraries.",
      "PostedDate": "2012-11-19T04:28:49.427-08:00",
      "Id": 82706
    },
    {
      "Message": "Agreed - there are scenarios where this would be very helpful, whether as part of a toolchain or as documentation that's output in the JS.  I'm not sure if the feature will make the cut for 1.0, as we're largely focusing on extending the language so that it can work with existing JS more smoothly in the 1.0 timeframe.  After 1.0, this sounds like a natural thing to look into as a possibility because we already have the type information and we already support JSDoc consumption.",
      "PostedDate": "2013-03-07T14:59:20.293-08:00",
      "Id": 92581
    },
    {
      "Message": "I am sure you guys know, but JSDoc would be much more valuable for usage by other tools as well. I really do not have any use for XML comments if they are VS specific. VS can understand typescript anyways. ",
      "PostedDate": "2013-04-28T16:39:23.49-07:00",
      "Id": 98750
    },
    {
      "Message": "Any estimation on when this can be implemented?\n\nWe've built our own metadata generation tool that converts AST and JSDoc from a .ts file to a .ts.xml file with information about classes, interfaces, methods, parameters, fields, events, as well as some non-standard stuff like jQuery UI Widgets. The tool uses TypeScript parser to parse source files. The metadata files are used to generate HTML documentation.\n\nWe were going to fork TypeScript compiler to include metadata generation as a part of compilation, but now it seems that it does not worth to do it since you are going to do it anyway.\n\nDo you still not accept pull requests?",
      "PostedDate": "2013-05-16T11:36:02.327-07:00",
      "Id": 100371
    },
    {
      "Message": "Could you please tell if you think towards making the generated XML format look like the one generated by C# compiler, or it may look quite differently?",
      "PostedDate": "2013-05-16T12:49:59.28-07:00",
      "Id": 100376
    },
    {
      "Message": "+1 for __jsDoc__ instead of xmlDoc format. but we need better tools for auto-generating API documentation than what's currently out there. jsDoc3 isn't cutting it.",
      "PostedDate": "2013-06-28T11:31:19.66-07:00",
      "Id": 104557
    },
    {
      "Message": "+1 for both vsdoc/jsdoc",
      "PostedDate": "2013-08-11T07:17:31.14-07:00",
      "Id": 109349
    },
    {
      "Message": "+1 for both __vsdoc__ and jsdoc please.",
      "PostedDate": "2013-09-15T15:15:06.097-07:00",
      "Id": 113617
    },
    {
      "Message": "Both XML and jsdoc would be nice. I guess jsdoc is more important, but I'm more used to XML (in C#), so...",
      "PostedDate": "2013-11-20T14:44:49.463-08:00",
      "Id": 123708
    }
  ]
}