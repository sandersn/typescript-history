{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is by design at the moment. The only way to do this is with a more general feature like what is suggested here https://typescript.codeplex.com/workitem/507 Feel free to add your vote/comments to that issue as we evaluate changes for future versions of TypeScript.",
    "ClosedDate": "2014-03-14T18:04:33.957-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "The `forEach` method (along with several other Array methods) accepts an optional `thisArg` parameter which specifies \"An object that the **this** keyword can refer to in the *callbackfn* function\" ([MSDN](http://msdn.microsoft.com/en-us/library/ff679980(v=vs.94).aspx)). However, when a `thisArg` parameter is passed TypeScript still interprets the type of `this` as being *any* inside the callback function.\r\n\r\nExample:\r\n\r\n```javascript\r\nvar myThis = {\r\n    foo: function (val) {\r\n        console.log(val);\r\n    }\r\n};\r\n\r\nmyThis.bar(); // throws error TS2094: The property 'bar' does not exist on value of type '{ foo: (val: any) => void; }'.\r\n\r\n[1, 2, 3, 4].forEach(function (val) {\r\n    this.bar(val); // TypeScript fails to throw an error here\r\n}, myThis);\r\n```",
    "LastUpdatedDate": "2014-03-14T18:04:33.957-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-13T19:42:00.82-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "thisArg type is not respected inside forEach callback",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2310
  },
  "FileAttachments": [],
  "Comments": []
}