[
  {
    "Id": "1032604",
    "ThreadId": "440807",
    "Html": "Hello,\r<br />\n<br />\nI've been enjoying getting to know TypeScript over the last two weeks, and have just about finished the conversion of an MVC project consisting of 100+ JavaScript files to TypeScript.  This exercise allowed me to standardize an object model that had grown a bit chaotically at times as new features were rushed into the codebase (shh, don't tell anyone).  Now on to my suggestions...\r<br />\n<br />\nI'd like to propose that the language support the &quot;override&quot; keyword.  This could be introduced in a standalone manner, and show all methods of the base classes that could be overridden or in conjunction with &quot;virtual&quot;, which would limit the methods that could be overridden in the base.\r<br />\n<br />\nThe second suggestion is for attributes.  As I worked in the *.d.ts files I thought it would be great if I could emit information similar to the ObsoleteAttribute in C#.  This would be help library developers inform their consumers about changes in the code.\r<br />\n<br />\nThanks for all the great work you've done to date!\r<br />\n<br />\nSean<br />\n",
    "PostedDate": "2013-04-18T11:02:35.097-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1034248",
    "ThreadId": "440807",
    "Html": "Hi Sean,\r<br />\n<br />\nThanks for the suggestions.  I think you'll find people who might tend to agree with you on the issue tracker, which is also where feature requests can get voted up both other developers.  Along the lines of virtual, for example, there's a feature request for abstract classes (<a href=\"https://typescript.codeplex.com/workitem/395\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/395</a>).\r<br />\n<br />\nIn general, our class syntax is trying to align with the ECMAScript 6 proposal, which will be the next version of JavaScript.  With that as our goal, we've resisted extending features too much beyond the proposal.  <br />\n",
    "PostedDate": "2013-04-22T18:10:28.117-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]