{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:09.47-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "After a recent post on StackOverflow, I thought I would repost here as I believe this is more of a feature request than a question about how to access a feature.  Please see this thread for the responses and work-arounds (http://stackoverflow.com/questions/12717309/does-typescript-provide-an-explicit-public-api-for-nodejs-module-access)\r\n or review the below or the original question reproduced in its entirety:  \r\n\r\nFrom within a node app I would like to do:\r\n\r\n```TypeScript\r\nvar typeScript = require('typescript'); \r\n\r\ntypeScript.compile('...')\r\n```\r\n\r\nI'm looking to implement the compiler into a build system but without access to a public API (typescript.compile, etc) this is impossible, or hacky.\r\n\r\nHere's a more complete example of what I would like to do, though the below is for LiveScript, not TypeScript, utilitized in a plugin written for the Brunch.io build-system:\r\n\r\n```\r\nLiveScript = require 'LiveScript'\r\nsysPath = require 'path'\r\n\r\nmodule.exports = class LiveScriptCompiler\r\n  brunchPlugin: yes\r\n  type: 'javascript'\r\n  extension: 'ls'\r\n\r\n  constructor: (@config) ->\r\n    null\r\n\r\n  compile: (data, path, callback) ->\r\n    try\r\n      result = LiveScript.compile data, bare: yes\r\n    catch err\r\n      error = err\r\n    finally\r\n      callback error, result\r\n\r\n  include: [\r\n    (sysPath.join __dirname, '..', 'vendor', 'prelude-browser-0.6.0.js')\r\n  ]\r\n```\r\n \r\nI believe something like this is very important for growing the language and its integration outside of the Visual Studio environment.  Thoughts?",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 1.x",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-05T11:19:31.75-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Request:  Provide an Explicit Public API for NodeJS Module / Compilation Access",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 12,
    "Id": 117
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This feature request is composed of two (possibly more) feature requests.\n\nOne of the features we're looking at for 0.9.x (http://typescript.codeplex.com/workitem/47) addresses some of this, and would let internal symbols like modules be exported for external modules.  This would help a variety of situations, including the TypeScript compiler, be more easily accessed as Node.js modules.\n\nThe other part of this request is the API we'll expose.  This hasn't yet been worked out, as we've been focusing on some pretty heavy-weight changes to the compiler (which you can see in the develop-0.9.x branch).  Once the dust starts to settle, we can come back to intentionally shaping the API.",
      "PostedDate": "2013-02-26T16:04:28.293-08:00",
      "Id": 91620
    },
    {
      "Message": "Is there no way to use the 'components' field in this issue tracker?? I suggest components like 'modules', 'TS API', 'language services', 'npm package', etc. Being able to find related items quickly this way would help a lot.\n\nrelated:\n\nhttp://typescript.codeplex.com/workitem/534\nhttp://typescript.codeplex.com/workitem/521\nhttp://typescript.codeplex.com/workitem/97",
      "PostedDate": "2013-02-27T01:19:31.817-08:00",
      "Id": 91657
    },
    {
      "Message": "I was looking into a way to use typescript with browserify to translate *.ts files on the fly.\n\nThere doesn't seem to be any way to use tsc without creating files first (not even from stdin). This is a severe deficiency compared to other JS transpilers.",
      "PostedDate": "2013-06-19T09:06:55.257-07:00",
      "Id": 103444
    },
    {
      "Message": "+1. We'd love to add a typescript plugin to DocPad - http://docpad.org - but to do so we need an api to easily compile a source string to a compiled string.",
      "PostedDate": "2013-08-29T03:22:49.53-07:00",
      "Id": 111520
    }
  ]
}