[
  {
    "Id": "930105",
    "ThreadId": "400221",
    "Html": "\r\n<p>Please create a tool to generate .d.ts file from current JavaScript files and libraries.</p>\r\n<p><br>\r\nThanks</p>\r\n",
    "PostedDate": "2012-10-21T11:58:12.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "930146",
    "ThreadId": "400221",
    "Html": "\r\n<p>This is not a trivial task, there is not much benefit of having it 1 level deep besides autocompletion.</p>\r\n<p>To really benefit you need all the subobjects and how they are structured, or inteded to. You theoretically use an example app to generate some of then, but who ensures that this is bug free? This is a really difficult problen to solve, you need a sophisticated\r\n generator for that.</p>\r\n<p>The only one who can really make a great declaration file are humans, they know how all the objects are intended to work together.<br>\r\nThis is a lot of work, so i guess this will only done for the most popular ones. I started with underscore and backbone, but don't see much benefit for going more than 1 level deep right now, i need the time for my work.</p>\r\n<p>I extend them while using them, but this doesn't get shared with anyone and often i don't care to be honest. It worked in plain, why should i put all the effort in just for me. What we need is a system to collaborate step by step on a public repository for\r\n declaration files.</p>\r\n<p>TypeScript wih VisualStudio is a big help for all the stuff on top of the library, so even without declaration files i would recommend to use it.</p>\r\n",
    "PostedDate": "2012-10-21T13:39:18.207-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "930237",
    "ThreadId": "400221",
    "Html": "<p>A definitions file generator will be as good as the built-in IntelliSense which already uses some type-inference.</p>\r\n<p>The best .d.ts files can be created only by people. You can find definitions here:</p>\r\n<p><a href=\"https://github.com/borisyankov/DefinitelyTyped\">https://github.com/borisyankov/DefinitelyTyped</a></p>\r\n<p>Anyone who has put effort in creating definitions not yet present there is welcome to contribute.</p>",
    "PostedDate": "2012-10-21T21:22:15.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "930639",
    "ThreadId": "400221",
    "Html": "<p>I think investigating in custom jsdoc template could be a good start : D</p>",
    "PostedDate": "2012-10-22T12:01:45.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932087",
    "ThreadId": "400221",
    "Html": "<p>I suppose if someone used a very strict JSDoc format, then in theory, you might be able to make something to create definitions from the JSDoc work. This would probably be ideal for keeping definition files in sync with code. Granted the generator could only produce definition files as good as the information contained in the JSDoc comments, but that is the deal with all of this. Just my two cents.</p>",
    "PostedDate": "2012-10-24T19:18:21.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1018303",
    "ThreadId": "400221",
    "Html": "This actually looks like it could be quite straightforward using something like the Doctrine library: <a href=\"https://github.com/Constellation/doctrine\" rel=\"nofollow\">https://github.com/Constellation/doctrine</a>\r<br />\nI'm surprised nobody has tried this already to accelerate the generation of declration files.<br />\n",
    "PostedDate": "2013-03-20T08:06:13.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1253569",
    "ThreadId": "400221",
    "Html": "I wrote a tool to do this. It's designed to handle the easy cases correctly, and to produce a useful starting point for manually fixing the difficult cases. It's written in TypeScript and uses esprima and doctrine. \r<br />\n<br />\nIt works best on closure-style modules; it can process the entire google closure library without error, though some ambiguities have to be resolved manually.\r<br />\n<br />\nYou can use it online at:\r<br />\n<a href=\"http://fivetran.github.io/closure-definitions/\" rel=\"nofollow\">http://fivetran.github.io/closure-definitions/</a>\r<br />\n<br />\nSource repo:\r<br />\n<a href=\"https://github.com/fivetran/closure-definitions\" rel=\"nofollow\">https://github.com/fivetran/closure-definitions</a><br />\n",
    "PostedDate": "2014-06-05T22:16:23.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1253693",
    "ThreadId": "400221",
    "Html": "@georgewfraser  - that's great! \r<br />\n<br />\nI just tried a sample from the PhaserJS library and noticed that the annotations use<br />\n<pre><code>@param x {number} comment</code></pre>\n\nrather than<br />\n<pre><code>@param {number} x comment</code></pre>\n\nThis tool could also help convert existing annotated JavaScript to TypeScript.<br />\n",
    "PostedDate": "2014-06-06T06:14:27.523-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1253745",
    "ThreadId": "400221",
    "Html": "Your second example is the standard JSDoc form. Unfortunately some people basically invent their own JSDoc, I'm dependent on doctrine for JSDoc parsing and it supports only the standard forms. <br />\n",
    "PostedDate": "2014-06-06T09:14:39.707-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1343913",
    "ThreadId": "400221",
    "Html": "@georgewfraser your tool looks great.<br />\nHas to change the .gitmodules file to have something like:<br />\n<pre><code>[submodule &quot;lib/closure-library&quot;]\n    path = lib/closure-library\n    url = https://github.com/google/closure-library.git\n[submodule &quot;lib/doctrine&quot;]\n    path = lib/doctrine\n    url = https://github.com/fivetran/doctrine.git\n[submodule &quot;lib/definitely-typed&quot;]\n    path = lib/definitely-typed\n    url = https://github.com/fivetran/DefinitelyTyped.git\n[submodule &quot;typescript&quot;]\n    path = typescript\n    url = https://github.com/Microsoft/TypeScript.git\n</code></pre>\n\nit would fail to &quot;build&quot; using the original file.<br />\nfetching the submodules now, let's see... fingers crossed.<br />\nAgain, awesome tool!<br />\n",
    "PostedDate": "2015-01-21T13:10:31.537-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1343942",
    "ThreadId": "400221",
    "Html": "It worked fine in Linux, but not in Windows.<br />\n<pre><code>C:\\Projects\\github\\typescript-closure-tools&gt;tsc --module commonjs definition-generator/src/*.ts\nerror TS5007: Cannot resolve referenced file: 'definition-generator/src/*.ts'.</code></pre>\n\n",
    "PostedDate": "2015-01-21T14:42:02.26-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1346916",
    "ThreadId": "400221",
    "Html": "\r\n<div dir=\"ltr\">closure-library was missing thanks. With respect to git@ vs https://, you have to set up github ssh to pull the submodules.</div>\r\n<div><br>\r\n<div></div>\r\n</div>\r\n",
    "PostedDate": "2015-01-28T13:55:08.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]