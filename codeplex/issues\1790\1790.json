{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-10-15T14:47:08.49-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I have been trying to get this to work and I'm convinced its a bug now.\r\n\r\nI'm working on tsc version 0.9.1.1. When I attempt a gated check-in of a project that includes typescript files the corresponding .js files are never copied to the output folder. I can see TFS is generating them appropriately in my MSBuild log and the js files are present in the 'c$\\...\\Sources' directory but are never\r\nactually copied to 'c$\\...\\Binaries' directory.\r\n\r\nAlso, the ts files are not being included in the output even if I explicitly tell visual studio \"Copy Always\" from the file's properties. (may be a separate issue?)\r\n\r\nAnyway the result is the output directory used to deploy the build is missing the .js file and the .ts file.\r\n\r\n__UPDATE__:\r\nThe ouput .js is being compiled fine. The TFS folder was missing the generated .js files largely because the project file was modified to allow the project's binaries to be placed in a separate folder from binaries of other projects in the same solution. This was something in our build process so it may not be a bug after all.\r\n\r\n",
    "LastUpdatedDate": "2013-11-19T16:09:39.023-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-14T13:01:36.633-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "ts files are omitted from output directory wh",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 1790
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for reporting.  We did actually have a bug in that the \"Copy Always\" was not getting honored.  We fixed this internally about 3 weeks ago (it's part of the VS integration piece, not the public compiler piece), so this should be resolved in the next MSI we publish.",
      "PostedDate": "2013-10-15T14:47:02.407-07:00",
      "Id": 118543
    },
    {
      "Message": "cool, thanks for letting me know, now I don't need to pull my hair out over the issue.",
      "PostedDate": "2013-10-16T17:50:00.08-07:00",
      "Id": 118667
    }
  ]
}