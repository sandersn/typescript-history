{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As Luke mentioned,  we won't be diverging from the existing behavior of JS in this respect.",
    "ClosedDate": "2012-10-03T13:15:00.137-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "Number object methods like toString() and toExponential() are not available on number literal\r\n\r\n3.toString(); gives a compile error \"; is missing\"\r\n\r\nHowever \r\n\r\nvar x = 3;\r\nx.toString(); works fine\r\n\r\nAlthough standard JavaScript also doesn't allow such expressions but these could be handy in making method calls to functions that are statically typed e.g.\r\n\r\nsomeMethod(323423424.toString());\r\n\r\nfunction someMethod(x: string){\r\n    alert(x);\r\n}\r\n\r\nMaybe its possible to convert expression like above into 2 statements by first putting the literal in a temporary variable. I'm not sure if number literal with decimal in it makes it complicated.\r\n\r\nThis of course is not a very critical issue. Just something that'll be nice to have.",
    "LastUpdatedDate": "2012-10-03T13:15:00.137-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-02T07:29:35.1-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Number object methods are not available on number literal",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 29
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Although the line 3.toString() isn't valid javascript either. However now that we have static typing it can become handy for doing type conversion in line so for example:\r\n\r\nsomeMethod(3.toString())\r\nfunction someMethod(x: string){\r\n\talert(x);\r\n}\r\n\r\nWhich is not possible at the moment.",
      "PostedDate": "2012-10-02T07:37:05.59-07:00",
      "Id": 78281
    },
    {
      "Message": "@hasankhan while not as succinct and obvious, you can do someMethod((3).toString())",
      "PostedDate": "2012-10-02T07:53:02.1-07:00",
      "Id": 78288
    },
    {
      "Message": "-1",
      "PostedDate": "2012-10-02T12:16:05.007-07:00",
      "Id": 78326
    },
    {
      "Message": "Yes - we just follow JavaScript here, and don't plan to change expression-level grammar for language elements like this from the JS behavior.  (aside: If you are passing an integer literal, can you not just pass \"3\" if you want a string here?)",
      "PostedDate": "2012-10-02T14:03:15.773-07:00",
      "Id": 78349
    }
  ]
}