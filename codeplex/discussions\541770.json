[
  {
    "Id": "1232415",
    "ThreadId": "541770",
    "Html": "Hi,\r<br />\n<br />\nI am having an issue with definition files. I want to declare an enum in its own file, interfaces in a separate definition file, and then class types in their own files. I can use the enum directly from my class types and this allows me to type the object appropriately. However, I would like my interface to contain the proper type information as well. I could type it as a number since that is essentially what the enum represents, however I would prefer it to be typed more strongly.\r<br />\n<br />\nI have created a small sample in the playground (note the playground example does not work, copy each section of code into a separate typescript file in visual studio): <a href=\"http://www.typescriptlang.org/Playground#src=%2F%2FShapeType.ts%0Aenum%20ShapeType%20%7B%0A%09Circle%2C%0A%09Square%0A%7D%0A%0Aexport%20%3D%20ShapeType%3B%0A%0A%2F%2FShapeInterfaces.d.ts%0Ainterface%20IShape%20%7B%0A%09ID%3A%20string%3B%0A%09Type%3A%20ShapeType%3B%0A%7D%0A%0A%2F%2FShapeBase.ts%0Aimport%20ShapeType%20%3D%20require(%22ShapeType.ts%22)%3B%0Aclass%20ShapeBase%20implements%20IShape%20%7B%0A%09ID%3A%20string%20%3D%20%22%22%3B%0A%09Type%3A%20ShapeType%20%3D%20ShapeType.Circle%3B%0A%09constructor()%20%7B%0A%09%7D%0A%7D%0A%0Aexport%20%3D%20ShapeBase%3B\" rel=\"nofollow\">http://www.typescriptlang.org/Playground#src=%2F%2FShapeType.ts%0Aenum%20ShapeType%20%7B%0A%09Circle%2C%0A%09Square%0A%7D%0A%0Aexport%20%3D%20ShapeType%3B%0A%0A%2F%2FShapeInterfaces.d.ts%0Ainterface%20IShape%20%7B%0A%09ID%3A%20string%3B%0A%09Type%3A%20ShapeType%3B%0A%7D%0A%0A%2F%2FShapeBase.ts%0Aimport%20ShapeType%20%3D%20require(%22ShapeType.ts%22)%3B%0Aclass%20ShapeBase%20implements%20IShape%20%7B%0A%09ID%3A%20string%20%3D%20%22%22%3B%0A%09Type%3A%20ShapeType%20%3D%20ShapeType.Circle%3B%0A%09constructor()%20%7B%0A%09%7D%0A%7D%0A%0Aexport%20%3D%20ShapeBase%3B</a>\r<br />\n<br />\nAny thoughts about how to make this work would be greatly appreciated.\r<br />\n<br />\nThanks,\r<br />\ncsnance<br />\n",
    "PostedDate": "2014-04-09T09:22:49.037-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1232504",
    "ThreadId": "541770",
    "Html": "Here's one solution:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">//ShapeType.ts</span>\n<span style=\"color:Blue;\">enum</span> ShapeType {\n    Circle = 9,\n    Square\n}\n\n<span style=\"color:Blue;\">export</span> = ShapeType; \n\n<span style=\"color:Green;\">//ShapeInterfaces.d.ts</span>\n<span style=\"color:Blue;\">import</span> ShapeType = require(<span style=\"color:#A31515;\">&quot;ShapeType&quot;</span>);\n\n<span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">interface</span> IShape {\n    ID: <span style=\"color:Blue;\">string</span>;\n    Type: ShapeType;\n} \n\n<span style=\"color:Green;\">//ShapeBase.ts</span>\n<span style=\"color:Blue;\">import</span> ShapeType = require(<span style=\"color:#A31515;\">&quot;ShapeType&quot;</span>);\n<span style=\"color:Blue;\">import</span> ShapeInterfaces = require(<span style=\"color:#A31515;\">&quot;ShapeInterfaces&quot;</span>);\n\n<span style=\"color:Blue;\">class</span> ShapeBase <span style=\"color:Blue;\">implements</span> ShapeInterfaces.IShape {\n    ID: <span style=\"color:Blue;\">string</span> = <span style=\"color:#A31515;\">&quot;&quot;</span>;\n    Type: ShapeType = ShapeType.Circle;\n    <span style=\"color:Blue;\">constructor</span>() {\n    }\n}\n\n<span style=\"color:Blue;\">export</span> = ShapeBase;\r\n</pre></div>Imports that only import type information will be removed by the compiler, so you can use them to get into .d.ts types without affecting the .js output.<br />\n",
    "PostedDate": "2014-04-09T12:13:28.873-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]