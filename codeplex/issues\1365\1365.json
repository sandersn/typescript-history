{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.503-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "In a similar vein to [workitem 125](125), please add an \"internal\" access modifier to class members that provides \"public\" visibility within the module but \"private\" visibility outside the module. As with \"public\" and \"private\", I'm primarily interested in just the compile-type static type checking for now as I imagine something like this will become available in the future in ES6/7 once symbols/@names have become finalized and available.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-18T15:29:37.913-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Add \"internal\" access modifier",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 14,
    "Id": 1365
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the suggestion. We've heard a lot of requests for additional accessibility modifiers (especially protected). We'll be taking a look at these in the future, folks should feel free to upvote this and other suggestions. Assigned to Jonathan.",
      "PostedDate": "2013-07-19T11:17:35.917-07:00",
      "Id": 106661
    },
    {
      "Message": "I'm writing my first TypeScript library, and I desperately need something like this - with compile-time checking similar to private and (hopefully the much-anticipated) protected keyword too. All similar to C#.\n\nTo others looking for this feature, work-arounds for now include either the classic JS pseudo-private approach, e.g. `public _foo()`, as well as simply declaring functions internally in the module instead of class-methods, which is my preferred approach at this point, as it seems to be the closest thing to `internal` in practice. (since functions in the module remain truly internal in the generated JS.)\n",
      "PostedDate": "2013-08-29T09:44:50.487-07:00",
      "Id": 111548
    },
    {
      "Message": "Yes, I find myself wanting to enforce this at the TS level also (I'm aware that internal may still be accessible regardless if one wanted to, but it all boils down projecting the intended usage).",
      "PostedDate": "2013-10-09T08:44:23.27-07:00",
      "Id": 117931
    },
    {
      "Message": "Just to add:  This is a big requirement when writing APIs for end users.",
      "PostedDate": "2013-10-09T08:45:13.003-07:00",
      "Id": 117932
    }
  ]
}