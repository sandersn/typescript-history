{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-10-15T15:55:33.54-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "When exporting properties on a module like so:\r\n```\r\nmodule MyModule {\r\n    /** Does something.\r\n    * @param {number} x A number.\r\n    */\r\n    export var someFunc:(x:number)=>any = (x:number)=> { }\r\n}\r\n```\r\nIntellisense doesn't pick up the parameter comments \"A number\" of the strongly-typed function variable.  I'm sure there's probably a work around by declaring a signature before the module, but that's not a practical solution for every static function variable.",
    "LastUpdatedDate": "2013-11-19T16:11:42.693-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-12T20:12:22.38-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "No parameter intellisense on function variable.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1785
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "You are not reading this carefully.  Do you not understand the simple layout of the code above?  Do you not see the \"@param\" in the comments?  This is the second time you guys are closing this without even testing it.  I'm using Visual Studio - go ahead and copy-past the code above and tell me again that you see the comment \"A number\" appear when you are entering parameters. What else do you think it is there for? Come on people.",
      "PostedDate": "2013-10-14T11:51:53.42-07:00",
      "Id": 118360
    },
    {
      "Message": "I'm not sure what you're seeing... I get correct IntelliSense both on the call site and the declaration site... \n\nClosed for tracking, please re-open when you have more info, using the button on top.\n\r\n\r** Closed by paulb 10/14/2013 11:04AM",
      "PostedDate": "2013-10-14T11:04:54.51-07:00",
      "Id": 118361
    },
    {
      "Message": "Ok, I think I see the confusion here.  I'm not talking about the parameters of the function, I'm talking about the parameters (@param) in the comments not showing when entering function arguments.",
      "PostedDate": "2013-10-14T11:58:55.387-07:00",
      "Id": 118362
    },
    {
      "Message": "It seems to be as you are declaring a variable, which happens to point to a function, not declaring a function (subtle difference, but you could reassign the variable at any time, so you've no idea which function is referenced at any point).  The @param JSDoc tag is only valid on functions, not variables (even if they happen to point to functions).\n\nIf you export a function instead of a var, it shows correctly (as below).  Does this explain what you are seeing?\n\n```typescript\nmodule MyModule {\n    /** Does something.\n    * @param {number} x A number.\n    */\n    export function someFunc(x: number): any {\n\n    }\n}\n\nMyModule.someFunc( // <- Correct doc comments here\n```\n\n",
      "PostedDate": "2013-10-15T15:55:14.587-07:00",
      "Id": 118546
    },
    {
      "Message": "Ah ok, I tried declaring the class-based syntax for functions (just \"someFunc(x: number): any { }\" without the \"function\" keyword) and it failed, as I couldn't export that.  Why am I forced to put \"function\" before it?  Is this because the function is static to the module?  That just seems an unnecessary confusion.",
      "PostedDate": "2013-10-15T17:45:56.547-07:00",
      "Id": 118560
    }
  ]
}