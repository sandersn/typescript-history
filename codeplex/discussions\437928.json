[
  {
    "Id": "1020773",
    "ThreadId": "437928",
    "Html": "I am looking for some direction on using the TypeScript language service to parse TypeScript source files. I have browsed the source, however I am hoping someone can point me in the right direction for what I am trying to accomplish...<br />\n<br />\nIdeally what I would like to accomplish is the following: pass a TypeScript file to be parsed and have a data structure returned that allows me to access the body of a method, either as a string or as a collection of tokens I can use to reconstruct the source.<br />\n<br />\nI have a C# to TypeScript code generator which compiles C# interfaces and classes to TypeScript, however it leaves the body of methods empty. If a user implements a method in an automatically generated output file I want to be able to preserve that implementation and put it back into the newly generated output file instead of the default empty implementation.<br />\n<br />\nI would prefer to use the TypeScript language service to do this instead of generating my own parser with a tool like ANTLR however I am not finding much in terms of documentation or examples.<br />\n",
    "PostedDate": "2013-03-25T10:48:58.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1020780",
    "ThreadId": "437928",
    "Html": "I do not understand your use case (specifically the last sentence of the third paragraph. I have not used it from the language service, but I have programmatically parsed, type-checked, and emitted code using the TypeScript compiler. It's really easy, just dig into the source and see what TypeScript is doing. Basically construct a new TypeScript.TypeScriptCompiler (need to give error info and some settings), add source units (including lib.d.ts) which are parsed on add, then just call typeCheck (unless you don't want type checking). The compiler has a scripts property with all the scripts as a complete AST complete w/ type info.<br />\n",
    "PostedDate": "2013-03-25T11:00:38.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1020788",
    "ThreadId": "437928",
    "Html": "Prehaps that wasn't as clear as I could of made it, let me try and explain in more details. When my code generator converts a C# class to a TypeScript class it converts the following C#:<br />\n<pre><code>public class ExampleClass {\n    public string ExampleMethod(int arg1) {\n        return arg1.ToString()\n    }\n}</code></pre>\n\nInto the following TypeScript:<br />\n<pre><code>class ExampleClass {\n    ExampleMethod(arg1: number) : string {\n       return &quot;&quot;;\n    }\n}</code></pre>\n\nWhen it generates the TypeScript it automatically adds it to the target project in a file called ExampleClass.ts. However, if I edit the C# ExampleClass it will cause the TypeScript class to be regenerated. <br />\n<br />\nIt is at this point that I want to parse the TypeScript file to see if the user has added any code, and if they have I want to read it out of the file, and put it back into the newly generated TypeScript file.<br />\n<br />\nBasically I want to be able to take the following TypeScript<br />\n<pre><code>class ExampleClass {\n    ExampleMethod(arg1: number) : string {\n       return &quot;Hello World&quot;\n    }\n}</code></pre>\n\nAnd extract the following for ExampleMethod:<br />\n<pre><code>return &quot;Hello World&quot;</code></pre>\n\nOtherwise when the file is regenerated I will lose my changes to the TypeScript implementation.<br />\n",
    "PostedDate": "2013-03-25T11:18:52.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1022417",
    "ThreadId": "437928",
    "Html": "After researching the options I've decided to parse the TypeScript myself in C#. I plan to generate a parser with ANTLR, this will be more work upfront but should give me more flexibility in the future.<br />\n<br />\nI am working on a open source ANTLR grammar definition for TypeScript at <a href=\"https://github.com/davemckeown/TypeScriptParser\" rel=\"nofollow\">https://github.com/davemckeown/TypeScriptParser</a><br />\n",
    "PostedDate": "2013-03-28T07:20:38.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1307587",
    "ThreadId": "437928",
    "Html": "I've a problem very similar to your: parsing autogenerated typescript code to preserve methods implementation / additions during the regeneration phase.<br />\n<br />\nTwo questions: now that Roslyn is more mature than an year ago, have you finded something in its language services that can help on this kind of work?<br />\n<br />\nAnd what about your work on an open source ANTRL grammar definition for Typescript? I've tryed the link in your last post but it doesn't works :(<br />\n",
    "PostedDate": "2014-09-23T16:07:10.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1308145",
    "ThreadId": "437928",
    "Html": "Hi Marcocenz,\r<br />\n<br />\nI decided to abandon my effort to implement a standalone TypeScript parser in favor of using the TypeScript language service. This was for my C# to TypeScript generator, and I did not solve this problem, but I planned to use a tool like like typescript-tools to potentially solve it:\r<br />\n<br />\n<a href=\"https://github.com/clausreinke/typescript-tools\" rel=\"nofollow\">https://github.com/clausreinke/typescript-tools</a><br />\n",
    "PostedDate": "2014-09-25T11:34:46.29-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1321243",
    "ThreadId": "437928",
    "Html": "@dmck: How far have you got with your ANTRL grammar definition for TypeScript? There are efforts to build <a href=\"https://netbeans.org/bugzilla/show_bug.cgi?id=233197\" rel=\"nofollow\">TypeScript support for NetBeans</a> and now I want to connect the dots because people there are also looking for an ANTLR grammar definiton. Maybe we can work together?<br />\n",
    "PostedDate": "2014-11-12T04:31:34.323-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1321347",
    "ThreadId": "437928",
    "Html": "Hi bennyn\r<br />\n<br />\nI followed dmck's excellent suggestion: use TypeScript parser features included in TypeScript compiler / language services.\r<br />\nIt's certainly a well-written, full-featured parser :)\r<br />\nI then incorporated everything in my C # project using ChakraHost to execute the typescript/javascript typescript parser.\r<br />\nIf u need details, don't hesitate to contact me.<br />\n",
    "PostedDate": "2014-11-12T09:59:17.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1321448",
    "ThreadId": "437928",
    "Html": "Hey marcocenz, thank you very much for your input and your offer! We want to bring TypeScript support to NetBeans IDE and the current concerns are the following: &quot;Regarding reusing compiler from node.js package. The compiler is able to provide AST, but the problem is that you need to run parser and lexer almost after every keystroke&quot; (quoting Petr Pisl). I myself have unfortunately never built a parser for a programming language and therefore try to connect people who know how things work / should work. You can follow our current discussion here: <a href=\"https://netbeans.org/bugzilla/show_bug.cgi?id=233197\" rel=\"nofollow\">https://netbeans.org/bugzilla/show_bug.cgi?id=233197</a><br />\n",
    "PostedDate": "2014-11-12T13:29:16.003-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]