{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:22.953-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "If you want to make a class immutable, you can use Object.freeze. It would be nice if this could be put in the class definition. For example:\r\n\r\nfreeze class Point {\r\n    constructor (public x: number, public y: number) {\r\n    }\r\n}\r\n\r\nwould generate:\r\n\r\nvar Point = (function () {\r\n    function Point(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        Object.freeze(this);\r\n    }\r\n    return Point;\r\n})();\r\n\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-25T13:54:38.893-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Add support for 'freeze' keyword in class defintion",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 332
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Assigning to Jonathan who is managing our suggestions.",
      "PostedDate": "2012-11-05T17:23:15.517-08:00",
      "Id": 81730
    },
    {
      "Message": "See also: sealed (https://typescript.codeplex.com/workitem/1275)",
      "PostedDate": "2014-04-15T10:58:49.683-07:00",
      "Id": 141965
    },
    {
      "Message": "Possible use case: https://typescript.codeplex.com/discussions/542304#post1234383\n",
      "PostedDate": "2014-04-15T11:00:06.42-07:00",
      "Id": 141968
    },
    {
      "Message": "This should be done for \"sealed\" as well.\n\nI may request as well this be allowed to be added to interface types.  It would solve a bunch of possible issues (see use case link above).",
      "PostedDate": "2014-04-15T11:13:31.283-07:00",
      "Id": 141971
    },
    {
      "Message": "More possibly related discussions: https://typescript.codeplex.com/discussions/431704\n",
      "PostedDate": "2014-04-15T11:15:53.917-07:00",
      "Id": 141973
    },
    {
      "Message": "Its a nice idea, except the performance of frozen (http://jsperf.com/performance-frozen-object/26) and sealed (http://jsperf.com/performance-frozen-object/26) objects is currently terrible across browsers.\n\nI'd backburner it as I'm not sure making something easily accessible that significantly harms performance is a good idea. I'd assume VMs would catch up sometime, and you can always manually call it for protection",
      "PostedDate": "2014-06-10T15:22:31.58-07:00",
      "Id": 149319
    },
    {
      "Message": "@BenAAdams You posted the same link twice. ;)\n\nI noticed that as well, but I didn't bother to bring it up because *freeze* is not a big problem - *sealed* is, and mainly with Chrome.\n\nhttp://jsperf.com/freeze-vs-seal-vs-normal/4\n(*freeze* was fixed in Chrome: https://code.google.com/p/chromium/issues/detail?id=115960 - but *sealed* is still pending)\n\nThe point of this post is to give developers the choice using a simple modifier.  I would wager that the greater number of people are creating business related apps, not games, or anything requiring high speed processing.  If they were, I'm sure they'd be bench testing for best performance - like I do all the time (because it actually matters for what I'm doing).",
      "PostedDate": "2014-06-11T00:05:19.913-07:00",
      "Id": 149362
    }
  ]
}