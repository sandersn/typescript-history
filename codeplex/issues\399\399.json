{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "acls's solution is correct. Separating out lib.d.ts into browser and non-browser components is something we're investigating.",
    "ClosedDate": "2012-11-13T15:54:49.297-08:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "interface Node {\r\n    type: string;\r\n};\r\n\r\ngets me:\r\n C:/Program Files (x86)/Microsoft SDKs/TypeScript/0.8.0.0/lib.d.ts(6607,4): Type of overridden member 'type' is not subtype of original member defined by type 'Node'\r\n1>  C:/Program Files (x86)/Microsoft SDKs/TypeScript/0.8.0.0/lib.d.ts(6839,4): Type of overridden member 'type' is not subtype of original member defined by type 'Node'\r\n1>  C:/Program Files (x86)/Microsoft SDKs/TypeScript/0.8.0.0/lib.d.ts(6889,4): Type of overridden member 'type' is not subtype of original member defined by type 'Node'",
    "LastUpdatedDate": "2012-11-13T15:54:49.297-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-11-09T18:47:33.553-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Type of overridden member 'type' is not subtype of original member defined by type ",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 399
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "My problems related to the fact that lib.d.ts has an existing Node interface.\n\nThis really highlights another problem.  This is a node.js application.  Why is all this DOM stuff (interfaces, types, etc.) being applied.  I really should have to specify a browser.d.ts the same way I have to specify a .ts file for node.",
      "PostedDate": "2012-11-10T09:41:17.247-08:00",
      "Id": 82164
    },
    {
      "Message": "You can add this line to tell it to not use lib.d.ts:\n/// <reference no-default-lib=\"true\"/>",
      "PostedDate": "2012-11-13T07:47:38.303-08:00",
      "Id": 82360
    },
    {
      "Message": "Sorry, that was an incomplete answer. That line only fixes the intellisense errors, not the build errors.\nYou also need to add the nolib flag to the build command.\n--nolib\nBut then you'll get a bunch of new errors because you actually need some of the declarations in lib.d.ts.\n\nSo what you should really do is copy and modify lib.d.ts and reference the modified version in your project.\nlib.d.ts already has the no-default-lib reference, so you would only need to add the nolib flag to the build command.\n\nThat will get your project to build, but it does highlight the problem, as you pointed out, that lib.d.ts should be split into lib.d.ts and browser.d.ts.",
      "PostedDate": "2012-11-13T08:26:55.49-08:00",
      "Id": 82368
    }
  ]
}