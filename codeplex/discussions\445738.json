[
  {
    "Id": "1051825",
    "ThreadId": "445738",
    "Html": "For those of you who are testing the 0.9.0 alpha, I just wanted to give you a quick heads up that we've just released a newer build (which we're calling 'beta' to easily tell them apart).  It's available in: \r<br />\n<br />\n<a href=\"https://typescript.codeplex.com/releases/view/105503\" rel=\"nofollow\">https://typescript.codeplex.com/releases/view/105503</a>\r<br />\n<br />\nIt contains some of the other new features we'd planned for the upcoming release, including enums, &quot;export = &quot; and the ability to grow classes and functions with modules of the same name.\r<br />\n<br />\nTry it out and let us know what you think.  <br />\n",
    "PostedDate": "2013-06-02T11:46:27.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1051952",
    "ThreadId": "445738",
    "Html": "What is missing from this release versus the 0.8 series? The 0.9 alpha was missing:<br />\n<ul>\n<li>Refactor/rename </li>\n<li>Debugging support</li>\n<li>Find all reference</li>\n<li>\nCompile-on-save<br />\n</li>\n</ul>\nHave these been added to the beta?\r<br />\n<br />\n<br />\nRichard<br />\n",
    "PostedDate": "2013-06-02T23:59:08.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052121",
    "ThreadId": "445738",
    "Html": "Great. Is there any chance you could write a blog post on the new changes? It would be helpful to explain the &quot;export =&quot; and what changes have been made to enums since 0.8.3.<br />\n",
    "PostedDate": "2013-06-03T06:17:05.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052126",
    "ThreadId": "445738",
    "Html": "@rbirkby\r<br />\n<br />\nThe beta should include the features that were missing from the alpha. If you get a chance to check it out, please let us know if something is missing or doesn't appear to be working correctly. \r<br />\n<br />\n@MgSam \r<br />\n<br />\nWe'll do a blog post on the new features for the release. Until then, I believe there are a few threads on here talking about the directions we took. You may also be able to look through the unit tests for &quot;export =&quot; and &quot;enum&quot; until then to see examples using those features. <br />\n",
    "PostedDate": "2013-06-03T06:37:05.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052812",
    "ThreadId": "445738",
    "Html": "This beta does not work correctly. When loading project with *.ts files there is error message like 'TypeScriptLanguageService 0.8.9.1 did not load correctly'. Editor does not have lists with classes/types and functions. Without these features, this beta is useless.<br />\n",
    "PostedDate": "2013-06-04T13:54:34.86-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052813",
    "ThreadId": "445738",
    "Html": "@codefox - I haven't seen this issue before.  Could you try uninstalling the TypeScript plugin and reinstalling it?  It may not work with WebEssentials, so if you happen to have that installed, you may want to uninstall that first before running the beta.<br />\n",
    "PostedDate": "2013-06-04T13:59:07.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052836",
    "ThreadId": "445738",
    "Html": "Clarification. This beta does not work correctly with VS Express For Web. With VS PRO these list are visible. So, plesae fix this beta to be usable for Express users.\r<br />\nAs for errors, functions within generic classes, are not visible on list.<br />\n",
    "PostedDate": "2013-06-04T15:03:42.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053280",
    "ThreadId": "445738",
    "Html": "Could you guys add a beta channel for npm?<br />\n",
    "PostedDate": "2013-06-05T13:24:44.89-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053370",
    "ThreadId": "445738",
    "Html": "@jonturner I'm fairly sure that for enums at least, you haven't mentioned any changes publicly, at least not since reverting the <code>enum Foo{ bar: 3 }</code> syntax. I looked through the unit tests and I was saddened to not see any string-enum support yet, so I assume the changes were not about syntax.<br />\n",
    "PostedDate": "2013-06-05T20:08:06.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053444",
    "ThreadId": "445738",
    "Html": "The 0.9 beta enum solution is not bad all and there is support for string to enum conversion and vice versa:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">enum</span> Foo {\n    bar = 0,\n    baz = 1\n}\n\n<span style=\"color:Blue;\">var</span> barVal = Foo.bar;\n<span style=\"color:Blue;\">var</span> barLabel = Foo[Foo.bar]; \n<span style=\"color:Blue;\">var</span> fooParse: Foo = Foo[<span style=\"color:#A31515;\">&quot;bar&quot;</span>]; <span style=\"color:Green;\">// equiv. to say Enum.parse(typeof(Foo), &quot;bar&quot;)</span>\n<span style=\"color:Blue;\">var</span> fooEnumerate = Object.keys(Foo).filter(item =&gt; isNaN(parseInt(item)));\n\nconsole.log(barVal); <span style=\"color:Green;\">// 0</span>\nconsole.log(barLabel);  <span style=\"color:Green;\">// &quot;bar&quot;</span>\nconsole.log(fooParse);  <span style=\"color:Green;\">// 0</span>\nconsole.log(fooEnumerate.join(<span style=\"color:#A31515;\">&quot;,&quot;</span>)); <span style=\"color:Green;\">// &quot;bar&quot;, &quot;baz&quot;</span>\r\n</pre></div>There are a couple of issues:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">enum</span> Foo {\n    bar = 0,\n    baz = 1,\n    qux, <span style=\"color:Green;\">// overwrites bar</span>\n    22 <span style=\"color:Green;\">// shouldn&#39;t permit numeric labels</span>\n}\r\n</pre></div>We shouldn't permit numeric enum labels because it affects the Object.keys enumeration.<br />\n",
    "PostedDate": "2013-06-06T01:24:55.843-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053699",
    "ThreadId": "445738",
    "Html": "@AndrewGaspar - I just noticed someone has created a new npm package just for that: <a href=\"https://npmjs.org/package/typescript-dev\" rel=\"nofollow\">https://npmjs.org/package/typescript-dev</a><br />\n",
    "PostedDate": "2013-06-06T11:03:00.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053717",
    "ThreadId": "445738",
    "Html": "@codefox - I've put a new beta up, which hopefully fixes the issue with express.  If you get a chance to try it out, please let me know if it works for you.<br />\n",
    "PostedDate": "2013-06-06T11:36:33.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053752",
    "ThreadId": "445738",
    "Html": "@jonturner - thanks for fix, now these lists are working correctly <br />\n",
    "PostedDate": "2013-06-06T13:36:07.727-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1053793",
    "ThreadId": "445738",
    "Html": "\r\n<div dir=\"ltr\">@jonturner - Thanks!</div>\r\n<div><br clear=\"all\">\r\n<div>Andrew Gaspar</div>\r\n<br>\r\n<br>\r\n<div></div>\r\n</div>\r\n",
    "PostedDate": "2013-06-06T15:52:58.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1054130",
    "ThreadId": "445738",
    "Html": "I'm getting an error in 0.9 for something that worked before.  Previously I had this:<br />\n<pre><code>// dojo.d.ts\ndeclare module dojo.query.pseudos {\n    export function has(name: any, condition: any): any;\n    export function visible(name: any, condition: any): any;\n    export function hidden(name: any, condition: any): any;\n    export function selected(name: any, condition: any): any;\n    export function checked(name: any, condition: any): any;\n    export function disabled(name: any, condition: any): any;\n    export function enabled(name: any, condition: any): any;\n    export function input(name: any, condition: any): any;\n    export function button(name: any, condition: any): any;\n    export function header(name: any, condition: any): any;\n}\ndeclare module dojo {\n    export function query(refNode: Node): any;\n    export function query(query: string, refNode?: Node): any;\n}</code></pre>\n\nBut now it gives the error &quot;Duplicate identifier 'query.'&quot;\r<br />\n<br />\nIf I rearrange the order of the blocks so the function is declared first the declaration has no errors but every usage of query has the error &quot;Unable to invoke type with no call signatures.&quot;\r<br />\n<br />\nIs this a bug or should I be doing my declaration differently now?<br />\n",
    "PostedDate": "2013-06-07T10:48:00.377-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1054148",
    "ThreadId": "445738",
    "Html": "This discussion has been copied to a work item. Click <a href=\"https://typescript.codeplex.com/workitem/1126\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2013-06-07T11:18:28.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1054186",
    "ThreadId": "445738",
    "Html": "I'll take that to mean it's not expected behaviour. :)<br />\n",
    "PostedDate": "2013-06-07T14:56:02.29-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]