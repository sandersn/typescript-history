{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:09.05-07:00",
    "CommentCount": 10,
    "Custom": null,
    "Description": "I can't find a good way to programmatically compile TypeScript using the NPM module. What I'd like to do is the following.\r\n\r\n> npm install typescript\r\n\r\nvar TypeScript = require('typescript');\r\nvar compiler = new TypeScript.TypeScriptCompiler();\r\n// ... do something with the compiler here",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 0.9.0",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-04T08:10:50.41-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "NPM module should export the TypeScriptCompiler",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 34,
    "Id": 97
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Ideally TypeScript would provide an interface similar to the coffee-script compiler module which works like this:\n\nvar coffee = require('coffee-script');\ncoffee.compile(\"a = 1\");\n//=> '(function() {\\n  var a;\\n\\n  a = 1;\\n\\n}).call(this);\\n'",
      "PostedDate": "2012-10-04T08:21:35.37-07:00",
      "Id": 78556
    },
    {
      "Message": "+10 on this one. This interface is required to smoothly integrate TS with a node asset manager...",
      "PostedDate": "2012-10-04T13:46:07.163-07:00",
      "Id": 78605
    },
    {
      "Message": "+1! I vote this as the developer of LIVEditor (live code editor for the web, at http://liveditor.com), since I guess LIVEditor will mostly like support TypeScript in the future.",
      "PostedDate": "2012-10-06T23:22:34.813-07:00",
      "Id": 78879
    },
    {
      "Message": "Not just the compiler, also the language services, please.\n\n'typescript.js' and friends are included in the npm package, but do not export anything.\nThey cannot export anything because doing so would drop them out of the global module, preventing them from other parts of the compiler, which also rely on the global module and reference path includes.\n\nSo it seems that a pre-requisite for this ticket would be to modularize the compiler (and language services), which would also be a great driver for testing and improving the external module system support.\n\nrelated issue: http://typescript.codeplex.com/workitem/521",
      "PostedDate": "2012-12-01T13:59:44.65-08:00",
      "Id": 83408
    },
    {
      "Message": "Changing to suggestion assigned to Jonathan",
      "PostedDate": "2013-01-28T17:08:13.44-08:00",
      "Id": 87606
    },
    {
      "Message": "We're looking into language extensions that will make it much easier to export the compiler.  In 0.9.0, we're planning a way of saying \"export = <symbol>\" which would allow you to export the internal symbol/module that represents the compiler.\n\nDoing so would be experimental in that the compiler API may change.  We have not fully worked out all the scenarios to build the proper API, yet.",
      "PostedDate": "2013-03-07T14:53:53.8-08:00",
      "Id": 92579
    },
    {
      "Message": "Any updates on this?",
      "PostedDate": "2014-03-09T14:45:50.397-07:00",
      "Id": 136336
    },
    {
      "Message": "Any news on this one? I'm trying to use it like the coffee-script example in the description to create a asset compiler for sbt-web.  Just like https://github.com/sbt/sbt-coffeescript/blob/master/src/main/resources/coffee.js ",
      "PostedDate": "2014-05-22T15:20:43.413-07:00",
      "Id": 147482
    },
    {
      "Message": "It is currently possible to do this using the vm module. Use ```fs.readFile()``` to read typescript.js from ./node_modules/typescript/bin, then add ```module.exports = TypeScript;``` at the end and run this via ```vm.runInNewContext()```.\n\nSee [my compiler wrapper](https://github.com/Arnavion/libjass/blob/master/gulplib/typescript.js#L29) lines 29 to 42. Something similar is done by [grunt-typescript](https://github.com/k-maru/grunt-typescript/blob/master/src/index.ts#L16).\n\nThe exported TypeScript object will have the TypeScriptCompiler available to use. There is no documentation on how to use TypeScriptCompiler, but you can look at how BatchCompiler does it in tsc.js - BatchCompiler is what runs when you invoke tsc on the shell and internally uses TypeScriptCompiler.\n\nThe caveat is that the npm package does not contain the language service, so if you need that, you'd have to build typescript yourself and then check it in along with your code.\n\nOf course, this is all a hack while we wait for the TS team to actually export the compiler from typescript.js and document the compiler API. Some of us have been hacking at extending the compiler in #typescript on Freenode so you're welcome to join and ask.",
      "PostedDate": "2014-05-23T17:07:57.657-07:00",
      "Id": 147596
    },
    {
      "Message": "Thanks Arnavion! Great examples and links.  I manage to get the TypeScript reference and will dive into the compile 'API' now.",
      "PostedDate": "2014-05-25T10:32:58.93-07:00",
      "Id": 147650
    }
  ]
}