{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Upon closer inspection this is actually by design, although the error message is very confusing.\n\nAn implements clause only constrains the instance side of the class. But construct signatures are on the static side of a type. There's currently no way to enforce a static side constraint in this fashion. Alternatively, if the intention was for the interface to constrain the instance side of the class then you'd effectively be creating instances which could be new'd to return classes themselves, which is not something we currently support.\n\n",
    "ClosedDate": "2013-08-23T11:39:02.377-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "``\r\ninterface foo\r\n{\r\n\tnew();\r\n}\r\n\r\ndeclare class foo2 implements foo\r\n{\r\n\tconstructor();\r\n}\r\n``\r\n\r\nError: \"foo\" requires a construct signature but \"foo2\" lacks one.\r\n\r\nI suppose a class with a constructor that matches the parameters list of a \"new\" signature of the interface should satisfy that interface constraint?\r\n",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-03T02:35:29.777-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Does TypeScript class satisfies newable interface constraint?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 1302
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the report, that should definitely work, marking as active.",
      "PostedDate": "2013-07-03T12:34:55.53-07:00",
      "Id": 105018
    }
  ]
}