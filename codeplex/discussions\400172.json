[
  {
    "Id": "929904",
    "ThreadId": "400172",
    "Html": "\r\n<p>I would like to suggest a new section about implementing an interface with code example.</p>\r\n<p>For me, it was suprising that the example code ( h<a href=\"http://www.typescriptlang.org/tutorial/\">ttp://www.typescriptlang.org/tutorial/</a>&nbsp;)&nbsp;compiled, without the Student explicitly implementing the Person imterface, which is what I expect\r\n in a typed language.</p>\r\n<p>It then took me a while to find a section in the documentation which explains this, but it was the last paragraph in 8.1.1 which is:</p>\r\n<p><em>&quot;Note that because TypeScript has a structural type system, a class doesn&rsquo;t need to explicitly state that it implements an interface&mdash;it suffices for the class to simply contain the appropriate set of instance members. The implements clause\r\n of a class provides a mechanism to assert and validate that the class contains the appropriate sets of instance members, but otherwise it has no effect on the class type.&quot;</em></p>\r\n<p>I think a new section could be named something like &quot;Class interface implementation specification&quot; (and be located just before or after the section 8.1.1 &quot;Class heritage specification&quot;).</p>\r\n<p>In such a section I think there also should be an explicit syntax example (i.e. not just the abstract kind of syntax, Backus&ndash;Naur Form I believe is used in 8.1.1) about how to implement an interface.</p>\r\n<p>As far as I understand the above quoted specification text about interface, it is only optional to write that a class implements an interface, but it should work the same as if you do not write it.</p>\r\n<p>In the currently published tutorial example (about Student and Person) the code compiles fine, so therefore I think it should work the same way if I simply add &quot;implements Person&quot; but it does not, because the types are then not the same.</p>\r\n<p>To make it work with an explicit interface, I also had to change the types of firstname and lastname to be explicit declared as strings, like this:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">class</span> Student <span style=\"color:blue\">implements</span> Person {\r\n    fullname : string;\r\n    constructor(<span style=\"color:blue\">public</span> firstname: string, <span style=\"color:blue\">public</span> middleinitial, <span style=\"color:blue\">public</span> lastname: string) {\r\n        <span style=\"color:blue\">this</span>.fullname = firstname &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; middleinitial &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; lastname;\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Another alternative for the code example to work the same with or without the explicit &quot;implements&quot; clause would be to change the interface like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">interface</span> Person {    firstname: any;    lastname: any; }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Then just adding the &quot;implements&quot; clause as below would compile, without having to specify the type in firstname and lastname</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">class</span> Student <span style=\"color:blue\">implements</span> Person {\r\n    fullname : string;\r\n    constructor(<span style=\"color:blue\">public</span> firstname, <span style=\"color:blue\">public</span> middleinitial, <span style=\"color:blue\">public</span> lastname) {\r\n        <span style=\"color:blue\">this</span>.fullname = firstname &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; middleinitial &#43; <span style=\"color:#a31515\">&quot; &quot;</span> &#43; lastname;\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>My point is that if an interface is defining properties with a certain type, then the class (which can be used as implementing the interface) should also have the same types for those properties, regardless of whether or not the optional &quot;implements&quot; clasue\r\n is used.</p>\r\n<p>As it seems to me, it currently works more like an untyped dynamic language if you leave out the optional implements clause.&nbsp;</p>\r\n<p>Is that really intentional or is it a bug ?</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-10-20T16:18:33.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]