{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We did have an error in this space, which is fixed in the release-097 branch (and develop), but I don't get an error with your example anymore.\n\nWhat error are you seeing?",
    "ClosedDate": "2014-02-21T13:28:33.81-08:00",
    "CommentCount": 8,
    "Custom": null,
    "Description": "I have a case where I'm creating an object by calling a method on another module. The type returned from that method implements an interface. If I want to return that type from the calling module, I need to import the interface.\r\n\r\nHere's a basic outline of what I want the code to look like:\r\n\r\n```\r\nimport util = require('../util');\r\n\r\nexport var thing = util.x.y.getThing();\r\n```\r\n\r\nBut instead, I have to reference the file containing the interface directly:\r\n\r\n```\r\nimport util = require('../util'); //This really \"redirects\" to a file that is in another repository\r\nimport file = require ('../../shared-project/x/y'); //I don't want to have to include this\r\n\r\nexport var thing = util.x.y.getThing();\r\n```",
    "LastUpdatedDate": "2014-03-31T16:17:53.287-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-19T15:41:11.59-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Interface referencing issue",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2196
  },
  "FileAttachments": [
    {
      "FileId": 803087,
      "FileName": "2196.zip",
      "DownloadUrl": ".\\803087"
    },
    {
      "FileId": 804390,
      "FileName": "2196-exportimport.zip",
      "DownloadUrl": ".\\804390"
    }
  ],
  "Comments": [
    {
      "Message": "I'm not quite following your repro. Can you clarify exactly where the types are defined? The type A returned by getThing must be defined in util.ts (or some file it references) in which case things are working correctly as far as I can tell. If the interface B that A implements is defined in y.ts then util.ts would have to reference y.ts in order for this code to work correctly which also appears to be behaving correctly. Please re-open this issue with exactly what pattern you're using with util and y that's causing this issue.",
      "PostedDate": "2014-02-19T17:48:50.56-08:00",
      "Id": 134136
    },
    {
      "Message": "I've attached an example that roughly models the scenario. Look for the compile error in test.ts.\r\n\r\nI don't see how to re-open the issue...",
      "PostedDate": "2014-02-20T15:04:33.347-08:00",
      "Id": 134261
    },
    {
      "Message": "\n\r\n\r** Closed by danquirk 02/19/2014 5:48PM",
      "PostedDate": "2014-02-19T17:48:55.537-08:00",
      "Id": 134264
    },
    {
      "Message": "Nevermind, I found the re-open button",
      "PostedDate": "2014-02-20T15:31:24.273-08:00",
      "Id": 134266
    },
    {
      "Message": "I did try to use \"import export\", but it causes a different compiler error. I've attached the example using \"import export\".\r\n\r\nNote that I don't want to have to reference the file containing the interface directly, as it's several paths removed from the current location. Is it not possible to both reference interfaces (and Enums) and call methods on my util \"namespace\"?",
      "PostedDate": "2014-02-21T12:59:45.993-08:00",
      "Id": 134383
    },
    {
      "Message": "What's happening is the following. \n\nIf you do the following:\n````\nexport var thing = _thing;\n````\n_thing is used in a value position, which in this case is only the function; so if you export that variable you only export the value side. If you want to export both the value and the type side (i.e. the function and the interface), you need to do the following:\n````\nexport import thing = _thing;\n````\n\nFor reference consider the following in test.ts:\n````\nimport thingModule = require('../util/util/thing/thing');\n\nvar thingValue = thingModule;\nimport thingAlias = thingModule;\n\nvar x: thingModule.IThing; // valid\nvar y: thingAlias.IThing; //valid\n\nvar z: thingValue.IThing; // Error\nvar z2 = thingValue.getThing();\n````\n\r\n\r** Closed by paulb 02/21/2014 11:44AM",
      "PostedDate": "2014-02-21T11:44:06.487-08:00",
      "Id": 134384
    },
    {
      "Message": "The error is something like \"bb does not have member util\"",
      "PostedDate": "2014-02-21T14:24:58-08:00",
      "Id": 134398
    },
    {
      "Message": "This is working under 0.9.7",
      "PostedDate": "2014-02-28T12:33:22.01-08:00",
      "Id": 135441
    }
  ]
}