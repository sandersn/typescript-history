[
  {
    "Id": "921911",
    "ThreadId": "398051",
    "Html": "\r\n<ol>\r\n<li>You cannot export a function as a module. </li><li>The &quot;this&quot; modifier is not typed inside the body of an exported function. It should be typed to the exports object.\r\n</li><li>&quot;exports&quot; is not defined, but should be in the context of an external module. Some functions which are exported may be created with factories that need a reference to the original &quot;this&quot; which is not possible now (without tricking the compiler)\r\n</li><li>&quot;module&quot; is not defined. Enabling this would fix the first issue raised as it's exports value could be assigned to a function. Regardless, it should be available...or &quot;this&quot; should reference the module object at root module level (ie outside the scope of\r\n any function, class, etc.) </li><li>as far as I can tell, it's not possible to use the import construct to import an existing pure JS AMD module. That's a really common scenario. There should be a way to do that...and possibly to link that pre-existing js module to a TypeScript declaration\r\n source file somewhere. </li></ol>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-10-04T07:57:30.583-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921951",
    "ThreadId": "398051",
    "Html": "<p>Thanks for the feedback.</p>\r\n<p>The issue tracker is a better place for issues and would let us track the progress of each of those issues separately.</p>",
    "PostedDate": "2012-10-04T09:21:23.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]