[
  {
    "Id": "928116",
    "ThreadId": "399759",
    "Html": "\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/// &lt;reference path=&quot;jquery.d.ts&quot; /&gt;</span>\n<span style=\"color:blue\">class</span> Greeter {\n    greeting: string;\n    constructor (message: string) {\n        <span style=\"color:blue\">this</span>.greeting = message;\n    }\n    greet() {\n        $.ajax(<span style=\"color:#a31515\">&quot;Contact.html&quot;</span>,{\n            type: <span style=\"color:#a31515\">'GET'</span>,\n            dataType: <span style=\"color:#a31515\">'html'</span>,\n            success: <span style=\"color:blue\">function</span>(response){\n                <span style=\"color:blue\">this</span>.greeting = response;\n\n                <span style=\"color:green\">//when i used with jquery.d.ts, this is list all the member of ajax interface.</span>\n\n\n            }\n        })\n    }\n}  \n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p><strong>How can i assing this.greeting to response. Thanks !</strong></p>\r\n",
    "PostedDate": "2012-10-17T09:00:06.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928190",
    "ThreadId": "399759",
    "Html": "\r\n<p>If I remember correctly, use (response) =&gt; { } instead...</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/// &lt;reference path=&quot;jquery.d.ts&quot; /&gt;</span>\n<span style=\"color:blue\">class</span> Greeter {\n    greeting: string;\n    constructor (message: string) {\n        <span style=\"color:blue\">this</span>.greeting = message;\n    }\n    greet() {\n        $.ajax(<span style=\"color:#a31515\">&quot;Contact.html&quot;</span>,{\n            type: <span style=\"color:#a31515\">'GET'</span>,\n            dataType: <span style=\"color:#a31515\">'html'</span>,\n            success: (response) =&gt; {\n                <span style=\"color:blue\">this</span>.greeting = response;\n\n                <span style=\"color:green\">//when i used with jquery.d.ts, this is list all the member of ajax interface.</span>\n\n\n            }\n        })\n    }\n}  \n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-10-17T10:36:30.467-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928502",
    "ThreadId": "399759",
    "Html": "\r\n<p>Hi Please take a look at my picture.</p>\r\n<p><img src=\"http://sphotos-f.ak.fbcdn.net/hphotos-ak-ash3/550913_507923922551813_292869502_n.jpg\" alt=\"\" width=\"852\" height=\"478\"></p>\r\n<p><strong>You can see this in jquery ajax function is the this of ajaxsettings, what i want is access the this.Content to assign to response.</strong></p>\r\n<p><strong>Please help me !</strong></p>\r\n",
    "PostedDate": "2012-10-17T20:00:13.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "928513",
    "ThreadId": "399759",
    "Html": "<p>I think this is just a bug... You're code is correect and this.Content should be accessible from within your function given you're using a lambda.&nbsp; If you hover over this.Content it should say it's of type 'string' which means it figured it out it's just an intelisense bug that you're not getting Content in the list as yout type. I've seen this bug as well with Lambda's.</p>\r\n<p>Try creating a&nbsp;\"var&nbsp;_this&nbsp;= this;\" variable outside your ajax call and use that in your callback. You may have better luck with the intellisense.&nbsp; That's what they're going to generate for you anyway so it won't result an any larger JS then you would have already had.</p>",
    "PostedDate": "2012-10-17T20:57:42.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "929116",
    "ThreadId": "399759",
    "Html": "<p>Thanks you for your reply, this is work now !</p>",
    "PostedDate": "2012-10-18T18:16:16.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]