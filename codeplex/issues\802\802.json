{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "=> means \"capture lexical 'this'\". We don't want the compiler to try to guess if you really meant that or not based on some heuristics about the left-hand side of an assignment.",
    "ClosedDate": "2013-03-11T09:24:39.333-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "The following TypeScript code\r\n```\r\nObject.prototype.myToString = () => {\r\n    return this.toString();\r\n};\r\n```\r\ncompiles to:\r\n```\r\nvar _this = this;\r\nObject.prototype.myToString = function () {\r\n    return _this.toString();\r\n};\r\n```\r\nI don't see a case where lexical scoping rules needs to be applied on prototype extension methods. I expect the compiler to not do this or at least give a error/warning in this case to use regular function().",
    "LastUpdatedDate": "2013-08-13T12:22:38.38-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-08T15:53:02.12-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Don't apply lexical scoping rules on prototype extension methods",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 802
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Fair enough. A code analyzer instead can warn about that. TypeScript ReSharper?",
      "PostedDate": "2013-03-11T23:10:58.35-07:00",
      "Id": 93003
    }
  ]
}