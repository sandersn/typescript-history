{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "https://typescript.codeplex.com/workitem/2215",
    "ClosedDate": "2014-03-17T14:38:50.137-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "```\r\nclass Test {\r\n\r\n  constructor() {\r\n    var o = this;\r\n  }\r\n\r\n  start = () => {\r\n    var o = this;\r\n    o.test();\r\n  }\r\n\r\n  test() {\r\n  }\r\n\r\n}\r\n```\r\n\r\nI get \"Initializer of instance member variable 'start' cannot reference identifier 'o' declared in the constructor.\"\r\n\r\nIt used to work in earlier versions of TypeScript.\r\n\r\n",
    "LastUpdatedDate": "2014-03-17T14:38:50.137-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-17T12:30:09.273-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "this in class",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2329
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This is a bug relating to some scope confusion between the constructor and the arrow functions. You can work around it by renaming either variable:\n\n```\nclass Test {\n  constructor() {\n    var o = this;\n  }\n\n  start = () => {\n    var t = this;\n    t.test();\n  }\n\n  test() {\n  }\n}\n```",
      "PostedDate": "2014-03-17T14:38:33.897-07:00",
      "Id": 137151
    }
  ]
}