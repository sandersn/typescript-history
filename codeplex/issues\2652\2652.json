{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Sometimes I need to enumerate an enum's values. Currently I need to use object key enumeration and filter out either the numeric or non-numeric values.\r\n\r\nAn alternative would be if typescript made \"length\" a reserved property on the enum that contained the number of entries.\r\n\r\nUsing a \"MAX\" final entry hurts code analysis. For example, when ensuring all entries are inside of a switch block.",
    "LastUpdatedDate": "2014-12-17T15:03:41.453-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-12-17T15:03:41.453-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Generated enums should contain a length property.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2652
  },
  "FileAttachments": [],
  "Comments": []
}