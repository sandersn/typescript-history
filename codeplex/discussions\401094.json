[
  {
    "Id": "933736",
    "ThreadId": "401094",
    "Html": "\r\n<p>The MS type definition files does not use an &quot;I&quot; prefix interface naming convention. Instead they only have upper case first letters. Same thing with most (but not all) existing community added type definition files it seems (&nbsp;<a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/master/Definitions\">https://github.com/borisyankov/DefinitelyTyped/tree/master/Definitions</a>&nbsp;)</p>\r\n<p>I wonder about the reasoning for this. I think an &quot;I&quot; prefix does make sense, clearly separating interfaces from classes, and making obvious what is only an interface - with no meaning outside of typescript.</p>\r\n",
    "PostedDate": "2012-10-29T04:16:23.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "933891",
    "ThreadId": "401094",
    "Html": "<p>There are a couple reasons, but it largely comes down to a matter of taste.</p>\r\n<p>Most of what is described in .d.ts files are interfaces, meaning that most of the code you write which connects to external libraries will have \"I\" in them.&nbsp; This isn't particularly helpful to the developer to know it's an interface, and with so many interface, the code beings to look very \"I\"-heavy.&nbsp;</p>\r\n<p>The second is that because TypeScript is structurally typed, interfaces are how you describe the types themselves.&nbsp; This sets it apart from other common languages with interfaces, and again, leads to&nbsp;having lots of interfaces for certain coding styles.</p>\r\n<p>Ultimately, though, it's up to the user whether or not they use 'I' for their projects.</p>",
    "PostedDate": "2012-10-29T10:05:12.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]