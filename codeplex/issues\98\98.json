{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is fixed with http://typescript.codeplex.com/SourceControl/changeset/a8a91f9e44c9",
    "ClosedDate": "2012-10-10T10:43:03.26-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Currently if your TypeScript file contains classes that use inheritance, the TypeScript compiler emits the __extend function at the very top of the .js file.\r\n\r\n \r\n\r\nThis breaks strict-mode checking for the entire toplevel, forcing you to enable it in every closure instead.\r\n\r\n \r\n\r\nI'd say the TypeScript language should check for the magic literal and keep it at the top line in the emitted javascript if present.",
    "LastUpdatedDate": "2017-11-27T11:51:35.14-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "High",
      "Severity": 150,
      "Id": 3
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-04T08:44:11.527-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "'use strict' compatibility",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 7,
    "Id": 98
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "If I write this code:\n\n\"use strict\";\nclass A {}\nclass B extends A {}\n\nThe __extends function is injected at the top of the file, thus making \"use strict\" not the first statement, and disabling strict mode.\n\nvar __extends = this.__extends || function (d, b) {\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n}\n\"use strict\";\nvar A = (function () {\n    function A() { }\n    return A;\n})();\nvar B = (function (_super) {\n    __extends(B, _super);\n    function B() {\n        _super.apply(this, arguments);\n    }\n    return B;\n})(A);\n",
      "PostedDate": "2012-10-04T08:49:30.49-07:00",
      "Id": 78561
    }
  ]
}