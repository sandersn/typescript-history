{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:55.737-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Is there a way to add/extend static methods to primitive types without having modify lib.d.ts?\r\n\r\nI able to extend the String interface in an external file to add instance methods but would like a cleaner way to add functions to the String var defined in lib.d.ts.\r\n\r\ndeclare var String: {\r\n    new (value?: any): String;\r\n    (value?: any): string;\r\n    prototype: String;\r\n    fromCharCode(...codes: number[]): string;\r\n\r\n    //MS Ajax Extension\r\n    format(format: string, ...args: any[]): string;\r\n    localeFormat(format: string, ...args: any[]): string;\r\n}\r\n\r\nI am currently using the CLI w/ --nolib flag and referencing a custom lib.d.ts file in order to compile my ts file.\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-04T00:14:39.467-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Extending primitive types",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 81
  },
  "FileAttachments": [],
  "Comments": []
}