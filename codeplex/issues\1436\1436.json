{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T13:31:19.067-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "One seems unable to assign to types that define string fields in 0.91 (this worked in previous version):\r\n\r\n```\r\ninterface Test {\r\n\ta: string;\r\n\tb: string;\r\n\t\"c-field\": string;\r\n\t\"d-field\": string;\r\n}\r\n\r\nvar test: Test = {\r\n\ta: \"a\",\r\n\tb: \"b\",\r\n\t\"c-field\": \"c\",\r\n\t\"d-field\": \"d\"\r\n};\r\n```\r\n\r\nCompiler now complains that the object being assigned to 'test' does not have a \"c-field\" property. The only way to resolve this from what I can tell is to cast the assigning object to <any> beforehand. This is reproducible on the playground.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-07T01:31:45.517-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "0.9.1 Breaks assignment to types with string fields",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1436
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Marking active",
      "PostedDate": "2013-08-07T09:32:22.563-07:00",
      "Id": 108854
    }
  ]
}