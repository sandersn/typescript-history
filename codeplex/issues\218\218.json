{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "dupe of workitem 159",
    "ClosedDate": "2012-10-10T10:08:58.553-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "The compiler should not allow a class in a module with the same name:\r\n\r\nmodule Test {\r\n  export class Test {\r\n  }\r\n}\r\n\r\nThat generates illogical JavaScript output because the variables will be using the same names and therefore the contents get overwritten.\r\nHere is a sample line which will generate JavaScript errors when executing the resulting JS:\r\n\r\nalert(Test.Test.foo);",
    "LastUpdatedDate": "2013-08-13T13:57:05.68-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-10T05:59:47.077-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Compiler shouldn't allow class in module with the same name",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 218
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for reporting this issue. This is already an item we're tracking and getting the fix for it.",
      "PostedDate": "2012-10-10T10:04:40.61-07:00",
      "Id": 79334
    },
    {
      "Message": "See:\nhttp://typescript.codeplex.com/workitem/159",
      "PostedDate": "2012-10-10T10:08:44.773-07:00",
      "Id": 79336
    },
    {
      "Message": "This is absolutely allowed in ES6 modules.",
      "PostedDate": "2012-10-13T13:32:33.893-07:00",
      "Id": 79687
    },
    {
      "Message": "@rwaldron:\nI haven't read the ES 6 specification but I'm talking here about a bug or problem with the TypeScript compiler.\nSo either the compiler should throw an error and abort the compilation or the compiler should correctly implement such behavior.",
      "PostedDate": "2012-10-13T13:57:40.063-07:00",
      "Id": 79692
    }
  ]
}