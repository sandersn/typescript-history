[
  {
    "Id": "1021794",
    "ThreadId": "438174",
    "Html": "I have just uploaded an initial version of TypeScriptTinyIoC to github : <a href=\"http://github.com/blorkfish/typescript-tiny-ioc\" rel=\"nofollow\">typescript-tiny-ioc</a>.<br />\n\r<br />\nThis is an implementation of an Inversion of Control Container for TypeScript.\r<br />\n<br />\nThis version includes <br />\n<ul>\n<li>Service location via Interfaces</li>\n<li>Domain Events design pattern</li>\n<li>A SampleApp showing both in practice</li>\n<li>Jasmine unit tests</li>\n<li>Backbone.js</li>\n<li>\nHandlebars.js<br />\n</li>\n</ul>\nAny feedback would be appreciated.<br />\n",
    "PostedDate": "2013-03-27T07:35:50.973-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1023859",
    "ThreadId": "438174",
    "Html": "Doesn't the IInterfaceChecker have to exist for every single interface (in duplicate)?<br />\n<pre><code>class IIConfigSettingsService implements IInterfaceChecker {\n    className: string = 'IIConfigSettingsService';\n    methodNames: string[] = ['storeSetting', 'readSetting'];\n}</code></pre>\n\n",
    "PostedDate": "2013-04-01T10:49:32.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1024843",
    "ThreadId": "438174",
    "Html": "Hey nabog,<br />\nThe IInterfaceChecker only needs to exist for the classes that you register with TypeScriptTinyIoC.<br />\nTypeScript will do <strong>compile-time</strong> checking to ensure that classes implement TypeScript interfaces.\r<br />\nThe IInterfaceChecker is a design pattern to ensure <strong>run-time</strong> implementation of an interface, and is a TypeScript implementation of the pattern found in Ross Harmes' and Dustin Diaz' book <a href=\"http://jsdesignpatterns.com/\" rel=\"nofollow\">Pro JavaScript Design Patterns</a>.<br />\n",
    "PostedDate": "2013-04-03T06:53:08.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1024914",
    "ThreadId": "438174",
    "Html": "What if the TypeScript compiler generated actual JavaScript classes for each interface? Then there wouldn't be any need for IInterfaceChecker, right?<br />\n<br />\nSomething along the lines of<br />\n<pre><code>  interface IFoo {\n    foo(bar:string);\n   }</code></pre>\n\nwould compile into<br />\n<pre><code> IFoo = function IFoo() {\n};\n\n IFoo.prototype.foo = function () {}; // Empty implementation</code></pre>\n\nIt would then be possible to figure out if a type implemented a particular interface by comparing with the properties of the generated IFoo.<br />\n",
    "PostedDate": "2013-04-03T08:16:17.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]