{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:42.473-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Say:\r\n\r\n``\r\ndeclare class foo\r\n{\r\n    bar(name: string): any;\r\n    bar(name: \"hello\"): string;\r\n}\r\n\r\ndeclare class foo2 extends foo\r\n{\r\n    bar(name: \"world\"): number;\r\n}\r\n``\r\n\r\nwon't work.  Duplicating the catch-all works:\r\n\r\n``\r\ndeclare class foo\r\n{\r\n    bar(name: string): any;\r\n    bar(name: \"hello\"): string;\r\n}\r\n\r\ndeclare class foo2 extends foo\r\n{\r\n    bar(name: string): any;\r\n    bar(name: \"world\"): number;\r\n}\r\n``\r\n\r\nHowever, Intellisense only finds \"world\" but not \"hello\" (same with the Playground).  The only way to get full Intellisense will be to duplicate the entire thing:\r\n\r\n``\r\ndeclare class foo\r\n{\r\n    bar(name: string): any;\r\n    bar(name: \"hello\"): string;\r\n}\r\n\r\ndeclare class foo2 extends foo\r\n{\r\n    bar(name: string): any;\r\n    bar(name: \"hello\"): string;\r\n    bar(name: \"world\"): number;\r\n}\r\n``\r\n\r\nNeedless to say, this means duplicating a significant amount of code everywhere, extremely prone to errors, and makes definition files very large.\r\n\r\nCan inherited subclasses automatically add overload-on-constants to the base-class's list?\r\n\r\nThis together with a prior issue requesting that duplicated declarations of interface bodies can be omitted should significantly trim down the size of definition files!\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-02T21:58:27.84-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Intellisense info on overload on constant upon inheritance",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 1300
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the report. This is by design at the moment but as you've noticed does cause some pain. Also note that in the case of ambiguous call sites the compiler will choose the first overload definition so you probably want the string signature to come last. Assigning to Jonathon who handles suggestions.",
      "PostedDate": "2013-07-03T12:39:48.797-07:00",
      "Id": 105019
    }
  ]
}