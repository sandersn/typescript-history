[
  {
    "Id": "1088456",
    "ThreadId": "455535",
    "Html": "Hello,\r<br />\n<br />\ni'm fairly new to typescript, so please excuse me if i'm asking for something stupid.\r<br />\n<br />\nI wanted to create a class with only static functions, so in c# that would be a static class, in javascript that would be a var with some functions attached to it.\r<br />\n<br />\nSo i tried to create this 'static class' in typescript. The keyword static is not valid before &quot;class&quot; so i created a class like this:<br />\n<pre><code>class Multiplication {\n    static multiplyAmount:number = 2;\n    static multiply(amount:number)\n    {\n        return amount * this.multiplyAmount;\n    }\n}\n\nalert(Multiplication.multiply(3).toString());</code></pre>\n\nConverted to javascript this becomes<br />\n<pre><code>var Multiplication = (function () {\n    function Multiplication() {\n    }\n    Multiplication.multiply = function (amount) {\n        return amount * this.multiplyAmount;\n    };\n    Multiplication.multiplyAmount = 2;\n    return Multiplication;\n})();\n\nalert(Multiplication.multiply(3).toString());\n</code></pre>\n\nNow i don't like the fact that a function is being created here. It's not like a static class has to be instantiated. As far as i've been looking around i haven't seen anything like a static class in TypeScript, so i propose the following (a real static class):<br />\n<pre><code>static class Multiplication {\n    static multiplyAmount:number = 2;\n    static multiply(amount:number)\n    {\n        return amount * this.multiplyAmount;\n    }\n}\n\nalert(Multiplication.multiply(3).toString());</code></pre>\n\nAnd in javascript this becomes<br />\n<pre><code>            var Multiplication = (function () {\n                var Multiplication = {};\n                Multiplication.multiply = function (amount) {\n                    return amount * this.multiplyAmount;\n                };\n                Multiplication.multiplyAmount = 2;\n                return Multiplication;\n            })();\n\n            alert(Multiplication.multiply(3).toString());</code></pre>\n\nIn the case a class has the keyword static, all the functions and variables inside should also have the keyword static.\r<br />\nIn JavaScript no function is defined but an empty object is created instead.\r<br />\n<br />\nWould this be possible in any case?<br />\n",
    "PostedDate": "2013-09-04T14:33:38.653-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1088464",
    "ThreadId": "455535",
    "Html": "A module covers all the use cases of a static class, and has the code gen you'd expect (member initialization without a constructor function).<br />\n",
    "PostedDate": "2013-09-04T14:51:18.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]