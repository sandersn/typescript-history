{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:56.63-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "Hi\r\n\r\nConsider this example:\r\n\r\n \r\n\r\n\r\n\r\nclass Test {\r\n    Method1(arg : string[]) {\r\n       this.Method2(1, arg);\r\n    }\r\n    Method2(arg1 : number, ...params: any[]) {\r\n    }\r\n}\r\n\r\n\r\nThis code is valid, but conversion (or lack of any) to javascript is counterintuitive. What I expected in such case to see in javascript was a call to\r\n\r\napply method that would concat 1 and elements of arg array as arguments to Method2. Please clarify if my intuition is wrong or this is a bug.\r\n\r\n \r\n\r\nPS. haw can I call apply method on methods form TS without casting it to any?",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-10T08:53:35.903-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "passing array as parmas argument",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 226
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "According to the ES6 standard, the correct way to implement this would be to use the spread operator in the method call:\n\nclass Test {\n  Method1(arg : string[]) {\n    this.Method2(1, ...arg);\n  }\n  Method2(arg1 : number, ...params: any[]) {\n  }\n}\n\nSpread operator: http://wiki.ecmascript.org/doku.php?id=harmony:spread",
      "PostedDate": "2012-10-12T06:19:06.413-07:00",
      "Id": 79608
    },
    {
      "Message": "This is not a bug.",
      "PostedDate": "2012-10-13T13:34:34.99-07:00",
      "Id": 79690
    },
    {
      "Message": "you can try it...............\nclass Test {\n\n    Method( ...params: any[]) { // params with any type\n\n       // var total=0;\n\n        for (var i = 0; i < params.length; i++) { \n\n            alert(\"\" + params[i]);\n\n        }\n\n    }\n\n}\n\nwindow.onload = () =>{ \n\n    var data = new Test();\n\n    data.Method(1,\"xyz\",3.3,'c');\n}\n",
      "PostedDate": "2012-12-06T08:27:02.097-08:00",
      "Id": 83690
    }
  ]
}