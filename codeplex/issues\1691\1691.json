{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is intentional for the sake of compatibility with regular JS. A very basic linter/hinter can check this outside of the compile step.",
    "ClosedDate": "2013-09-16T16:21:45.037-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "``` TypeScript\r\nfunction test(a: number): string {\r\n\tif(a === null) return;\r\n\t\r\n\t'a';\r\n}\r\n```\r\n\r\nThis has two problems that should be flagged by the compiler:\r\n- Not all code paths return a value.\r\n- The return type is not a string. I assume what's going on here is the compiler infers the return statement to be returning `undefined` and thus allows this to pass, but I think that leads to inadvertent bugs. You should have to explicitly return `undefined` for it to pass the return type check.",
    "LastUpdatedDate": "2013-09-16T16:21:45.037-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-16T07:11:22.24-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Return type not properly validated",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1691
  },
  "FileAttachments": [],
  "Comments": []
}