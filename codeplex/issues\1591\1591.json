{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "'public constructor' makes a public function called 'constructor'.",
    "ClosedDate": "2013-08-26T12:02:27.347-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "As far as I can tell, TypeScript specification does not allow visibility modifiers (public or private) on constructors. However, instead of complaining, tsc behaves weirdly. For example, this code crashes the compiler:\r\n\r\nclass Test {\r\n  public constructor(private field: number) {\r\n  }\r\n}\r\n\r\nAnd compilation of this one fails with \"Could not select overload for 'new' expression\":\r\n\r\nclass Test {\r\n  public constructor(field: number) {\r\n  }\r\n}\r\n\r\nvar x = new Test(3);\r\n\r\nI see this in tsc 0.9.1.1.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-26T07:46:05.483-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Adding visibility modifiers to constructors yields weird results",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1591
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I see, then my second example works as intended. However, I don't think my first example should crash the compiler.",
      "PostedDate": "2013-08-26T12:52:36.213-07:00",
      "Id": 111193
    },
    {
      "Message": "Your first example compiles as intended (ie with errors) with the current develop bits.",
      "PostedDate": "2013-08-26T17:14:36.987-07:00",
      "Id": 111234
    }
  ]
}