{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.003-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "If a property has a getter but no setter (or vice versa) than perhaps the attempt to set or get should be flagged as an error: \r\n\r\n```\r\nclass Fields{\r\n\tget ReadOnly(){\r\n\t\treturn 10;\r\n\t}\r\n\t\r\n\tpublic written:number;\r\n\tset WriteOnly(value:number){\r\n\t\tthis.written = value; \r\n\t}\r\n}\r\n\r\nvar obj = new Fields();\r\n\r\nconsole.log(obj.ReadOnly); // 10\r\nobj.ReadOnly = 20;  // cannot set but no error \r\nconsole.log(obj.ReadOnly) // 10 \r\n\r\nobj.WriteOnly = 20; \r\nconsole.log(obj.written) // 20 \r\nconsole.log(obj.WriteOnly); // cannot read but no error \r\n```\r\n\r\nJust another way typescript can protect us. ",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-19T21:21:56.47-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Properties with missing set / get should be flagged ",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 12,
    "Id": 834
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It is legitimate for read-only access to a private property to be provided by a getter with no corresponding setter (and vice-versa). But there should certainly be a compile-time error when an attempt is made to use a non-existent setter (or getter).",
      "PostedDate": "2013-03-20T11:08:55.753-07:00",
      "Id": 93805
    },
    {
      "Message": "@stanthomas updated based on your comment ",
      "PostedDate": "2013-03-20T17:51:43.833-07:00",
      "Id": 93846
    },
    {
      "Message": "Suggestion to add readability/writeability to type system",
      "PostedDate": "2013-03-22T14:12:09.36-07:00",
      "Id": 94104
    }
  ]
}