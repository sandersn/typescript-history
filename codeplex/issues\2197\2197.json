{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.22-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "Hi,\r\n\r\nPlease consider installing [TSLint](https://github.com/palantir/tslint) when TypeScript is installed for Visual Studio via the MSI.\r\n\r\nBuilding a project should also optionally run TSLint.\r\n\r\nTSLint settings should be available via Tools > Options.\r\n\r\nThanks.\r\n\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-20T01:53:54.733-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "TS Lint for Visual Studio Users",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2197
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the suggestion, but since TSLint is created by a different company, it will be hard to include in our installer. Assigned to Jon, to take a look at our options.",
      "PostedDate": "2014-02-21T13:30:53.287-08:00",
      "Id": 134392
    },
    {
      "Message": "Hi, I'm one of the maintainers of the tslint project. We'd love to have tslint integrated natively into Visual Studio. Our primary motivation with tslint is to help the entire TypeScript community to produce high-quality\ncode and get access to tslint no matter what environment they are working in. If you are interested, please let me know what we can do to help out. For example, we may be able to offer tslint under modified licensing terms if the current open source terms are problematic.",
      "PostedDate": "2014-02-24T16:00:49.583-08:00",
      "Id": 134615
    },
    {
      "Message": "You can leverage TsLint support via [Web Essentials](http://vswebessentials.com/) extension. \n\nIn WE, we use latest TsLint npm release.",
      "PostedDate": "2014-02-25T22:34:52.58-08:00",
      "Id": 134745
    },
    {
      "Message": "@TheDeeds, I specifically raised this issue because I don't want to use Web Essentials. To me it adds features, 90% of which I don't need.\n\n@paulb, if Web Essentials is able to add TSLint, it shouldn't be impossible for TypeScript to do the same.\n\nI believe TS Lint is going to be an essential, rather than nice-to-have, feature of TypeScript going forward.\n\nThe TypeScript team would do well to bring this under their umbrella.\n\n",
      "PostedDate": "2014-02-26T01:59:18.123-08:00",
      "Id": 134761
    }
  ]
}