{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-05-06T09:56:34.16-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "In playground, the following does not compile.\r\n```\r\nfunction f() {\r\n\tif (1) {\r\n\t\tvar a : string = \"\";\r\n\t}\r\n\tif (1) {\r\n \t\tvar a : number = -1; // Red squiggle: \"Cannot convert number to string\"\r\n\t}\r\n}\r\n```\r\n\r\nIs it intended that it should?   Surely yes?   Block scoping is nice.\r\n\r\nIf not, a better error would be to squiggle \": number\" and say \"cannot redefine type of a\".\r\n",
    "LastUpdatedDate": "2013-08-13T12:27:54.607-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-05T01:25:17.13-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Block scoping not correct?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 997
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "TypeScript has the same function scoped binding behavior for 'var' as JavaScript does.  TypeScript enforces some static restrictions on top of this to catch common errors, and to ensure it is possible to statically type a program.\n\nIn the 0.9 language spec, the rules are that a 'var' declaration is function-scoped, but can be redeclared multiple times within a function scope, as long as it is declared with the same type.  \n\nSo the example you quote will report an error, because both declarations are for the same function-scoped binding, and have different types.\n\nThere is a separate suggestion (https://typescript.codeplex.com/workitem/368) to add proper block scoped binding constructs from ES6 to TypeScript.\n\n",
      "PostedDate": "2013-05-06T09:23:38.61-07:00",
      "Id": 99484
    },
    {
      "Message": "> So the example you quote will report an error, because both declarations are for the same function-scoped binding, and have different types.\n\nAnd just to check: the error will be better than \"Cannot convert number to string\"?\n",
      "PostedDate": "2013-05-10T07:06:29.43-07:00",
      "Id": 99902
    }
  ]
}