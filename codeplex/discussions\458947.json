[
  {
    "Id": "1098634",
    "ThreadId": "458947",
    "Html": "Is it possible to perform runtime-checked cast or create helper method that does it for me?\r<br />\n<br />\nThe closest I got:<br />\n<pre><code>function cast&lt;T&gt;(x, t: Function): T {\n    console.assert(x instanceof t, &quot;Invalid cast&quot;);\n    return x;\n}</code></pre>\n\nBut that requires supplying type twice:<br />\n<pre><code>var foo = cast&lt;String&gt;(bar, String);</code></pre>\n\nwhile I would prefer one of these:<br />\n<pre><code>var foo = cast&lt;String&gt;(bar);\nvar foo = cast(bar, String);</code></pre>\n\n",
    "PostedDate": "2013-09-24T10:08:31.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1099014",
    "ThreadId": "458947",
    "Html": "Finally I got something that works:<br />\n<pre><code>function cast&lt;T&gt;(x, t: new() =&gt; T): T {\n    console.assert(x instanceof t);\n    return x;\n}\n\nvar x = cast(foo, Whatever);</code></pre>\n\n",
    "PostedDate": "2013-09-25T06:25:06.457-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1100549",
    "ThreadId": "458947",
    "Html": "@mwisnicki, furthermore <code>instanceof</code> won't work for primitives. You will need to check for primitives and use <code>typeof</code> instead.<br />\n",
    "PostedDate": "2013-09-29T03:41:14.823-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1100575",
    "ThreadId": "458947",
    "Html": "Actually, you can't call it with primitives:<br />\n<pre><code>var x = cast(foo, number); // Could not find symbol 'number'.</code></pre>\n\nBut that's OK since I need it just for classes.<br />\n",
    "PostedDate": "2013-09-29T05:14:59.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1100581",
    "ThreadId": "458947",
    "Html": "But here is slightly improved hack: <a href=\"http://goo.gl/s2KVuT\" rel=\"nofollow\">http://goo.gl/s2KVuT</a>.<br />\n",
    "PostedDate": "2013-09-29T05:42:12.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]