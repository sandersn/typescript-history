{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:43.02-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "Hello,\r\n\r\nI would love to see a compiler option (let's say ```--declaration-only```) that will parse given files and generate declaration file w/o compiling to JavaScript files. Why? Because writting makefiles/jakefiles is a pain in the a...\r\n\r\nI've written a large project and I had to split it into several subprojects (subfolders). Each subfolder is compiled into two files \"__subproject_name.d.ts__\" and then \"__subproject_name.js__\". All TypeScript sources in such subproject include only \"__subproject_name.d.ts__\".\r\n\r\nI've tried using ```tsc --declaration --out [outputfile.d.ts] [input files]``` but it generates strage stuff: declaration code is mixed with JavaScript. For now I'm compiling in a overkilled fashion using two phases/passes:\r\n1. compile all TypeScript files to generate declaration files (and ignore errors about missing declarations)\r\n2. join all declaration files using ```cat``` into '__subproject_name.d.ts__'\r\n3. remove all ```/// <reference path=\"\" />``` from combined file using ```sed```\r\n4. compile all TypeScript files to \"__subproject.js__\" (second pass)\r\n\r\nI tried to modify compiler sources but I failed to achieve my goal :(\r\nSo I have to stick with Linux to build this project...\r\n\r\nBest regards\r\n\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-13T03:44:31.717-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Missing compiler option for generating declaration files only",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 1147
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the suggestion, assigned to Jon, who handles our suggestions.\r\n\r\n\r\nAlso this \"I've tried using ```tsc --declaration --out [outputfile.d.ts] [input files]``` but it generates strage stuff: declaration code is mixed with JavaScript\" I couldn't reproduce on the latest bits.",
      "PostedDate": "2013-06-14T09:45:29.19-07:00",
      "Id": 103076
    },
    {
      "Message": "@paulb I tried to reproduce it but I realized that I had old version of ```tsc``` - I'm sorry for giving misleading informations. Now the ```--out``` switch always creates a directory and this problem is solved.\n\n_OFFTOPIC: When I will finish my project I'm going to help you guys with TypeScript dev. It really can make webdev much more faster, productive and fun :)_",
      "PostedDate": "2013-06-14T15:33:23.197-07:00",
      "Id": 103112
    }
  ]
}