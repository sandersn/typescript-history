[
  {
    "Id": "947943",
    "ThreadId": "404784",
    "Html": "\r\n<p>It would be great if we could declare static variables inside of functions.</p>\r\n<p>I'm working on a realtime application and want to minimize the number of objects created each frame, instances of vectors, etc. Right now I can achieve this by either declaring global variables (not cool) or static variables inside the class (better but\r\n still far from where they're being used).</p>\r\n",
    "PostedDate": "2012-11-27T13:20:34.827-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "947980",
    "ThreadId": "404784",
    "Html": "\r\n<p>Any time you suggest features for typescript, you should also be&nbsp;showing what the corresponding javascript would be. We can all invent arbitrary features for typescript, but if it cannot be modeled in javascript, it's meaningless. Please show the corresponding\r\n javascript for a &quot;local static variable,&quot; in the correct&nbsp;context.</p>\r\n",
    "PostedDate": "2012-11-27T14:28:58.903-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948176",
    "ThreadId": "404784",
    "Html": "\r\n<p>Yes, you're right, sorry about that.&nbsp;Here's one possible implementation:</p>\r\n<pre><code><span>function</span><span> myFunction</span><span>()</span><span> </span><span>{</span><span>\r\n    </span><span>if</span><span> </span><span>(</span><span> </span><span>typeof</span><span> myFunction</span><span>.</span><span>counter </span><span>==</span><span> </span><span class=\"str\">'undefined'</span><span> </span><span>)</span><span> </span><span>{</span><span>\r\n        myFunction</span><span>.</span><span>counter </span><span>=</span><span> </span><span>0</span><span>;</span><span>\r\n    </span><span>}</span><span>\r\n</span><span>\r\n    alert</span><span>(++</span><span>myFunction</span><span>.</span><span>counter</span><span>);</span><span>\r\n</span><span>}</span></code></pre>\r\n",
    "PostedDate": "2012-11-28T02:01:47.663-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948340",
    "ThreadId": "404784",
    "Html": "\r\n<p>That already exists in the language:</p>\r\n<pre>class MyFoo {\r\n    static foo : number = 0;\r\n\r\n    constructor() { window.alert(&quot;foo is &quot; &#43; MyFoo.foo&#43;&#43;); }\r\n}</pre>\r\n",
    "PostedDate": "2012-11-28T06:53:23.507-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948404",
    "ThreadId": "404784",
    "Html": "\r\n<p>that's a static variable with class scope, not method scope.</p>\r\n",
    "PostedDate": "2012-11-28T08:04:55.13-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949565",
    "ThreadId": "404784",
    "Html": "\r\n<p>The problem with that is it wouldn't really be method scope in the way that I think&nbsp;you mean: I'm presuming you mean scoped to that method on that instance. It would be shared among all prototypes using that implementation. Is this really what you want?</p>\r\n<p>Update: Hmm... upon further thought, it would very much depend on the implementation. I'm trying to prototype (ha-ha)&nbsp;an example.</p>\r\n<p>Update Two: Ok, I understand now. It seems of limited value from a language design point of view, but pretty useful in terms of keeping things tight memory wise with respect to more constrained environments.</p>\r\n",
    "PostedDate": "2012-11-30T07:35:11.507-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "950035",
    "ThreadId": "404784",
    "Html": "\r\n<p>Some further thought: It might be a good candidate for a compiler optimization given that from a language point of view, it's mostly an implementation detail. For example, you would declare the variable statically at class scope but if compile time&nbsp;static\r\n analysis determined it was safe to do so, the variable would be bound to the local function instead of the class.</p>\r\n",
    "PostedDate": "2012-12-01T14:10:26.24-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "950521",
    "ThreadId": "404784",
    "Html": "\r\n<p>Yes, this is exactly what I had in mind. I think it would be a very useful feature, and should also be implemented for the sake of completeness. We're already emulating C&#43;&#43;/Java-like classes, so why not emulate static declarations like we know them from\r\n these languages.</p>\r\n",
    "PostedDate": "2012-12-03T05:25:20.377-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "950693",
    "ThreadId": "404784",
    "Html": "\r\n<blockquote style=\"padding-bottom:0px; font-style:italic; padding-top:0px; padding-left:0.25em; margin:0.25em 1em 0px; padding-right:0.25em; border:#ccc 0.1em solid\">\r\n<strong>vexator wrote:</strong><br>\r\n<p>Yes, this is exactly what I had in mind. I think it would be a very useful feature, and should also be implemented for the sake of completeness. We're already emulating C++/Java-like classes, so why not emulate static declarations like we know them from\r\n these languages.</p>\r\n</blockquote>\r\n<p><br>\r\nYeah. Still, when you work at this level of abstraction (typescript &gt; javascript &gt; browser &gt; jsengine &gt; platform) you never know whether or not your changes will really have any real effect. It's always possible this gets optimized at a lower level. Premature\r\n optimization and all that...</p>\r\n",
    "PostedDate": "2012-12-03T11:08:27.123-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]