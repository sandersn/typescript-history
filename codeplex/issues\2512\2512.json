{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is the intended behavior. Initialization order is inline-initialized fields, followed by the constructor, just as in other languages. We aim for predictability here (initialization order is always the same) rather than try to reorder things based on any analysis.",
    "ClosedDate": "2014-05-19T09:17:49.79-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi, \r\nI have class that requires a value in the constructor. After assign this value to private field I wanted to use it to initialize other class member. The result of compilation you can find in the picture. After executing selected line I'll get error: 'Cannot read property 'Type' of undefined'. \r\n\r\nIs it desired behavior or is it a bug? \r\n\r\n(I'm aware that 7th line looks funny, nevertheless it shows the issue I'm facing)\r\n\r\nGreetings,\r\nMatt  ",
    "LastUpdatedDate": "2014-05-19T09:17:49.79-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-18T11:23:17.967-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "using constructor arguments - order of declaration",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2512
  },
  "FileAttachments": [
    {
      "FileId": 845767,
      "FileName": "tsFeedBack.PNG",
      "DownloadUrl": ".\\845767"
    }
  ],
  "Comments": [
    {
      "Message": "As with most other languages, if you initialize properties like that, it will happen first before the constructor is called.  You will need to set all your related values in the constructor.  Is there a good reason not to do it this way?",
      "PostedDate": "2014-05-18T22:33:35.313-07:00",
      "Id": 147013
    }
  ]
}