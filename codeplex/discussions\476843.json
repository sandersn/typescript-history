[
  {
    "Id": "1140653",
    "ThreadId": "476843",
    "Html": "<a href=\"http://www.typescriptlang.org/Playground/#src=function%20Foo(...args%3A%20any%5B%5D)%20%3A%20void%20%7B%7D%0A%0AFoo(1%2C%20%22%22%2C%200.5)%3B\" rel=\"nofollow\">Playground Example</a><br />\n<pre><code>function Foo(...args: any[]) : void {}\n\nFoo(1, &quot;&quot;, 0.5);</code></pre>\n\nWhy does it generate this?<br />\n<pre><code>    var args = [];\n    for (var _i = 0; _i &lt; (arguments.length - 0); _i++) {\n        args[_i] = arguments[_i + 0];\n    }</code></pre>\n\nI tried naming the parameter as <code>arguments</code> but then I get a compiler error. It is redundant in this case...<br />\n",
    "PostedDate": "2013-12-22T06:04:00.073-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1140668",
    "ThreadId": "476843",
    "Html": "You can use the 'arguments' variable directly without using a rest parameter.  Here I use the rest parameter in an overload, so that I can still call the function with any number of arguments, but in the implementation I just use arguments directly:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">function</span> Foo(...args:<span style=\"color:Blue;\">any</span>[]): <span style=\"color:Blue;\">any</span>;\n<span style=\"color:Blue;\">function</span> Foo(): <span style=\"color:Blue;\">any</span> {\n    <span style=\"color:Blue;\">var</span> x = arguments[0];\n    <span style=\"color:Blue;\">return</span> x+1;\n}\n\nalert(Foo(3, 4, 5));\r\n</pre></div>",
    "PostedDate": "2013-12-22T07:50:05.23-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2013-12-22T08:06:47.797-08:00"
  }
]