{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:27.363-07:00",
    "CommentCount": 9,
    "Custom": null,
    "Description": "hi\r\n\r\ni think that a small but important feature is to hint intellisense to ignore a specfic method\r\n\r\n[hide]\r\npublic method() {\r\n  //do somthing\r\n}",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-02T05:25:50.703-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Feature request: Hide method from intellisense",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 5,
    "Id": 1293
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "What is the usecase for hiding the existence of a public method?",
      "PostedDate": "2013-07-02T12:09:19.233-07:00",
      "Id": 104900
    },
    {
      "Message": "Thanks for the suggestion.  Assigning to Jonathan for tracking.",
      "PostedDate": "2013-07-02T12:52:19.927-07:00",
      "Id": 104909
    },
    {
      "Message": "So that you can have methods that don't show as errors, but also aren't an option for auto-complete.\n\nIn my project we have some init functions which should only ever be called once, however due to the inability to communicate to potential external developers, it is possible that they will also try to call this function if it's available on the auto-complete list.\n\nAt the moment we handle this by creating private functions, and casting the object to any when calling the function.",
      "PostedDate": "2013-07-02T18:34:15.537-07:00",
      "Id": 104948
    },
    {
      "Message": "At the moment its an alternative for protected methods\n\n",
      "PostedDate": "2013-07-03T03:39:20.397-07:00",
      "Id": 104968
    },
    {
      "Message": "I would like to be able to test private methods. They should be hidden from intellisense, but \"exported\". Sample:\n\nmodule Module1 {\n  export private function privateMethodIWouldLikeToTest () {}\n}\n\nor:\n\nmodule Module1 {\n  // Hide all members with underscore like the JavaScript intellisense.\n  export function _privateMethodIWouldLikeToTest () {}\n}\n\nAt the moment I need to do something like:\n\nmodule Module1 {\n  function privateMethodIWouldLikeToTest () {}\n  export var privateMembers {\n    privateMethodIWouldLikeToTest: privateMethodIWouldLikeToTest\n  };\n}",
      "PostedDate": "2013-09-12T14:11:54.683-07:00",
      "Id": 113403
    },
    {
      "Message": "I have at least one use case. I would like to be able to test private methods. They should be hidden from intellisense, but \"exported\". \n\nSuggestion 1:\n\n```\nmodule Module1 {\n    export private function privateMethodIWouldLikeToTest () {}\n}\n```\n\nSuggestion 2:\n\n```\nmodule Module1 {\n    // Hide all members with underscore like the JavaScript IntelliSense.\n    export function _privateMethodIWouldLikeToTest () {}\n}\n```\n\nAt the moment I need to do something like:\n\n```\nmodule Module1 {\n    function privateMethodIWouldLikeToTest () {}\n    export var privateMembers = {\n        privateMethodIWouldLikeToTest: privateMethodIWouldLikeToTest\n    };\n}\n```",
      "PostedDate": "2013-09-12T14:18:08.583-07:00",
      "Id": 113406
    },
    {
      "Message": "Would it be possible to use the \"protected\" keyword for this?\nThe methods/variables would still be public in the compiled javascript, but intellisense and the compiler would enforce them as protected?\n\nPlease do not hide methods starting with underscore. We have a coding convention that all our private methods start with underscore and this change would really upset us.\n\n@turtur\nI find that it's generally a bad idea to test private methods. The \"contract\" your class provides is what you should be testing and that's all the public methods. Testing private methods breaks encapsulation. If your methods are really that complicated that you need tests, then perhaps they deserve their own class? In which case you can make them public there.",
      "PostedDate": "2013-10-04T01:25:42.19-07:00",
      "Id": 117453
    },
    {
      "Message": "JSDoc `@ignore` might do the trick? (it would be nice if this were supported at the language service level, so that third-party IDEs would automatically get this feature.)\n",
      "PostedDate": "2013-10-05T08:53:22.797-07:00",
      "Id": 117550
    },
    {
      "Message": "Note: protected members may help here:\nhttps://typescript.codeplex.com/workitem/125\n\nOr perhaps even an \"internal\" modifier:\nhttps://typescript.codeplex.com/workitem/1365\n",
      "PostedDate": "2014-04-03T15:03:38.673-07:00",
      "Id": 140469
    }
  ]
}