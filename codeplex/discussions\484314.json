[
  {
    "Id": "1151912",
    "ThreadId": "484314",
    "Html": "Hi guys,\r<br />\n<br />\nI tried to use typescript and I couldn't figure out something that I think should be a simple thing to do.\r<br />\n<br />\nLet's say I have this structure:\r<br />\ngeom/Shape.ts: this is a Shape class within a &quot;geom&quot; module.\r<br />\nMain.ts - the Main class that uses the geom.Shape class (eg. creates instances of it)\r<br />\n<br />\nI'd like to compile these into a single js file but I couldn't figure out how.\r<br />\nIf I use these options:\r<br />\n--sourcemap $FileName$ --out app.js geom.Shape.ts Main.ts\r<br />\nor these:\r<br />\n--sourcemap $FileName$ --out app.js Main.ts\r<br />\n<br />\nthe compilation breaks with an error: \r<br />\nerror TS5007: Cannot resolve referenced file: 'geom.Shape.ts'.\r<br />\n<br />\nGenerally what would be awesome to have multiple modules, each having multiple .ts files, each .ts file is a typescript class, and I could just compile all of it into one js file.\r<br />\n<br />\nIs this somehow possible with a compiler flag?\r<br />\nThanks,\r<br />\nAndrew<br />\n",
    "PostedDate": "2014-01-10T12:07:13.557-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1151931",
    "ThreadId": "484314",
    "Html": "Is the filename geom/Shape.ts or geom.Shape.ts?<br />\n",
    "PostedDate": "2014-01-10T13:15:00.677-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1151940",
    "ThreadId": "484314",
    "Html": "Hi Ryan,\r<br />\n<br />\nthanks for the reply. It was &quot;Shape.ts&quot;. inside the geom folder.\r<br />\nIn the meantime I could manage to solve this compile error by using this in the Main:\r<br />\n<br />\n///&lt;reference path='geom/Shape.ts'/&gt;\r<br />\n<br />\nWith this, even circular dependencies seem to work! I wonder though, why is this needed? It seems a bit cumbersome to use such annotations.\r<br />\nIn the end, ideally, I would love to use typescript as I used to use Java/Actionscript3/etc that is:<br />\n<ul>\n<li>some packages</li>\n<li>each package has some .ts files</li>\n<li>each .ts file has exactly one Class</li>\n<li>circular dependencies are possible</li>\n<li>on compilation it results in a single file, but it doesn't include unused classes</li>\n<li>strong, static typing - which works of course fine with TS</li>\n<li>\nrefactoring - which I have trouble with using WebStorm, although this should work easily, shouldn't it?<br />\n</li>\n</ul>\nAll of these seem to be managable in typescript the way I see it!<br />\n",
    "PostedDate": "2014-01-10T14:09:09.263-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]