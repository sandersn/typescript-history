{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "What you're seeing is by design. The && operator short-circuits -- if the left operand is falsy, the right operand is not evaluated. This is the same as the JavaScript (and all other C-like languages) behavior for &&.",
    "ClosedDate": "2013-02-18T12:39:31.927-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Just encountered a situation where  super.Method() was not being called if used into a return statement. \r\n\r\nSomething like this:\r\n\r\n```\r\npublic class Base {\r\n      public ValidateForm() : bool {\r\n               var valid = true;\r\n               ....\r\n              return valid;          \r\n      }\r\n}\r\n\r\n\r\npublic class Child extends Base {\r\n     public ValidateForm() : bool {\r\n             var valid = true;\r\n             ....\r\n             return valid && super.ValidateForm();  //HERE super.ValidateForm() not called.\r\n     }\r\n}\r\n\r\n```\r\n\r\n\r\nTo workaround this I simply has to store the return type and then the method would get called:\r\n\r\n```\r\npublic class Child{\r\n     public ValidateForm() : bool {\r\n             var valid = true;\r\n             ....\r\n             var baseValid = super.ValidateForm();\r\n             return valid && baseValid; \r\n     }\r\n}\r\n\r\n```\r\n\r\nThe above code is not tested to see if the bug exists in isolation. It's simple a high level overview of what I encountered in my code base and decided to report. ",
    "LastUpdatedDate": "2013-02-18T12:39:31.927-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-17T18:57:50.21-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Base class method not called when used in return statement",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 733
  },
  "FileAttachments": [],
  "Comments": []
}