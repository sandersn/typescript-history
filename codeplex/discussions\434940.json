[
  {
    "Id": "1008487",
    "ThreadId": "434940",
    "Html": "In case you missed it, Jon Turner updated the generics issue with new information yesterday.<br />\n<br />\n<a href=\"https://typescript.codeplex.com/workitem/185\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/185</a><br />\n<br />\nEverything outlined there sounds great. I hope the type inference makes it into the initial release of generics, as explicitly writing out generic parameters in method calls is really cumbersome. I'm also looking forward to seeing more details about the generic type constraints.<br />\n",
    "PostedDate": "2013-02-28T14:29:24.677-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1020936",
    "ThreadId": "434940",
    "Html": "Also just blogged a few more details here: \r<br />\n<br />\n<a href=\"http://blogs.msdn.com/b/typescript/archive/2013/03/25/working-on-typescript-0-9-generics-overload-on-constants-and-compiler-performance.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/typescript/archive/2013/03/25/working-on-typescript-0-9-generics-overload-on-constants-and-compiler-performance.aspx</a>\r<br />\n<br />\nGeneric parameter inference is definitely part of the plan for the initial release of generics (this is already implemented in the 'develop' branch).  Generic constraints are also part of the plan, and are used like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n    <span style=\"color:Blue;\">interface</span> EventListener&lt;TEvent <span style=\"color:Blue;\">extends</span> Event&gt; {\n      (evt: TEvent): <span style=\"color:Blue;\">void</span>;\n    }\r\n</pre></div>",
    "PostedDate": "2013-03-25T17:04:03.14-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1021262",
    "ThreadId": "434940",
    "Html": "Awesome, thanks. Can't wait to try it out and add generic typing into all the linq.js and JQuerred Deferred code that I use. <br />\n",
    "PostedDate": "2013-03-26T08:00:12.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]