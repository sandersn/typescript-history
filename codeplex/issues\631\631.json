{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Looks like this is fixed in 0.8.3.0.",
    "ClosedDate": "2013-01-22T14:23:29.243-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Edit: Oh, I almost forgot:\r\n\r\n    $ npm info typescript | grep 'version:'\r\n      version: '0.8.2',\r\n\r\nWhen defining a service in angularjs to grab some spreadsheets from the google drive api, the typescript compiler oddly removes the var keyword. Here is the smallest reproducible bug:\r\n\r\n    // typescript\r\n\tvar myFunc = () => {\r\n\t    var myVar;\r\n\t}, someOtherVar;\r\n\r\ngives: \r\n\r\n    // javascript\r\n\tvar myFunc = function () {\r\n\tmyVar, };\r\n\tvar someOtherVar;\r\n\r\nbut\r\n\r\n    // typescript\r\n\tvar myFunc = () => {\r\n\t\tvar myVar;\r\n\t\tvar iAlsoLostIt;\r\n\t\tvar iDidnt;\r\n\t}, someOtherVar;\r\n\r\ngives\r\n\r\n    // javascript\r\n\tvar myFunc = function () {\r\n\tmyVar, iAlsoLostIt;\r\n\t\tvar iDidnt;\r\n\t};\r\n\tvar someOtherVar;\r\n\r\nThis is obviously a bug but the work around is to just throw two random declarations in before anything else, like in the second example, where I'd use `iDidnt` instead of `myVar`.\r\n\r\nAnyway, loving typescript so far, keep up the good work!",
    "LastUpdatedDate": "2013-01-22T14:23:29.243-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-01-21T22:11:44.817-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Typescript removes 'var' keyword inside of function",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 631
  },
  "FileAttachments": [],
  "Comments": []
}