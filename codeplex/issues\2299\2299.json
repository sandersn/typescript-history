{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:27.893-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I want to do something like this:\r\n\r\nfunction xhrCallback(response: any) => {\r\n    this.doSomething(response);\r\n}\r\n\r\nSo when debugging, my callstack includes the function name and I can orient myself more easily in my codebase. User-named functions are superior to generated named because they can be referenced back to the TypeScript source code more easily.\r\n\r\nThe current alternative is to use a bound function when 'this' access is necessary, but this code is much more awkward and easy to mess up:\r\n\r\nfunction xhrCallback(response: any) {\r\n    this.doSomething(response);\r\n}.bind(this)",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-11T13:46:05.52-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Named Lambdas",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2299
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Note: the request is really about improving the debugging experience one gets when using arrow functions in TS.  Because we generate anonymous functions in the generated JS, many debuggers provide a poorer experience.\n\nFor example, the callstack only includes 'anonymous function' with a line number, making it hard to figure out (at a glance) what's going on.\n\nThere are numerous ways we could improve things here.  INcluding:\n\n1) having the runtime provide more information about how this function should look.\n2) having the debugger be smarter about how it displays these guys.\n3) having TS produce JS that makes these experiences better.\n4) having the TS language actually change to support this.\n\nWe should discuss which approach makes the most sense, and would fit the goals of the different teams, while alleviating the pain point here.",
      "PostedDate": "2014-03-11T14:03:12.173-07:00",
      "Id": 136546
    },
    {
      "Message": "Thanks for the suggestion. Cyrus has enumerated a few future possibilities here, definitely room for improvement.",
      "PostedDate": "2014-03-11T14:16:04.18-07:00",
      "Id": 136548
    }
  ]
}