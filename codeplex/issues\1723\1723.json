{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:36:11.91-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "TypeScript renders multi-line comments such as\r\n\r\n    /**\r\n     * Method description.\r\n     *\r\n     * @param {number} bar Parameter description\r\n     *\r\n     * @memberof NamespaceName\r\n     */\r\n    function foo(bar: number): void {\r\n    }\r\n    \r\nin the following way:\r\n\r\n    /**\r\n    * Method description.\r\n    *\r\n    * @param {number} parameter Parameter description\r\n    *\r\n    * @memberof NamespaceName\r\n    */\r\n    function foo(bar) {\r\n    }\r\n\r\nThe first * of all but the first Typescript line has a space in front of it, as doc comments are supposed to be formatted. The output Javascript doesn't have that space.",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-25T00:26:50.52-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "(nitpick) Multi-line comments have their first asterisk positioned incorrectly",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 5,
    "Id": 1723
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I've seen the TS team use the style in the output on multiple occasions (no space). My preference would be that the tools use the accepted JavaDoc style as in your original TS.",
      "PostedDate": "2013-09-27T05:37:59.273-07:00",
      "Id": 115803
    },
    {
      "Message": "Thanks for reporting, we're taking a look",
      "PostedDate": "2013-09-27T11:31:31.583-07:00",
      "Id": 115844
    },
    {
      "Message": "It looks like this happens for all block-level comments: all indentation gets stripped.\n\nNoticeable with formatted bigger blocks like licence headers and code examples.\n\n````\n/*\n    Licence foo\n\n        bar bas 2000\n*/\n````",
      "PostedDate": "2014-06-27T09:54:39.093-07:00",
      "Id": 150952
    },
    {
      "Message": "This problem is more serious when you're using an extension such as Edge.js, which depends on multiline comments to function.\n\nWith indentation being removed by TypeScript, indentation-sensitive languages like Python can't be used within it.\n\nMy own use case is for long stretches of text that I need to pass in as a string literal to my unit tests.\n\nWith TypeScript removing indentation in comments, I had to give up on the \"wrap text in comments in a function then parse the function body text\" approach, and add distracting (and tiresome, for dozens of tests) \"\\n\\\"'s at the end of each line.",
      "PostedDate": "2014-12-23T08:28:44.427-08:00",
      "Id": 168793
    },
    {
      "Message": "Venryx, the project has moved to Github so you can try opening an issue there, but for your particular use case, I suggest you wait for ES6 template strings (will be supported by the upcoming 1.4 compiler). They are like python docstrings and can be multi-line. Parsing free-form text in comments via Function.toString() has always been brittle.",
      "PostedDate": "2014-12-23T10:32:05.667-08:00",
      "Id": 168799
    }
  ]
}