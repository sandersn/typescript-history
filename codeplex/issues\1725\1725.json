{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for the report. This has been fixed in the latest bits. The call to 'listen' is now contextually typed correctly and x.nonexistent will cause an error since x is of type Event.",
    "ClosedDate": "2013-09-26T11:06:17.057-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "```\r\ninterface FooEvent {\r\n\t(event: Event): void;\r\n}\r\n\r\ninterface Events {\r\n\tfoo: FooEvent;\r\n}\r\n\r\nfunction listen(events: Events) {}\r\n\r\nvar events1: Events = {\r\n\tfoo: (x) => { x.cancelable = true; } // type of x enforced\r\n};\r\n\r\nlisten({\r\n\tfoo: (x) => { x.nonexistent = 1; } // x has any type\r\n});\r\n```\r\n\r\nIn last call to `listen`, `foo` will be `(x:any):void` instead of `(x:Event):void`, i.e. you can pass any function with single argument.",
    "LastUpdatedDate": "2013-09-26T11:06:17.057-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-25T05:24:16.12-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Type not fully enforced for function member of interface when used as argument",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1725
  },
  "FileAttachments": [],
  "Comments": []
}