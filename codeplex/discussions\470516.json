[
  {
    "Id": "1126804",
    "ThreadId": "470516",
    "Html": "I'm trying to deploy my solution to Azure using the brand spanking new TS 0.9.5 beta. (Thanks, guys!) However, I'm getting the following error message during the Kudu build process. Note that this only seems to happen on Azure, not during local builds, or even while running &quot;deploy.cmd&quot; locally:<br />\n<br />\nC:\\DWASFiles\\Sites\\payboardbeta\\VirtualDirectory0\\site\\repository\\Payboard.Web\\bin\\Payboard.Web.dll<br />\n  Building TypeScript: Payboard.Site.js (using ..\\typescript\\tsc.exe)<br />\n  Building TypeScript: Payboard Widget (using ..\\typescript\\tsc.exe)<br />\n  Building TypeScript: App\\Payboard.App.js (using ..\\typescript\\tsc.exe)<br />\ntsc.js(59664, 13) JavaScript runtime error : Automation server can't create objecttsc.js(59664, 13) JavaScript runtime error : Automation server can't create objecttsc.js(59664, 13) JavaScript runtime error: Automation server can't create object <br />\n<br />\nBecause I couldn't figure out any other way to do it (open to suggestions!), I've included the TypeScript tsc.exe (and supporting files, such as lib.d.ts, tsc.js, and tschost.dll) within my source code, so that I could call it from my &quot;tsbuild.cmd&quot; and have some reasonable guarantees that it was going to be there on the Azure build server and was going to be the right version. So my &quot;tsbuild.cmd&quot; looks like so:<br />\n<br />\nset tsc=..\\typescript\\tsc.exe<br />\necho Building TypeScript: Payboard.Site.js (using %tsc%)<br />\n%tsc% --sourcemap --out Scripts\\Payboard\\Payboard.Site.js <a href=\"mailto:@tsbuild_Site.txt\necho\" rel=\"nofollow\">@tsbuild_Site.txt\necho</a> Building TypeScript: Payboard Widget (using %tsc%)<br />\n%tsc% --sourcemap --out Widget\\v1.0\\Payboard.js <a href=\"mailto:@tsbuild_Widget_v10.txt\necho\" rel=\"nofollow\">@tsbuild_Widget_v10.txt\necho</a> Building TypeScript: App\\Payboard.App.js (using %tsc%)<br />\n%tsc% --sourcemap --out App\\Payboard.App.js <a href=\"mailto:@tsbuild_App.txt\n\nAny\" rel=\"nofollow\">@tsbuild_App.txt\n\nAny</a> troubleshooting suggestions?<br />\n",
    "PostedDate": "2013-11-19T15:49:55.6-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1126810",
    "ThreadId": "470516",
    "Html": "This discussion has been copied to a work item. Click <a href=\"https://typescript.codeplex.com/workitem/1920\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2013-11-19T15:59:25.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1126811",
    "ThreadId": "470516",
    "Html": "Thanks for the report - copying over to work item so we can investigate.<br />\n",
    "PostedDate": "2013-11-19T15:59:45.853-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1126812",
    "ThreadId": "470516",
    "Html": "One possibility - perhaps a strong possibility - is that the tschost.dll is (now?) an automation server, and hence needs to be registered, not just present. If that's the cause of this, that kinda breaks my scenario, as I (quite properly) don't have permissions to register an automation server on my Azure build server.\r<br />\n<br />\nSo maybe this is another way to phrase my question: What's the best way to run TS builds during a deploy to Azure via kudu?<br />\n",
    "PostedDate": "2013-11-19T16:03:02.213-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]