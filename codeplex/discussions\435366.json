[
  {
    "Id": "1010256",
    "ThreadId": "435366",
    "Html": "I've got a class that extends another. Very simple stuff. But when it compiles (which it does without error) it is creating the following JS which debugging tools moan about:<br />\n<pre><code>var __extends = this.__extends || function (d, b) {\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};</code></pre>\n\nThe above is inserted above the JS creating my class and gives the wonderful &quot;Uncaught TypeError: Cannot read property 'prototype' of undefined&quot; error.\r<br />\n<br />\nThis is in TS 0.8.3 and I'm using ES3 and --out.<br />\n",
    "PostedDate": "2013-03-04T16:33:20.633-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1010272",
    "ThreadId": "435366",
    "Html": "Is the derived class above the base class in the file? You'll need to have the derived class written after the base class.<br />\n",
    "PostedDate": "2013-03-04T17:25:10.413-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1010274",
    "ThreadId": "435366",
    "Html": "Never mind, the issue was nothing to do with the above but to do with the way extends works.\r<br />\n<br />\nI had a class (say classA) that extended another class (classB), and I wanted to pass a reference of classA to classB, but the second I did that it got its knickers in a twist and threw the error above. Never mind, the code was a bit hacky anyway but figured I'd post in case it catches anyone else out :)<br />\n",
    "PostedDate": "2013-03-04T17:36:36.807-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]