{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "A key design tenet of TypeScript is that existing JavaScript code works at an expression level the same way if it weren't in TypeScript. The proposed transform wouldn't have that property because 'undefined' and 'null' (both of which are in the domain of all type values) are ==, but not ===",
    "ClosedDate": "2013-04-29T09:32:47.893-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This seems like low hanging fruit if we know that we're comparing two variables of the same type, why not automatically translate == to === when TypeScript is compiled (IFF both sides are explicitly typed)?\r\n\r\nhttp://jsperf.com/comparison-of-and-performance\r\n",
    "LastUpdatedDate": "2013-04-29T09:32:47.893-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-04-27T18:24:54.293-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "=== for strict comparison",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 970
  },
  "FileAttachments": [],
  "Comments": []
}