{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "TypeScript will not detect ordering issues in v1",
    "ClosedDate": "2013-08-07T11:55:31.017-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I've just found that for node it makes significant difference  if one defines app.ts like this:\r\nclass A { f() { return \"foo\";} }\r\nclass B extends A { }\r\nconsole.log((new B()).f());\r\n\r\nor like that:\r\nclass B extends A { }\r\nclass A { f() { return \"foo\";} }\r\nconsole.log((new B()).f());\r\n\r\nin the 2nd case value of A is undefined in the generated js code, so node cannot run it.\r\n\r\n    __.prototype = b.prototype;\r\n                    ^\r\nTypeError: Cannot read property 'prototype' of undefined\r\n\r\nI'm using 0.8.3,\r\nMaybe there should be some warning about that, or something.\r\n\r\nCheers!",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-07T08:34:41.553-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "class definition order matters for node",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1123
  },
  "FileAttachments": [
    {
      "FileId": 690747,
      "FileName": "app.ts",
      "DownloadUrl": ".\\690747"
    }
  ],
  "Comments": [
    {
      "Message": "Thanks for reporting, we'll consider this.",
      "PostedDate": "2013-06-07T10:22:52.877-07:00",
      "Id": 102437
    }
  ]
}