{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:55.63-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "We already have type inference, but it'd be great if we also had smart local casts/type inference.\r\n\r\nFor example:\r\n\r\n\r\nfunction example(obj: Interface) {\r\n    if (obj instanceof Class) {\r\n        // instead of having to do:\r\n        // var c: Class = <Class> obj;\r\n        // obj would already have type Class inferred inside the block.\r\n    }\r\n}\r\n\r\nAvoiding the extra variable is not only convenient but should improve runtime performance. Right now, you can only way bypass it casting every reference: (<Class>\r\nobj).prop;",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-23T08:14:53.337-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Suggestion: Smart casts",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 5,
    "Id": 317
  },
  "FileAttachments": [],
  "Comments": []
}