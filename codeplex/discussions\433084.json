[
  {
    "Id": "1001011",
    "ThreadId": "433084",
    "Html": "Hello, is it possible to import amd module within another module or class? I mean with requirejs is it possible to conditionally load modules in runtime. From typescript i know just the method with import xy = module(&quot;xy&quot;), but this statement should be in global namespace? Or am i missing something?<br />\n",
    "PostedDate": "2013-02-14T01:04:20.43-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1001284",
    "ThreadId": "433084",
    "Html": "Yes, you can import modules from other external modules.  When you compile, you can select whether to output CommonJS or AMD using the --module flag.\r<br />\n<br />\nCurrently, the external module support in TypeScript (using 'import') expects that the modules you're loading won't change.  <br />\n",
    "PostedDate": "2013-02-14T08:05:29.2-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1001413",
    "ThreadId": "433084",
    "Html": "You can use import on the top of the typescript file, if it is defined in global context. How can i import a module within class function? Is it possible?<br />\n",
    "PostedDate": "2013-02-14T11:33:35.81-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1002443",
    "ThreadId": "433084",
    "Html": "There is an example of how to do this in section 9.4.2 of the Language Specification. The example is for CommonJS (synchronous) modules, but you can easily adapt it to AMD by using the asynchronous version of the 'require' function.<br />\n",
    "PostedDate": "2013-02-17T09:54:25.733-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1002453",
    "ThreadId": "433084",
    "Html": "Thank you Anders, your advice was helpful. You and your team make great work. Keep it up!<br />\n",
    "PostedDate": "2013-02-17T10:34:25.343-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]