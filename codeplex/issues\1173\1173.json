{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "You need to save the file in UTF-8, not ANSI",
    "ClosedDate": "2013-06-19T09:38:49.86-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I submitted a previous bug with an example, but I didn't know the cause.  Now that 0.9 is officially released, I spent more time looking into it.  \r\n\r\nI copied text from my browser and placed it in the jsdocs comments within my typescript file.  Some of the text contained unicode characters.  As a result, when I would compile, the compiler would be unable to load the typescript file with no explanation for why not.  Using the \"Save as\" feature in visual studio, which allows me to choose US  ASCII encoding, resolved the issue.\r\n\r\nI think this could happen quite easily in practice, and at a minimum a more transparent error should result. ",
    "LastUpdatedDate": "2013-06-19T09:38:49.86-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-19T02:04:06.06-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Cannot handle non-ascii unicode characters",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 1173
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I can confirm we're seeing this too!\n\nJust spent the morning stripping out bits of code until the problem went away and it was unicode characters in comments.\n\nTest.d.ts (The visual difference on this website between the apostrophe characters is minimal, but the first is ASCII and the second is unicode. In Visual Studio, with Consolas, the visual difference is more marked.)\n\nThis works fine:\n    interface ITestInterface {\n        Foo: string; //'\n    }\n\n\nThis doesn't:\n    interface ITestInterface {\n        Foo: string; //â€™\n    }",
      "PostedDate": "2013-06-19T03:22:02.77-07:00",
      "Id": 103400
    }
  ]
}