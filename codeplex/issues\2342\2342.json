{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "typeof operates on values, not types. What you need to do in this case is decompose the type parameter into the position where you consume it, e.g.:\n\n```\nclass B {\n\tstatic test<T>(arg: { sfunc: T }): T {\n\t\treturn arg.sfunc;\n\t}\n}\n```",
    "ClosedDate": "2014-03-24T10:44:15.067-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This should work:\r\n\r\n```\r\nclass A {\r\n\tstatic sfunc() { }\r\n\ttest<type extends typeof A>(): typeof type.sfunc {\r\n\t\treturn null;\r\n\t}\r\n\tstatic sfunc2: typeof A.sfunc;\r\n}\r\n```\r\n([http://goo.gl/7fYZ00](http://goo.gl/7fYZ00))\r\n\r\nLook at \"sfunc2\", which works fine to pull the function signature, but the function \"test\", which should also see \"sfunc\" from the constraint, doesn't work.  I can get intellisense to select \".sfunc\", but then the error pops up.",
    "LastUpdatedDate": "2014-03-24T10:44:15.067-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-20T14:02:49.047-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Return type not seeing constraint property types correctly",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2342
  },
  "FileAttachments": [],
  "Comments": []
}