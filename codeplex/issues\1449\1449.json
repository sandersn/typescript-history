{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 1,
    "Custom": null,
    "Description": "Currently it's possible to overload methods like this:\r\n```\r\npublic static FromArgb(argb: number);\r\npublic static FromArgb(alpha: number, baseColor: Color);\r\npublic static FromArgb(red: number, green: number, blue: number);\r\npublic static FromArgb(alpha: number, red: number, green: number, blue: number);\r\npublic static FromArgb(arg1: any, arg2?: any, arg3?: any, arg4?: any) {\r\n    if (arg2 == undefined) { // argb: number\r\n\r\n    }\r\n    else if (typeof arg2 == 'number') {\r\n        if (arg4 == undefined) { // red: number, green: number, blue: number\r\n\r\n        } else { // alpha: number, red: number, green: number, blue: number\r\n\r\n        }\r\n    }\r\n    else { // alpha: number, baseColor: Color\r\n\r\n    }\r\n}\r\n```\r\nWhich is a very ugly way because you require to check the type of each argument to know the correct method being called.\r\n\r\nIsn't it possible to implement method overloading and have the compiler handle the type checking in JavaScript so it is possible to write multiple versions of the method/constructor.",
    "LastUpdatedDate": "2013-08-13T09:45:29.453-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-07T11:57:42.663-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Method overloading",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1449
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "There isn't type information present at runtime, so it's impossible to handle this correctly in the general case.\n\r\n\r** Closed by RyanCavanaugh 08/07/2013 12:01PM",
      "PostedDate": "2013-08-07T12:01:59.923-07:00",
      "Id": 108901
    }
  ]
}