[
  {
    "Id": "920643",
    "ThreadId": "397717",
    "Html": "\r\n<p>Have you guys considered a TypeScript standard library?&nbsp;</p>\r\n<p>The web development space today is comprised of a hodgepodge of libraries and tools for doing basic things, from list comprehensions to DOM manipulations to data binding to GET/POST.</p>\r\n<p>It is reminiscent of pre-.NET Windows development days, where a mess of VB and C&#43;&#43; COM objects were floating around to do common 1990s programming tasks, each implementing tasks entirely differently: BSTR or CString or char*? We're hardly any different today,\r\n with $.map, array.map, ko.utils.array*, etc.</p>\r\n<p>Having a standard library greatly improved the state of app development back then, and I think having such a standard library for TypeScript applications would likewise help.</p>\r\n<p>Initially, you could address array filtering/iteration/comprehensions. &nbsp;CoffeeScript skipped this step, and instead chooses to generate inline the same damned loop filtering everytime you use their list comprehensions. Perhaps TypeScript could improve\r\n on that: real list comprehension in the form of a standard library.</p>\r\n",
    "PostedDate": "2012-10-02T08:23:52.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922038",
    "ThreadId": "397717",
    "Html": "<p>Thanks for the feedback.&nbsp;That sounds like it could be helpful, though not sure if there is a best \"standard library\" for JS, as it depends on what you're doing (if you're in Node, you might not want DOM).&nbsp; Perhaps a collection of libraries&nbsp;for different types of applications?</p>\r\n<p>If you see a place where TypeScript could be helped by having added functionality, that sounds like a good place to dive in and work out what that would look like.&nbsp; TypeScript is a community project and very much in the early stages.&nbsp; Everyone is helping shape what TypeScript will become.&nbsp;</p>",
    "PostedDate": "2012-10-04T11:35:02.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922106",
    "ThreadId": "397717",
    "Html": "<p>It might be useful for TypeScript to define some standard interfaces (for promises, modules etc) that the language would build on as primitives. &nbsp;For example, if there was a standardized promise interface the language compiler could depend on it for 'await' support and any implementing library could ducktype their implementation into it.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>\r\n<p>Joe</p>",
    "PostedDate": "2012-10-04T13:21:37.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]