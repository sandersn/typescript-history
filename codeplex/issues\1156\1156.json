{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "I think your type parameter is at the wrong level. Maybe you want something like this?\n\n```\ndeclare module \"foo\" \n{\n    var retval: { new <T>(data: T): string; };\n    export = retval;\n}\n\nimport test = module(\"foo\");\nvar r = new test(\"hello world!\"); // r: string\n```",
    "ClosedDate": "2013-06-17T09:35:46.057-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "How do I do this:\r\n\r\n```\r\ninterface hello<T>\r\n{\r\n    new(data: T): SomeType;\r\n}\r\n\r\ndeclare module \"foo\"\r\n{\r\n    var retval : hello;\r\n    export = retval;\r\n}\r\n\r\nimport test = module(\"foo\");\r\nvar r = new test(\"hello world!\");\r\n```\r\n\r\nCurrently, retval must have a solid type parameter provided to the generic type \"hello\".\r\n\r\nSince the \"export =\" statement restricts to only working on an identifier, it is currently not possible to export a generic type...\r\n\r\nSuggestion: allow the following:\r\n\r\n    export = a.b.c...x.z.y    where a.b.c...x.z.y is either an interface or a class\r\n",
    "LastUpdatedDate": "2013-06-17T09:35:46.057-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-16T21:35:34.767-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Exporting generic type",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1156
  },
  "FileAttachments": [],
  "Comments": []
}