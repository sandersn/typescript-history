{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Example:\n\ngm.d.ts\n```\ninterface gm {\n    blur(x: number, y: number): gm;\n    write(name: string, err: (err) => void): gm;\n}\n\ndeclare var gm: {\n    new (source: string): gm;\n    (source: string): gm;\n};\n\nexport = gm;\n```\n\nconsumer.ts:\n```\nimport gm = require('./gm');\n\n// Both work\ngm('foo.png').blur(4, 3);\nnew gm('foo.png').write('', undefined).blur(4, 5);\n```",
    "ClosedDate": "2014-03-24T10:29:19.417-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Is it not possible to define a constructor for a module declaration?\r\n\r\nsomething like:\r\n```\r\n/// <reference path=\"node.d.ts\" />\r\n\r\ndeclare module \"gm\" {\r\n    export function constructor(source:string);\r\n}\r\n```\r\n\r\nOtherwise I cannot figure out how one would create a definitions file for this code class's gm()-function: https://github.com/aheckmann/gm/blob/master/index.js\r\n\r\nI am trying to create a gm.d.ts file :-)",
    "LastUpdatedDate": "2014-03-24T10:29:19.417-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-22T11:01:47.673-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "A way to define a constructor for a module declaration?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2349
  },
  "FileAttachments": [],
  "Comments": []
}