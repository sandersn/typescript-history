{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "If you want a custom extends function, you can just overwrite TypeScript's __extends function at your class definition site:\n\ndeclare var __extends;\nfunction myExtends(derived, base) {\n    // whatever you like\n}\n\n// later...\nvar oldExtends = __extends; // If you want to keep it around\n__extends = myExtends;\nclass Foo extends Bar {\n\n}\n__extends = oldExtends;",
    "ClosedDate": "2013-12-09T09:11:08.553-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "A lot of libraries such as knockout or backbone allow extending types via some sort of extend call. As a result I cannot write\r\n\r\n  class Foo extends ko.ObservableArray\r\n\r\nSince the code typescript generates is not going to use ko.observableArray({}) to create an object. \r\n\r\nThe only thing I can do is to define interface\r\n\r\ninterface Foo implements ObservableArray\r\n{\r\n   A, B, C\r\n} \r\n\r\nvar foo = <Foo>ko.observableArray({ A: a() ... })\r\n\r\nbut this is bit inconvenient and does not provide strong type check. Any solutions?\r\n\r\n\r\n\r\n",
    "LastUpdatedDate": "2013-12-09T09:11:08.553-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-12-07T08:16:05.19-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "using custom extend() from base class / library",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1985
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Because ko.ObservableArray is actually a function that returns an object, what we want here is a way to extend a class using an already-instantiated object.\n\nThis is probably best handled by a mixin.\n\nI actually don't think there is a ticket out for mixins yet, in spite of it being discussed on the forum multiple times.\n\nPerhaps you may want to provide a better title to your issue.",
      "PostedDate": "2013-12-08T04:53:33.003-08:00",
      "Id": 126519
    }
  ]
}