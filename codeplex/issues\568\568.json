{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "I can't reproduce this with TS 0.8.1.1 + WE 2.1. Is there anything else I should try?",
    "ClosedDate": "2012-12-19T14:00:02.223-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "- Open attached file in VS 2012 with TypeScript 0.8.1.1 extension and Web Essentials 2.0 or 2.1 installed\r\n\r\n- Note the error that appears in Error List pane: \"Internal error: please implement in derived class\"\r\n\r\n- Click on the word \"radio\" on line 21\r\n\r\n- Visual Studio hangs and uses a lot of CPU\r\n\r\nAttaching to VS 2012 instance with another VS 2012 instance shows that this exception is thrown over and over:\r\n\r\nSystem.ApplicationException occurred\r\n  HResult=-2146232832\r\n  Message=please implement in derived class\r\n  Source=TypeScriptLanguageService\r\n  StackTrace:\r\n       at TypeScriptLanguageService.CompilerServices.JsonHelpers.ParseSpanInfo(String jsonText)\r\n  InnerException: \r\n\r\n\r\n\r\nHere's the full stack trace:\r\n\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.CompilerServices.JsonHelpers.ParseSpanInfo(string jsonText = \"{\\\"error\\\":{\\\"description\\\":\\\"please implement in derived class\\\",\\\"message\\\":\\\"please implement in derived class\\\"}}\") + 0xf2 bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.CompilerServices.TypeScriptLanguageServiceProxy.GetNameOrDottedNameSpan(Microsoft.VisualStudio.Text.SnapshotSpan span = {Microsoft.VisualStudio.Text.SnapshotSpan}) + 0x22a bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.Features.QuickInfo.DebugTextViewFilter.ExecuteBackgroundTask.AnonymousMethod__2(TypeScriptLanguageService.CompilerServices.ITypeScriptLanguageServicesProxy services = {TypeScriptLanguageService.CompilerServices.TypeScriptLanguageServiceProxy}) + 0x40 bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.CompilerServices.SimpleTypeScriptLanguageServicesTask.Run(TypeScriptLanguageService.CompilerServices.ITypeScriptLanguageServicesProxy servicesProxy = {TypeScriptLanguageService.CompilerServices.TypeScriptLanguageServiceProxy}) + 0x3a bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.CompilerServices.TypeScriptLanguageServicesTask.Run() + 0x11f bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.Threading.BackgroundThreadQueue.ExecuteOneTask(TypeScriptLanguageService.Threading.BackgroundTask task = {TypeScriptLanguageService.CompilerServices.SimpleTypeScriptLanguageServicesTask}) + 0x103 bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.Threading.BackgroundThreadQueue.ExecuteTasks() + 0x12f bytes\t\r\n \tTypeScriptLanguageService.dll!TypeScriptLanguageService.Threading.BackgroundThreadQueue.Loop() + 0x7b bytes\t\r\n>\tmscorlib.dll!System.Threading.Tasks.Task.InnerInvoke() Line 2797 + 0x8 bytes\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.Execute() Line 2430 + 0xb bytes\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecutionContextCallback(object obj) Line 2783 + 0x9 bytes\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 581 + 0xd bytes\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 530 + 0xd bytes\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot = Id = 1, Status = Running, Method = \"Void Loop()\") Line 2754\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteEntry(bool bPreventDoubleExecution) Line 2699\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() Line 2635 + 0x7 bytes\tC#\r\n \tmscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() Line 829\tC#\r\n \tmscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() Line 1170 + 0x5 bytes\tC#\r\n\r\n\r\n\r\n\r\nIf I disable the Web Essentials extension, then the hang does not happen.  But if I attach with a debugger, I still see that same exception thrown many times as I move my mouse around the code window. Perhaps the Web Essentials extension somehow causes a the exception to be thrown in a tighter loop?\r\n",
    "LastUpdatedDate": "2013-08-13T12:35:05.713-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-12-19T12:25:51.927-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Visual Studio freezes and shows error \"Internal error: please implement in derived class\"",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 568
  },
  "FileAttachments": [
    {
      "FileId": 580065,
      "FileName": "TypescriptHang.zip",
      "DownloadUrl": ".\\580065"
    }
  ],
  "Comments": [
    {
      "Message": "I get the same error when I open your file. It doesn't crash or freeze though. I have also gotten the error \" Internal error: please implement in derived class \" on one of my projects. I'm working on a Node.js app it it seems to be to do with modules or something. It appeared once but and after some messing around it went away, but seems to be back now again. Very bizarre problem. ",
      "PostedDate": "2013-01-09T18:13:37.357-08:00",
      "Id": 85692
    }
  ]
}