{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:26.707-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "it is often necessary to transmit object method as callback, and we need write code like\r\n```\r\ndataProvider.getData(object.dataCallback.bind(object))\r\n```\r\nI think that it would be convenient to add a short syntax for this, for example like\r\n```\r\ndataProvider.getData(object->dataCallback)\r\n```\r\nwhere object->method would translate to object.method.bind(object). \r\n\r\nWhat do you think about this?",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-09T23:45:27.473-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "FeatureRequest: short syntax for bind.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 4,
    "Id": 2411
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "When spread/splats are available, this could be written as \n```typescript\n(...args) => object.dataCallback(...args)\n```\nIt's slightly more verbose but you don't have to say \"object\" twice?",
      "PostedDate": "2014-04-10T07:39:39.893-07:00",
      "Id": 141359
    },
    {
      "Message": "Interesting proposal since we could use this to make `bind` type-safe without any extra work on the type system side.",
      "PostedDate": "2014-04-10T09:13:41.29-07:00",
      "Id": 141381
    },
    {
      "Message": "I like the \"->\" idea (reminds me of C++ ;) ), but not the second idea.  \"=> object.\"  Developers (myself included) may want the \"object\" reference to become part of a closure, not a binding.",
      "PostedDate": "2014-04-10T11:24:43.667-07:00",
      "Id": 141401
    },
    {
      "Message": "@jamesnw: Ahem, I wasn't proposing a new syntax. \n\nSee: https://typescript.codeplex.com/workitem/842  (and, in particular, the last comment [which I hadn't read until just now, I swear!])\n\n",
      "PostedDate": "2014-04-10T12:03:20.113-07:00",
      "Id": 141409
    },
    {
      "Message": "An alternative that's typesafe and works with today's typescript is to define the dataCallback as an arrow function class member instead of a prototype method, so bind becomes unnecessary.\n\ni.e., \n```typescript\nclass TheObjectType {\n    dataCallback = (/*...args (no loss of typesafety here) ...*/) => {\n       /* ... this is always bound ... */\n    }\n}\n\nvar object = new TheObjectType();\ndataProvider.getData(object.dataCallback); // full typeinfo retained here\n```",
      "PostedDate": "2014-04-10T12:09:21.347-07:00",
      "Id": 141410
    },
    {
      "Message": "@AdamFreidin: Sorry, the title of this issue  says \"syntax for bind\", so  I thought you were on subject. ;)\n\n",
      "PostedDate": "2014-04-10T13:11:43.273-07:00",
      "Id": 141418
    }
  ]
}