{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in the 0.9.x branch",
    "ClosedDate": "2013-03-18T08:39:32.783-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm trying to inject interface into Function object in order to simulate disjoint type IType = Function | MyType\r\n\r\n```\r\ninterface IType {}\r\ninterface Function extends IType {}\r\ninterface MyType extends IType {}\r\n\r\nvar f: Function = Object;\r\nvar t: IType = Object;\r\n```\r\n\r\nUnfortunately last line does not typecheck:\r\n\r\n> Cannot convert '{ prototype: Object; ..., (): any; (value: any): any; new(value?: any): Object; }' requires a call signature, but Type 'IType' lacks one\r\n{ prototype: Object; ..., (): any; (value: any): any; new(value?: any): Object; }\r\n",
    "LastUpdatedDate": "2013-03-18T08:39:32.783-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-17T11:41:01.977-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "can't inject interface into Function",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 823
  },
  "FileAttachments": [],
  "Comments": []
}