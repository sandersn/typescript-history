{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "What happens in the first sample you posted is: the string []  you pass as the second argument is considered the first item in the any []. \n\nWhat's actually is happening is the following:\n```\nMethod1() {\n    this.Method2(1, [\"a\", \"b\", \"c\"]);\n}\n\nMethod2(arg1: number, ...params: any[]) {\n    params[0] === [\"a\", \"b\", \"c\"];\n}\n```\n\nThe second example gives you a compile error, since there is no conversion between a string [] and a string.\n\nWhat you want to write in the second example is either:\n```\nMethod1() {\n\tthis.Method2(1, \"a\", \"b\", \"c\");\n}\n\nMethod2(arg1: number, ...params: string[]) {\n\tparams[0] === \"a\";\n\tparams[1] === \"b\";\n\tparams[2] === \"c\";\n}\n```",
    "ClosedDate": "2013-03-29T12:27:15.637-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Why does the first example below compile, but not the second one? This seems like a bug in the 0.8.3 compiler.\r\n\r\n```\r\n        Method1() {\r\n            this.Method2(1, [\"a\", \"b\", \"c\"]);\r\n        }\r\n\r\n        Method2(arg1: number, ...params: any[]) {\r\n            console.log(arg1);\r\n            console.log(params);\r\n        }\r\n```\r\n\r\nThis does not compile. The only difference is changing the \"params\" type from any[] to string[].\r\n\r\n```\r\n        Method1() {\r\n            var strings: string[] = [\"a\", \"b\", \"c\"];\r\n            this.Method2(1, strings);\r\n        }\r\n\r\n        Method2(arg1: number, ...params: string[]) {\r\n            console.log(arg1);\r\n            console.log(params);\r\n        }\r\n```",
    "LastUpdatedDate": "2013-03-29T12:27:15.637-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-29T09:30:00.503-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Passing array as params argument when params are strongly-typed",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 853
  },
  "FileAttachments": [],
  "Comments": []
}