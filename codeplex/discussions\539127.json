[
  {
    "Id": "1223147",
    "ThreadId": "539127",
    "Html": "Does anyone have an example of a typescript project (preferable 1.0RC) with the TodoMVC refactored using requirejs.  I'm been working on this now and am getting stuck on the requirejs portion.  I'm consistently am getting the infamous &quot;Mismatched anonymous define() module&quot; error from requirejs.<br />\n\r<br />\nI'll admit that I'm not familiar setting up the config and what-not of requirejs so I need some assistance in order to get a working version.  The the supporting classes (Todo, TodoList, and TodoView) are separated into distinct class files.  The goal is to be able to work with distinct class files.  I'm surprised that there are hardly any good or working examples of this which I would think would be commonplace.\r<br />\n<br />\nI'm pretty much blocked and extremely frustrated by this one issue so I appreciate any help in advanced.<br />\n\r<br />\nHere's a link to the zipped project ... <a href=\"http://1drv.ms/1gnTac3\" rel=\"nofollow\">TodoMVC</a><br />\n",
    "PostedDate": "2014-03-15T14:33:38.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1224633",
    "ThreadId": "539127",
    "Html": "Well I couldn't wait and did the refactoring myself.  I'll post a link to the project -- <a href=\"http://1drv.ms/1gBvtwX\" rel=\"nofollow\">TodoMVC</a>\r<br />\n<br />\nI refactored the badly obsolete TodoMVC TypeScript example into a Visual Studio 2013 AMD project using RequireJS and refactored App.ts moving Todo, TodoList and TodoView into separate files and folders.  I added the main.ts which instantiate the App class kicking off the application via its run method.\r<br />\n<br />\nThe obsolete version defines some nasty global variables such as a global TodoList.  This causes grief for RequireJS because globals get resolved before the class are loaded.  I moved the global TodoList into the App class.  Trying to figure out RequireJS wasn't easy but perseverance paid off and I'm posting this refactored version of TodoMVC so others won't have to go through this experience and it now provides an excellent example of how to organize a real solution and project using TypeScript.<br />\n",
    "PostedDate": "2014-03-19T19:35:37.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]