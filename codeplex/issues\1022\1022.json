{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for the suggestion. We already have plans for a compiler flag to achieve some of what you want. The general idea would be almost anywhere the compiler infers 'any' or widens a type to 'any' you would get an error when you compile with --noimplicitany. This would not cover cases like assigning an explicit any to something else (like your assignment of x to z) but in that case you have already explicitly signaled your intention to not be strongly typed.",
    "ClosedDate": "2013-05-10T12:51:06.32-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I want to make some functions arguments and constructor arguments to accept only strongly typed parameters. Now i can pass 'any' typed value to a constructor's strongly typed argument and it will accept it. In some cases i want it only accept strongly typed values.\r\n\r\nExpected \r\nThe compiler should allow to make some variables or functions parameters really strongly typed and does not allow to assign 'any' typed values.\r\nI suggest to mark somehow this type annotations.\r\n\r\nFor example:\r\nvar x:any = 'xyz';\r\nvar y: number;\r\ny= x; //now it will be ok\r\nbut when we mark type to be really strongly typed\r\nfor example if we declare z variable in such a way\r\nz: @number;\r\n//then\r\nz=x; //will be error!! because we marked it to be strongly type number variable - using @ as a mark\r\n\r\nBenefits:\r\nIt will reduce errors, because we can ensure at compile time that we can not pass accidently to a function\r\nuntyped value. Now it is unnoticed till runtime.",
    "LastUpdatedDate": "2013-08-13T09:14:41.327-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-09T12:48:00.907-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "enforce a variable to be strongly typed and not accept 'any' typed values",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1022
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks.\nYour solution is just what i want. Because i had issues with some of 'this' variables. In closures they are infered as 'any' typed. Which was left unnoticed till when i ran the program.",
      "PostedDate": "2013-05-12T05:16:21.93-07:00",
      "Id": 100010
    }
  ]
}