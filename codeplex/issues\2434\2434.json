{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is sort of an unfortunate overloading of the idea of \"implements\" when referring to optional members.\n\nHalf the people expect that classes which \"implement\" an interface with optional members get to only implement the ones they want. The other half expect that the implementing class must have an optional property with a matching type (same as a non-optional property).\n\nThe splitting of this particular baby means that if `Model` really implements `OptionalDefaults` in this way, it should declare a `defaults` property as well.",
    "ClosedDate": "2014-04-14T09:15:06.57-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I think MyModel below should still know about the `defaults` member...\r\n\r\n```typescript\r\ndeclare module Backbone {\r\n    interface OptionalDefaults {\r\n        defaults?: any;\r\n    }\r\n\r\n    class Model implements OptionalDefaults {\r\n\t\tname: any;\t\r\n    }\r\n}\r\n\r\nclass MyModel extends Backbone.Model {\r\n\tconstructor() {\r\n\t\tthis.name = 'Ben';\r\n\t\tthis.defaults = {}; //Error: The property 'defaults' does not exist on value of type 'MyModel'.\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nvar model = new MyModel();\r\n```",
    "LastUpdatedDate": "2014-04-14T09:15:06.57-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-14T06:40:02.747-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Optional Interface does not propagate of derived types",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2434
  },
  "FileAttachments": [],
  "Comments": []
}