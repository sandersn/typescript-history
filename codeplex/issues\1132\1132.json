{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T13:38:15.587-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "So there seem to be an issue with interfaces that use generics being exported directly as modules when properties on the interface are of the type of the interface and use a generic. I have the following code:\r\n\r\n``` ts\r\ninterface IPromise<T> {\r\n    then<U>(onFulfilled: (value: T) => U): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => IPromise<U>): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason: T) => U): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason) => IPromise<U>): IPromise<U>;\r\n    then<U>(onFulfilled?: (value: T) => IPromise<U>, onReject?: (reason) => U): IPromise<U>;\r\n    then<U>(onFulfilled?: (value: T) => IPromise<U>, onReject?: (reason) => IPromise<U>): IPromise<U>;\r\n}\r\n\r\nexport = IPromise;\r\n```\r\n\r\nWhich gives a compilation error saying that IPromise<U> is a private type.\r\n\r\nHowever, if I do the following code:\r\n\r\n``` ts\r\ninterface IPromise<T> {\r\n    then<U>(onFulfilled: (value: T) => U): IPromise;\r\n    then<U>(onFulfilled: (value: T) => IPromise): IPromise;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason: T) => U): IPromise;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason) => IPromise): IPromise;\r\n    then<U>(onFulfilled?: (value: T) => IPromise, onReject?: (reason) => U): IPromise;\r\n    then<U>(onFulfilled?: (value: T) => IPromise, onReject?: (reason) => IPromise): IPromise;\r\n}\r\n\r\nexport = IPromise;\r\n```\r\n\r\nI have no problem compiling (no generic specified on the IPromise objects).\r\n\r\nI also have no problem with this code:\r\n```ts\r\nexport interface IPromise<T> {\r\n    then<U>(onFulfilled: (value: T) => U): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => IPromise<U>): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason: T) => U): IPromise<U>;\r\n    then<U>(onFulfilled: (value: T) => U, onReject: (reason) => IPromise<U>): IPromise<U>;\r\n    then<U>(onFulfilled?: (value: T) => IPromise<U>, onReject?: (reason) => U): IPromise<U>;\r\n    then<U>(onFulfilled?: (value: T) => IPromise<U>, onReject?: (reason) => IPromise<U>): IPromise<U>;\r\n}\r\n```\r\n\r\nIs this correct behavior?",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-09T23:08:42.887-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Setting Export to Interface problem with Generics on v0.9",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 3,
    "Id": 1132
  },
  "FileAttachments": [
    {
      "FileId": 691303,
      "FileName": "IPromise.ts",
      "DownloadUrl": ".\\691303"
    }
  ],
  "Comments": [
    {
      "Message": "Marking active",
      "PostedDate": "2013-06-10T13:39:29.973-07:00",
      "Id": 102701
    }
  ]
}