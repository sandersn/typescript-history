{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is actually by design, because we have a structural type system. Ryan does a good job explaining this here [0]:\n\nhttps://typescript.codeplex.com/workitem/1866",
    "ClosedDate": "2013-11-08T10:53:32.073-08:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "```\r\ninterface Z<I> {\r\n    foo(a: Z<I>): void;\r\n}\r\n\r\nfunction zou () : Z<string>{\r\n\treturn zde();\r\n}\r\n\r\nfunction zde(): Z<number> {\r\n\treturn null;\r\n}\r\n```\r\n\r\nthis should not compile (in my opinion).\r\nIf I add a field a: I in the interface Z<I>, then it does not compile anymore, as expected.\r\n",
    "LastUpdatedDate": "2013-11-19T15:49:40.39-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-08T08:37:17.723-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "the compiler does not detect wrong typing on methods signature in generic interfaces",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1875
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "this still sounds weird, because Z has actually a member property using I : foo\nI guess the type of foo is the type of its signature, which involves I.\nDo I understand correctly?\n",
      "PostedDate": "2013-11-09T06:26:17.593-08:00",
      "Id": 122509
    },
    {
      "Message": "Z<I> never uses I either, though. You need to actually use I in a member position somewhere for it to be 'different'",
      "PostedDate": "2013-11-19T15:49:40.39-08:00",
      "Id": 123592
    }
  ]
}