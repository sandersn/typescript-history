{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:22:01.283-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "The default workflow for using TypeScript in Visual Studio is to grab the appropriate declaration source files (*.d.ts) from NuGet. By default, they are added to the project. This works great for providing type info; you don't even need to add '/// <reference path=\"...\"/>' to your .ts files.\r\n\r\nThe downside is that when you press Ctrl+, to bring up Visual Studio's Navigate To feature and type a symbol you're looking for, you get your own symbols, plus matching symbols for all the TypeScript interface definitions. This happens even when \"Search within external items\" is turned off.\r\n\r\nLibraries have lots of symbols, often more than our own apps. Those symbols get in the way of navigating quickly within our own app. That's why there's a switch to turn off external items. Unfortunately, it doesn't work by default.\r\n\r\nA workaround is to manually remove the declaration source files form the project, and ensure the necessary '/// <reference path=\"...\"/>' headers are in place.\r\n\r\nIt would nice to have the best of both worlds: a way to not need the reference headers, while still keeping external items out of the search results.",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-13T09:46:16.357-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Declaration source files pollute IDE symbol space",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2179
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "[Related issue submitted on DefinitelyTyped project](https://github.com/DefinitelyTyped/NugetAutomation/issues/11)",
      "PostedDate": "2014-02-13T09:57:28.28-08:00",
      "Id": 133504
    },
    {
      "Message": "It turns out that removing .d.ts files from the Visual Studio project doesn't solve the problem after all. When I removed the files from the project then restarted Visual Studio, at first the searches were clean, but later the external TypeScript symbols reappeared. It don't know whether opening a TypeScript file in the project triggered the change or if it was just parsing time. Either way, the workaround in my original post doesn't work.",
      "PostedDate": "2014-02-13T10:42:52.64-08:00",
      "Id": 133509
    },
    {
      "Message": "Thanks for reporting we'll take a look.",
      "PostedDate": "2014-02-13T12:58:54.083-08:00",
      "Id": 133522
    },
    {
      "Message": "I posted a [revised version of this bug](https://github.com/Microsoft/TypeScript/issues/243) on GitHub.",
      "PostedDate": "2014-07-24T19:54:45.64-07:00",
      "Id": 153466
    }
  ]
}