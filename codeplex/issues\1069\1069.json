{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-05-30T16:16:37.57-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "Some methods can be created at runtime. For example “createjs” extends some classes to add EventDispatcher capabilities to them this way\r\n```\r\nEventDispatcher.initialize(MyClass.prototype);\r\n```\r\nIf we want to use EventDispatcher in TypeScript classes we should do some tricks with interfaces.\r\n\r\nI want to suggest to allow declare some methods in classes to notify compiler about them.\r\n\r\n```\r\nclass MyClass {\r\n    declare addEventListener(type: string, listener: (e: Event) => bool): void;\r\n    ...\r\n}\r\n```\r\n\r\nOr another way is to declare something like mixin\r\n\r\n```\r\ninterface EventDispatcher {\r\n    addEventListener(type: string, listener: (e: Event) => bool): void;\r\n}\r\n\r\nclass MyClass include EventDispatcher {\r\n}\r\n\r\n```\r\n\r\n",
    "LastUpdatedDate": "2013-05-30T16:16:37.57-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-25T12:10:00.607-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Dynamic methods.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1069
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I'm sorry, I just realised it can be declared via propertiy\n```\nclass MyClass {\n   addEventListener: (type: string, listener: (e: Event) => bool) => void;\n    ...\n}\n```",
      "PostedDate": "2013-05-28T01:14:56.137-07:00",
      "Id": 101377
    },
    {
      "Message": "Thanks.  As you note in your follow up, you can declare a property on a class (or interface) that can be assigned to later.  We also support optional properties on interfaces, so you can indicate that a property may or may not be present on a type.\n\nIf I'm misunderstanding your suggestion, please reopen and clarify.  Thanks!",
      "PostedDate": "2013-05-30T16:16:31.86-07:00",
      "Id": 101732
    }
  ]
}