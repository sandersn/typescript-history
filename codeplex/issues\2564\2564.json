{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T17:30:39.613-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "When I have an import statement then it seems to work but otherwise when I don't have an import it does nothing, is it a bug? by design? atm I need to do the following to get the following test to work.\r\n\r\n```\r\ndeclare function define(modules: string[], func: () => void): void;\r\ndefine([\"src/framework/string\"], (): void => {\r\n\tdescribe(\"format\", (): void => {\r\n\t\tit(\"should return literal when a literal is provided\", (): void => {\r\n\t\t\tvar value: string = \"foo\".format();\r\n\r\n\t\t\texpect(value).to.be(\"foo\");\r\n\t\t});\r\n\t});\r\n});\r\n```",
    "LastUpdatedDate": "2014-07-21T17:30:39.613-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-06-17T16:02:37.587-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "amd-dependency does nothing?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2564
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I worked around this by changing the design so extensions made to JavaScript are not part of the module system so I load them before my framework manually, this way I lose something but I save myself a lot of headaches.",
      "PostedDate": "2014-06-18T04:19:37.263-07:00",
      "Id": 150010
    }
  ]
}