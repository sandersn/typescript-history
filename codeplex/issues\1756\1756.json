{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.033-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "There should be an option to output each file's absolute path, nested within the specified directory.\r\n\r\n /Users/x/dev/foo\r\n /Users/x/dev/foo/bar\r\n\r\n tsc --outDir /tmp --outDirAbsolute\r\n\r\n /tmp/Users/x/dev/foo\r\n /tmp/Users/x/dev/foo/bar\r\n\r\n This lets an external tool always know where to find a file. The current way is unpredictable. If you are to reference a new file one directory up, it will throw your whole project out of whack.\r\n\r\n I am working on the typescript-require project for Node.js and this is causing a lot of pain.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-04T11:51:12.34-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Option to report names for generated files",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 1756
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I'm the creator of require-ts nodejs module and as for now what I'm doing is reading the difference in the directory structure of compiled files. When there is no difference then I'm changing the --outDir.\nThis is ugly hack around the lack of --ourDirAbsolute but it seams to work for now.",
      "PostedDate": "2014-03-05T03:36:41.73-08:00",
      "Id": 135881
    }
  ]
}