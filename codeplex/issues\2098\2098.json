{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is intentional for now, I see the error in all recent versions of TypeScript. The target of an extends clause must be an actual type (ie a class or interface), var's do not introduce types so they cannot be used as the target of an extend clause.",
    "ClosedDate": "2014-01-16T17:16:27.487-08:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I have a typescript file with the following code:\r\n````\r\n//Old Obect  written in JavaScript:\r\n\r\nvar CViewObject = (function () {\r\n//some  code\r\n    } )();\r\n\r\n//and new object in TypeScript:\r\n\r\nclass CExtendViewObject  extends CViewObject  //here VS 2013 show error:  Could not find symbol 'CViewObject '\r\n{\r\n//some code\r\n }\r\n````\r\n\r\nBut this code compiles correctly. TypeScript version is 0.9.5\r\n",
    "LastUpdatedDate": "2014-01-16T17:16:27.487-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-01-14T21:39:46.62-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Not true error in VS2013",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2098
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Questions:\n\n```\n - Is the old object written in Javascript in a seperate file?\n   if yes:\n        - Does the javascript file have an accompanying Declaration TypeScript (.d.ts)\n          file?\n           if yes:\n                   - Can you please provide that Declaration TypeScript file?\n           if no:\n                 you need to provide a Declaration TypeScript file which represents\n                 javascript files in typescript-friendly formats (look it up, it's \n                 easy to create).\n   if no:\n        - Does the code have an accompanying TypeScript type associated with it? Any \n          code you don't supply the type for is treated as 'any', and classes can't\n          inherit from an object with type any.\n           if yes:\n                   - Can you please provide the TypeScript code you're using to type \n                     the variable?\n           if no:\n                   see below\n```\nYou need to provide a type for code you write in TypeScript, while typescript is relatively smart in figuring out most stuff, it can't figure out what's meant to be a class/interface - you will have to supply that information manually (information about classes, interfaces and .d.ts files are available in the TypeScript language specification).",
      "PostedDate": "2014-01-14T21:58:43.563-08:00",
      "Id": 130453
    },
    {
      "Message": "The code is in single file. Javascript code  doesn't  have an accompanying TypeScript type.  Need I  rewrite old javascript code to typescript? If yes, it's bad,  it will take a lot of time and will require additional testing code. ",
      "PostedDate": "2014-01-15T01:31:30.327-08:00",
      "Id": 130470
    }
  ]
}