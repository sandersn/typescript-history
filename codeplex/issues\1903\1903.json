{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in the develop branch. This fix is also in the 0.9.5 beta if you'd like to try it out there. Thanks!",
    "ClosedDate": "2013-11-18T11:37:56.7-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hello,\r\n\r\nthe following compiles fine in TS 0.9.1.1 but doesn't work as expected:\r\n\r\n```\r\n\tclass Z {\r\n\t\tconstructor(public x: number,\r\n\t\t\tpublic y: number = this.x) {\r\n\t\t}\r\n\t}\r\n\r\n\tvar z = new Z(1);\r\n\tconsole.assert(z.y == 1);\r\n\r\n```\r\n\r\nThe following Javascript code is generated:\r\n```\r\n var Z = (function () {\r\n            function Z(x, y) {\r\n                if (typeof y === \"undefined\") { y = this.x; }\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n            return Z;\r\n        })();\r\n```\r\n\r\nAs can be seen, this.x is accessed before it is set.\r\n\r\nIt would be great if this would generate correct code, since this makes generating default parameter values a lot easier.\r\n\r\nIf that is impossible, I would expect a compiler error.\r\n\r\nBest regards,\r\nPeter Verswyvelen\r\n\r\n",
    "LastUpdatedDate": "2013-11-18T11:37:56.7-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-18T01:46:17.157-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "constructor parameter property declaration and this",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1903
  },
  "FileAttachments": [],
  "Comments": []
}