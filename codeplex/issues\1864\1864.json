{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.16-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "The compiler (LKG from develop) produces this error on the following code:\r\n\r\n```\r\ndeclare module \"a\" {}\r\nimport a = require(\"a\");\r\n\r\nvar x = a;\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-04T17:09:36.227-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Support declaring ambient external modules inside of other external modules",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1864
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This is an intentional design change, but marking as a suggestion so we can track interest in this.",
      "PostedDate": "2013-11-04T17:54:43.623-08:00",
      "Id": 121790
    },
    {
      "Message": "What is the design change?\nI mean, how should I declare external modules now?",
      "PostedDate": "2013-11-04T18:27:14.547-08:00",
      "Id": 121792
    },
    {
      "Message": "You'll need to declare them in a separate referenced .d.ts file (i.e. how node.d.ts works today)",
      "PostedDate": "2013-11-07T15:07:14.08-08:00",
      "Id": 122217
    },
    {
      "Message": "That's what I was afraid of.\n\nDo you then have a solution for [issue 1046](https://typescript.codeplex.com/workitem/1046)? If not, I'm totally screwed for trusting you guys and going with TypeScript. :-(",
      "PostedDate": "2013-11-07T15:47:41.533-08:00",
      "Id": 122225
    },
    {
      "Message": "Issue 1046 seems to have a workaround using the amd-dependency for non-code modules.  \n\nIs there something preventing using the separate .d.ts?  While I can see it being inconvenient, it helps to keep it clear what is rooted off of the global scope (the modules declared and referenced through the .d.ts) vs what's part of the external module. ",
      "PostedDate": "2013-11-12T11:35:25.987-08:00",
      "Id": 122794
    },
    {
      "Message": "The workaround in issue 1046 only works when I place the amd-dependency directive at the very top of the file. This would require that I either place the corresponding require() call at the very top as well (which is ugly) or put the directive and the call in different parts of the file (which is also ugly and unmaintainable).",
      "PostedDate": "2013-11-12T12:30:00.14-08:00",
      "Id": 122796
    },
    {
      "Message": "I agree that it doesn't have a solution with a nice syntax and that having to maintain the path in two places isn't ideal.  For 1.0, we've talked about a few solutions to this, but ultimately decided to revisit this later and focus on quality/stability of the existing language.  \n\nAfter 1.0 is released, we can look at how this could be better addressed, along with some of the other polish to make large-scale apps easier to create and maintain.",
      "PostedDate": "2013-11-12T13:25:39.017-08:00",
      "Id": 122817
    }
  ]
}