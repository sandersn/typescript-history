[
  {
    "Id": "920795",
    "ThreadId": "397767",
    "Html": "\r\n<p>Many JavaScript projects, especially those on github, use build tools like gruntjs, which provide build-time features like lint, unit testing, minification, API doc generation, etc.</p>\r\n<p>Obviously, we could configure our own TypeScript projects to use these tools as well from the command line, but I wonder what the build tools for TypeScript could look like, especially if they were tightly integrated into VS?</p>\r\n<p>Basically, I would ideally like to be able to right-click my TypeScript project in VS and check off: Lint, Test, Watch, Minify, Generate API Documentation, etc.</p>\r\n<p>In addition to wondering what the TypeScript roadmap is for build tools, what is the current state as far as:</p>\r\n<ol>\r\n<li>Does TypeScript's build output compile without warnings or errors in Google Closure Compiler w/ Advanced Optimizations?\r\n<em>Note: I tried running the Simple Inheritance playground sample thru it and it gave me 2 mildly concerning warnings.</em>\r\n</li><li>What does the JSLint or JSHint output look like if I run some of the commonly generated output (e.g. classes, inheritance, modules) through it?\r\n</li><li>How can we enforce strict mode in our source code? </li></ol>\r\n",
    "PostedDate": "2012-10-02T12:06:10.043-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922076",
    "ThreadId": "397767",
    "Html": "<p>Agreed that we'd like to know that the .js output is as clean as possible.</p>\r\n<p>We'd talked about a strict mode, and I think that's a good idea.&nbsp; Do you have specific thoughts on what strict mode should enforce (like bugs that should be caught but aren't)?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-10-04T12:26:20.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]