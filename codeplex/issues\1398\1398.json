{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This has been fixed in the develop branch",
    "ClosedDate": "2013-07-29T09:40:34.407-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Check this out: \r\n```\r\ninterface A { x(): void; }\r\ninterface B { y(): void; }\r\ninterface C<T> extends A, B { z(): void; }\r\n\r\nvar i: C<any>;\r\ni.y();\r\n```\r\n\r\nThe call to ```i.y()``` causes a compiler error, stating that type ```C<any>``` does not have a property named ```y```.\r\nIf I change the inheritance list from ```A, B``` to ```B, A```, the compiler sees method ```y()```, but now it doesn't see method ```x()```. In other words, the compiler ignores all interfaces except the first one.\r\n\r\nNOTE: this only happens when interface ```C``` is generic.",
    "LastUpdatedDate": "2013-07-29T09:40:34.407-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-26T20:33:59.657-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Multiple inheritance for generic interfaces doesn't work",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1398
  },
  "FileAttachments": [],
  "Comments": []
}