[
  {
    "Id": "1069551",
    "ThreadId": "450336",
    "Html": "Supposing I have following code:<br />\n<pre><code>module F {\n    class Array&lt;T&gt; {}\n    \n    function f(...p : Array&lt;number&gt;) {\n        \n    }\n}</code></pre>\n\nThis code is incorrect because I use my Array and not the one from the library.\r<br />\nBut it is impossible to access the global class.\r<br />\nIs there any possibility ?<br />\n",
    "PostedDate": "2013-07-17T07:45:46.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1069556",
    "ThreadId": "450336",
    "Html": "Don't call your class &quot;Array&quot;.<br />\n",
    "PostedDate": "2013-07-17T07:48:51.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1069595",
    "ThreadId": "450336",
    "Html": "What if I use external JS library where it defines Array type ?:)\r<br />\nAnyway there should be a way to access global things.<br />\n",
    "PostedDate": "2013-07-17T09:14:40.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1069914",
    "ThreadId": "450336",
    "Html": "That would only be an issue if the external JS library defined the Array type in the same module/namepsace as your code, which seems unlikely.<br />\n",
    "PostedDate": "2013-07-18T01:55:06.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1070073",
    "ThreadId": "450336",
    "Html": "I think what NN is referring to is something similar to this issue: <a href=\"https://typescript.codeplex.com/workitem/1210\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/1210</a>\r<br />\n<br />\nFor now, it seems there is no way around it other than using any as a type and make typescript not bother with it.\r<br />\n<br />\nWe will have to wait for 1.0.<br />\n",
    "PostedDate": "2013-07-18T08:35:36.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]