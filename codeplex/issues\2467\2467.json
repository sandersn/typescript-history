{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:09.533-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "We have a TypeScript project that starts to grow and we would like to create some documentation of it for internal use. Any kind of API documentation or something like a class diagram would be useful. What is the recommended way to generate a documentation directly from TypeScript source code? \r\n\r\nWe are writing JSDoc-style comments into the source code, however I could not find a tool that can extract that from .ts files and understands the reduced syntax VS requires for IntelliSense. All the tools I could find breaks with the TS language and misses the detailed (and redundant) JSDoc syntax. \r\n\r\nThe JSDoc subset is perfect to support VS IntelliSense, but unfortunately no other tool understands it which could further process these comments to generate a nicer output. Any plans to fix this?\r\n\r\nThanks,\r\n- György\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-25T13:26:05.203-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Documentation generation for TypeScript projects",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 3,
    "Id": 2467
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Take a look at dgeni, it's the next iteration of the doc util that angular has used.  It should be possible to create an extractor that uses the TS compiler or language services.  I have not tried this yet myself.\n\nhttps://github.com/angular/dgeni\nhttps://github.com/angular/dgeni-packages",
      "PostedDate": "2014-04-26T08:44:20.057-07:00",
      "Id": 143568
    },
    {
      "Message": "Thanks for the tip, David, I will check that project. I bet it would be possible to adapt it to the TypeScript language, however it seems to be an enormous work. I believe I'm not the only one facing this issue and some direct support from the TS team would be nice. \n\nThanks again.\n\n- György",
      "PostedDate": "2014-04-27T23:35:54.91-07:00",
      "Id": 144927
    },
    {
      "Message": "I'm working on a documentation generator based on the typescript compiler.  (But I don't know when or if I'll be able to share it.)",
      "PostedDate": "2014-04-28T18:33:25.24-07:00",
      "Id": 145011
    },
    {
      "Message": "Great to hear that, Adam! Although I don't know the internals of the TS compiler, let me know if I can help!\n- György",
      "PostedDate": "2014-04-28T23:55:40.857-07:00",
      "Id": 145045
    },
    {
      "Message": "I have been experimenting with TypeScript for a few days now. I started porting an JavaScript library that we wrote for one of our projects to Typescript hoping to take advantage of its great features like classes and modularity (which are more complex and verbose to write in plain JavaScript).\n\nHowever, as I was progressing on my work I wanted to generate the JSDoc documentation files for the users of my API and then I discovered there is no simple way to do this. By one hand the JSDoc tool does not work well with the Typescript syntax and even I process the generated JavaScript files with JSDoc, it is still very complicated to get the proper documentation generated. Even if managed to make this work, I hate having to repeat myself in the documentation by adding again type information. \n\nGiven the nature of TypeScript which was created precisely with the purpose of creating big API libraries and applications, and given the fact that types are just annotations in the code, I think that if there is something that TypeScript is missing today is a documentation generation tool.\n\nThere is no point in creating big API libraries that I will have to end up documenting manually.\n",
      "PostedDate": "2014-05-16T07:21:37.28-07:00",
      "Id": 146863
    },
    {
      "Message": "Check out this project, it's in active development, and works great!\nhttps://github.com/sebastian-lenz/typedoc/\n",
      "PostedDate": "2014-06-27T08:14:43.7-07:00",
      "Id": 150946
    }
  ]
}