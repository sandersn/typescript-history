[
  {
    "Id": "1009220",
    "ThreadId": "435117",
    "Html": "First of, I think that the languages services are a great idea and make it relatively easy to build some kind of IDE. Of course some documentation would be welcome (like what does the resident flag really do). I'm surprised how stable the API has been so far. Whenever I update my project with a new release, almost everything keeps on working.\r<br />\n<br />\nWhat I'm missing however is some kind or mirror/reflection/inspection API. Almost all of the language services are &quot;cursor/file&quot; based functions. Like code-completion or code-formatting. What I'm looking for is something different, just to give a few examples: \r<br />\n<br />\n1) give me all the defined classes in this project\r<br />\n2) For a given interface, give me all of its methods (even if defined in multiple files).\r<br />\n3) or for this module, what external modules are imported.\r<br />\n4) and so on\r<br />\n<br />\nI guess with the AST API available I could make some smart iterators that do what I want, but I was hoping a slightly higher level API. Does such a thing exist (perhaps somewhere hidden in the current API) or is it on the agenda?\r<br />\n<br />\nSome use cases:\r<br />\n<br />\n1) Create a visual dependency tracker between modules\r<br />\n2) Generated some UML class diagrams\r<br />\n3) Some more advanced refactoring than just rename<br />\n",
    "PostedDate": "2013-03-02T05:56:56.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1009608",
    "ThreadId": "435117",
    "Html": "I voted for <a href=\"http://typescript.codeplex.com/workitem/116\" rel=\"nofollow\">http://typescript.codeplex.com/workitem/116</a> for macros. I think macros would be a great way to solve reflection. I know it's not quite the same thing as what you're asking, but it would be a huge step forward.<br />\n",
    "PostedDate": "2013-03-03T16:39:44.44-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1009919",
    "ThreadId": "435117",
    "Html": "\r\n<div>Just to make sure, what I was asking for is a reflection API on compile time, not runtime. I guess that macros would also be resolved at compile time and translated into plain JS and thus would be complementary to the reflection API.\r\n<br>\r\n<br>\r\nIMHO I think (too many) macros can make the code less understandable to new team members. Another way to extends the language is to use some type of annotations/decoration. Not as powerful, but much easier to understand and implement. There even is already\r\n a nice pull request for this: <a href=\"http://typescript.codeplex.com/SourceControl/network/forks/rbuckton/Decorators/contribution/3840\">\r\nhttp://typescript.codeplex.com/SourceControl/network/forks/rbuckton/Decorators/contribution/3840</a><br>\r\n<br>\r\n<br>\r\nOn 03/04/2013 01:39 AM, cretz wrote:<br>\r\n</div>\r\n<blockquote type=\"cite\">\r\n<p>From: cretz</p>\r\n<div id=\"ThreadNotificationPostBody\">I voted for <a href=\"http://typescript.codeplex.com/workitem/116\" rel=\"nofollow\">\r\nhttp://typescript.codeplex.com/workitem/116</a> for macros. I think macros would be a great way to solve reflection. I know it's not quite the same thing as what you're asking, but it would be a huge step forward.<br>\r\n</div>\r\n</blockquote>\r\n<br>\r\n",
    "PostedDate": "2013-03-04T05:42:35.893-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]