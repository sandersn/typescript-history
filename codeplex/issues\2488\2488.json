{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces",
    "ClosedDate": "2014-07-21T12:09:06.42-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "The attached file crashes tsc on linux. It contains an error (an illegal module name), but something about the comment on Const.constructor causes tsc to dump a stack trace:\r\n\r\n```\r\nError: Argument out of range: position\r\n    at Function.Errors.argumentOutOfRange (/usr/lib/node_modules/typescript/bin/tsc.js:1168:20)\r\n    at LineMap.getLineNumberFromPosition (/usr/lib/node_modules/typescript/bin/tsc.js:1847:41)\r\n    at Diagnostic.Location.line (/usr/lib/node_modules/typescript/bin/tsc.js:1003:50)\r\n    at Function.TypeScriptCompiler.getLocationText (/usr/lib/node_modules/typescript/bin/tsc.js:55863:58)\r\n    at Function.TypeScriptCompiler.getFullDiagnosticText (/usr/lib/node_modules/typescript/bin/tsc.js:55869:32)\r\n    at BatchCompiler.addDiagnostic (/usr/lib/node_modules/typescript/bin/tsc.js:62741:68)\r\n    at /usr/lib/node_modules/typescript/bin/tsc.js:62279:34\r\n    at Array.forEach (native)\r\n    at BatchCompiler.compile (/usr/lib/node_modules/typescript/bin/tsc.js:62278:36)\r\n    at BatchCompiler.batchCompile (/usr/lib/node_modules/typescript/bin/tsc.js:62114:22)\r\n    at TypeScript (/usr/lib/node_modules/typescript/bin/tsc.js:62788:11)\r\n    at Object.<anonymous> (/usr/lib/node_modules/typescript/bin/tsc.js:62789:3)\r\n    at Module._compile (module.js:456:26)\r\n    at Object.Module._extensions..js (module.js:474:10)\r\n    at Module.load (module.js:356:32)\r\n    at Function.Module._load (module.js:312:12)\r\n    at Module.require (module.js:364:17)\r\n    at require (module.js:380:17)\r\n    at Object.<anonymous> (/usr/lib/node_modules/typescript/bin/tsc:2:1)\r\n    at Module._compile (module.js:456:26)\r\n    at Object.Module._extensions..js (module.js:474:10)\r\n    at Module.load (module.js:356:32)\r\n    at Function.Module._load (module.js:312:12)\r\n    at Function.Module.runMain (module.js:497:10)\r\n    at startup (node.js:119:16)\r\n    at node.js:902:3\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-04T17:17:25.127-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Argument out of range: position",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2488
  },
  "FileAttachments": [
    {
      "FileId": 835256,
      "FileName": "test.ts",
      "DownloadUrl": ".\\835256"
    }
  ],
  "Comments": [
    {
      "Message": "tsc --version is 1.0.0.0",
      "PostedDate": "2014-05-04T17:18:45.887-07:00",
      "Id": 145542
    },
    {
      "Message": "Thanks for the report.\r\n\r\nAs an aside, if you need a workaround (I'm not sure why we disallow 'string' as a module name...), you can do this:\r\n\r\n```\r\ndeclare module goog {\r\n    module _string {\r\n        export interface Thing { }\r\n        export class Foo { }\r\n    }\r\n\r\n    export import string = _string;\r\n}\r\n\r\nvar t: goog.string.Thing;\r\nvar x = new goog.string.Foo();\r\n```",
      "PostedDate": "2014-05-05T10:09:06.76-07:00",
      "Id": 145603
    },
    {
      "Message": "Thanks for the workaround! I made a separate issue for the module naming issue, which unlike this is not a straight bug: https://typescript.codeplex.com/workitem/2490",
      "PostedDate": "2014-05-05T10:52:45.097-07:00",
      "Id": 145610
    }
  ]
}