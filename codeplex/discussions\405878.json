[
  {
    "Id": "952495",
    "ThreadId": "405878",
    "Html": "\r\n<p>Hi All,</p>\r\n<p>Just curious who here is using TypeScript to build an important app right now?</p>\r\n<p>I converted one of our new apps over to TypeScript. &nbsp;It's a single page app that was written using backbone.js. &nbsp;So far I'm happy with the move but there are debugging issues that are really making me cringe at the moment (e.g. after refreshing\r\n a page in IE the breakpoints no longer hit in .ts files).</p>\r\n<p>Is anybody here using this for critical apps? What are your thoughts so far? Is it making you more productive/better able to write better apps faster?</p>\r\n<p>Cheers,<br>\r\nJon</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-12-06T12:41:10.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "953203",
    "ThreadId": "405878",
    "Html": "\r\n<p>Jon, our site <a href=\"http://so.cl\">so.cl</a> was completely re-written in TypeScript (30,000&#43; lines of TypeScript.) &nbsp;We're still debugging against the generated JavaScript files so I haven't had too much of a chance to work with the new debugging\r\n support but looking forward to it now that we've shipped :) &nbsp;I can tell you that while the tooling may still have a few kinks the compiler generates valid JavaScript so in our opinion it's better then working in JavaScript directly. &nbsp;I can pretty\r\n much&nbsp;guarantee you that for any project of significant size, TypeScript WILL catch bugs in your code.&nbsp;&nbsp;</p>\r\n",
    "PostedDate": "2012-12-07T18:24:26.957-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "953887",
    "ThreadId": "405878",
    "Html": "\r\n<p>About 3000 lines or so to date. Most of the code is in the XML -&gt; model parsing. Sadly. Typescript catches lots of errors regularly - specially those spesky parseInt()s :)&nbsp;</p>\r\n",
    "PostedDate": "2012-12-10T05:04:17.963-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "953941",
    "ThreadId": "405878",
    "Html": "\r\n<p>Awesome feedback! &nbsp;You both have done some significant .ts work!&nbsp;</p>\r\n<p>Makes me feel better that there are others vested in it with important projects!</p>\r\n<p>I know the team working on this are superstars, I'm just anxious for&nbsp;the&nbsp;last&nbsp;pieces&nbsp;of tooling to come together to make a great productive dev workflow!</p>\r\n<p>Jon</p>\r\n",
    "PostedDate": "2012-12-10T06:25:19.083-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954183",
    "ThreadId": "405878",
    "Html": "\r\n<p>I'm rewriting the Alanta client from Silverlight to TypeScript. I'm about 3000 lines into it so far (the Silverlight version is about 30,000), and have found a number of bugs in the TypeScript implementation, and probably even more in the spec (IMO), but\r\n I'm still dramatically more productive with TypeScript than JavaScript. It has some features that would be nice in C# (such as duck typing), but on the whole it's not quite up to C#: I'm missing generics especially, though I know they're coming. But I don't\r\n regret my decision to jump into TypeScript in the slightest: for all of its rough edges, it's still much better than JavaScript.</p>\r\n",
    "PostedDate": "2012-12-10T13:54:56.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954391",
    "ThreadId": "405878",
    "Html": "\r\n<p>Jon,</p>\r\n<p>The team I'm on uses TypeScript for a critical&nbsp;proprietary app. It has made development way faster and far more robust; especially when time comes to refactor. The compiler really helps catch a lot of those little slip ups that happen when we get tired.\r\n It also allows for people coming from other languages to bring more language agnostic skills to the table. TypeScript is also easier for people to transition to if they have had prior experience with ActionScript 3, Java, or other more traditional OO-paradigm\r\n languages.</p>\r\n<p>To support the TypeScript, we use Jasmine for our tests. For the CI we use Jenkins with Gradle for build automation. We also run the Jasmine tests through PhantomJS. If you are interested, I created a TypeScript CI starter project on GitHub based on what\r\n we use. You can find it here:&nbsp;<a href=\"https://github.com/jmvrbanac/TypeScript-CI-Starter\">https://github.com/jmvrbanac/TypeScript-CI-Starter&nbsp;</a></p>\r\n<p>The project is not complete or ideal, but it is functioning for us right now. When I have a chance, I'll go back and add code coverage and such.</p>\r\n<p>Most of our people work on Mac or Linux, so I haven't had a chance to test Gradle running PhantomJS running through Windows yet. If it causes you any problems, just let me know; or even better, fork and send a pull request.&nbsp;</p>\r\n",
    "PostedDate": "2012-12-11T00:56:41.57-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954554",
    "ThreadId": "405878",
    "Html": "\r\n<p>Wow you guys are all slaying it with TypeScript! &nbsp;I'm also surprised with how much traction it is getting outside of the MS world.</p>\r\n<p>For example quite a few Typescript support requests for JetBrains (makers of resharper) seem to be from people outside of the VS world.</p>\r\n<p>A common thread here seems that nobody (or very few of you) are debugging the raw .ts via Visual Studio unless I'm wrong with that.</p>\r\n<p>That's the workflow I'm going to switch to until the .ts debugging gets better. &nbsp;</p>\r\n<ul>\r\n<li>Code .ts files in Visual Studio for the intellisense </li><li>If VS starts to freeze while coding .ts (which happens in some scenarios) use sublime text to edit the offending file and get it to build (using the syntax highlighting and build system for sublime text)\r\n</li><li>Debug raw .js with Visual Studio's .js debugger </li></ul>\r\n<p>At least I will never be stuck with that setup!</p>\r\n<p>Cheers to all and keep slaying it!</p>\r\n<p>Jon</p>\r\n",
    "PostedDate": "2012-12-11T06:33:40.797-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954575",
    "ThreadId": "405878",
    "Html": "\r\n<p>Surprisingly the debugging support for ts in Visual Studio is very good, more&nbsp;friction-less&nbsp;than debugging ts files in Chrome.</p>\r\n<p>There is only one annoying thing: that refreshing the browser will ruin your debug session. (IE)</p>\r\n",
    "PostedDate": "2012-12-11T06:56:07.213-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954629",
    "ThreadId": "405878",
    "Html": "\r\n<p>Yeah, debugging in TS is still pretty buggy, though very helpful when it works. I run similar problems woth with Visual Studio and with Chrome, with breakpoints not getting hit, that sort of thing. My suspicion is that there's a bug in the source map file\r\n generation. I've finally turned off SourceMap debugging in Chrome, so that I can have a reliable debug experience\r\n<em>somewhere</em>, though I usually do my first pass at debugging in Visual Studio with the actual TS files.</p>\r\n",
    "PostedDate": "2012-12-11T07:50:16.737-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954644",
    "ThreadId": "405878",
    "Html": "\r\n<p>Personally, I am a big Sublime Text fan for web development. My preference is mostly due to the speed and customization of the editor. However, in the case of TypeScript I end up debugging in Chrome anyhow if I want to easily debug my Jasmine unit tests.\r\n Perhaps I'm just not doing something right, but that TS &lt;--&gt; JS switch doesn't seem very seamless when I debug the TypeScript through VS right now.&nbsp;If VS had more of a seamless solution for switching between my JS unit tests and TS then I would probably change\r\n my opinion. However, for now I've ended up just using a build-on-save plugin with a TS build system in Sublime Text (debugging in Chrome).</p>\r\n<p>All of that said, the rest of the team generally just use VS (Through Parallels or VirtualBox on Mac and Linux).</p>\r\n",
    "PostedDate": "2012-12-11T08:20:36.317-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954756",
    "ThreadId": "405878",
    "Html": "\r\n<p>If you don't have VS for editing, or if you prefer some other editor, you may be able to add support for type hints, jump to definition, and completion to your editor.</p>\r\n<p>There is a commandline server interface (commands in, json info out) to the TypeScript language services here:&nbsp;https://github.com/clausreinke/typescript-tools</p>\r\n<p>It comes with a basic Vim plugin, offering the services above on top of the syntax highlighting provided by the TypeScript project. Someone was working on an Emacs plugin (http://typescript.codeplex.com/discussions/405174), and if your editor is programmable/extensible\r\n and can communicate with an asynchronous subprocess, you might be able to write a TS plugin for your favourite editor. It is still work in progress, but I would like to stabilize the basic protocol soon, so it would be good to know if the present form serves\r\n the needs of other editor plugin writers.</p>\r\n",
    "PostedDate": "2012-12-11T12:10:20.337-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954781",
    "ThreadId": "405878",
    "Html": "\r\n<p>If the key *value proposition* of TypeScript is to make developers more productive (that's what Anders said his focus was on Hanselminutes)...</p>\r\n<p>I think the TypeScript team is best to focus on getting this workflow stuff figured out before any other features (e.g. generics).</p>\r\n<p>It seems that there is a lot variation here on how we are all trying to get our work done. &nbsp;It's great that there is choice (different&nbsp;editors, etc), but there should be at least one setup that&nbsp;seamlessly&nbsp;works for coding and debugging\r\n TypeScript. &nbsp;</p>\r\n<p>Nailing this story down first is the most important to me.</p>\r\n<p><strong>EDIT: </strong>Just want to add, that the above is a prioritization thought by me. &nbsp;I understand that we are using Alpha software... Typescript promises to be one of the best productivity enhancements for us very soon, and I really appreciate\r\n the efforts of the great team working on this!</p>\r\n",
    "PostedDate": "2012-12-11T13:27:16.557-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]