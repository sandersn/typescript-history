[
  {
    "Id": "1058993",
    "ThreadId": "447637",
    "Html": "For a JavaScript library that will use a module loader like AMD or RequireJS when available or will fall back to assigning the module to the global namespace, is there a similar solution for typescript declarations?\r<br />\n<br />\nFor example, the Q promise library does this. A declaration could look like:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">function</span> Q(value: <span style=\"color:Blue;\">any</span>): Qpromise;\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">module</span> Q {\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">function</span> when(value: <span style=\"color:Blue;\">any</span>, onFulfilled: Function, onRejected?: Function): Qpromise;\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">function</span> fbind(method: Function, ...args: <span style=\"color:Blue;\">any</span>[]): Qpromise;\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">function</span> fcall(method: Function, ...args: <span style=\"color:Blue;\">any</span>[]): Qpromise;\n\n<span style=\"color:Green;\">// etc. etc.</span>\n}\n\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">module</span> <span style=\"color:#A31515;\">&quot;q&quot;</span> {\n    <span style=\"color:Blue;\">export</span> = Q;\n}\r\n</pre></div>Obviously in this circumstance, a node app, for example, could attempt to use Q directly. This will cause a run time error, but it would be great if this could be caught at compile time.<br />\n",
    "PostedDate": "2013-06-19T23:26:06.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]