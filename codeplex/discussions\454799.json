[
  {
    "Id": "1085934",
    "ThreadId": "454799",
    "Html": "I want to define a function that iterates over array like objects i.e. object that have a number index and a length property.<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> L&lt;T&gt; {\n    [index: <span style=\"color:Blue;\">number</span>]: T;\n    length: <span style=\"color:Blue;\">number</span>;\n}\n\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">function</span> f&lt;T&gt;(l: L&lt;T&gt;): T[];\r\n</pre></div>My problem is that I can't get it to work properly with JQuery objects (<code>J</code>'s definition below is based on how the <code>JQuery</code> interface is defined in the JQuery type file):<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> J {\n    length: <span style=\"color:Blue;\">number</span>;\n    [x: <span style=\"color:Blue;\">string</span>]: <span style=\"color:Blue;\">any</span>;\n    [x: <span style=\"color:Blue;\">number</span>]: HTMLElement;\n}\n\n<span style=\"color:Blue;\">var</span> a = [1,2,3];\n<span style=\"color:Blue;\">var</span> j: J;\n\n<span style=\"color:Blue;\">var</span> j1 = j[0];\n<span style=\"color:Blue;\">var</span> j2 = j[<span style=\"color:#A31515;\">&#39;a&#39;</span>];\n\n<span style=\"color:Blue;\">var</span> t1 = f(a);\n<span style=\"color:Blue;\">var</span> t2 = f(j);\r\n</pre></div>In the resulting declaration file <code>j1</code> is inferred as <code>HTMLElement</code> as expected but <code>t2</code> is inferred as <code>any[]</code> while I expected it to be <code>HTMLElement[]</code>:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> L&lt;T&gt; {\n    [index: <span style=\"color:Blue;\">number</span>]: T;\n    length: <span style=\"color:Blue;\">number</span>;\n}\n<span style=\"color:Blue;\">interface</span> J {\n    length: <span style=\"color:Blue;\">number</span>;\n    [x: <span style=\"color:Blue;\">string</span>]: <span style=\"color:Blue;\">any</span>;\n    [x: <span style=\"color:Blue;\">number</span>]: HTMLElement;\n}\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> a: <span style=\"color:Blue;\">number</span>[];\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> j: J;\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> j1: HTMLElement;\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> j2;\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> t1: <span style=\"color:Blue;\">number</span>[];\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">var</span> t2: <span style=\"color:Blue;\">any</span>[];\n\r\n</pre></div>if I remove the line <code>[x: string]: any;</code> from the definition of <code>J</code> then <code>t2</code> is inferred as <code>HTMLElement[]</code> as expected. Why does <code>[x: string]: any</code> prevent correct inference of <code>t2</code>?<br />\n",
    "PostedDate": "2013-08-28T13:43:49.117-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]