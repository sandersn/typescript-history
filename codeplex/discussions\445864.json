[
  {
    "Id": "1052309",
    "ThreadId": "445864",
    "Html": "It seems like this code should compile (under 0.9 beta):<br />\n<pre><code>class LazyArray&lt;T&gt; {\n    private objects = &lt;{ [objectId: string]: T; }&gt;{};\n\n    array() {\n        return this.objects;\n    }\n}\n\nvar lazyArray = new LazyArray&lt;string&gt;();\nvar value: string = lazyArray.array()[&quot;test&quot;];\n</code></pre>\n\nBut tsc returns &quot;Cannot convert 'T' to 'string'&quot;. <br />\n<br />\nIs that right?<br />\n",
    "PostedDate": "2013-06-03T12:10:36.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052424",
    "ThreadId": "445864",
    "Html": "This discussion has been copied to a work item. Click <a href=\"https://typescript.codeplex.com/workitem/1103\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2013-06-03T18:46:36.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052427",
    "ThreadId": "445864",
    "Html": "Something is funky here. I've created a work item for you (<a href=\"https://typescript.codeplex.com/workitem/1103\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/1103</a>). If you remove the type annotation on value then it's typed as T, but it shouldn't be showing unspecialized generic parameters at that point.<br />\n",
    "PostedDate": "2013-06-03T18:48:10.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052686",
    "ThreadId": "445864",
    "Html": "Exactly. Instead of <code>value</code> being typed as <code>T</code>, it should be typed as <code>string</code>, right?<br />\n",
    "PostedDate": "2013-06-04T08:50:33.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1052757",
    "ThreadId": "445864",
    "Html": "Yeah, you've got it, this should be working as you expect.<br />\n",
    "PostedDate": "2013-06-04T12:04:29.177-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]