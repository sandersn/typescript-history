Running "ts-internal:build" (ts-internal) task
Compiling...
"tasks/ts.ts" --sourcemap --target ES5 --module commonjs --out tasks/ts.js
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(242,16): error TS2012: Cannot convert 'Q.Promise<() => any>' to 'Q.Promise<ICompileResult>':
	Type '() => any' is missing property 'code' from type 'ICompileResult'.
	Types of property 'fin' of types 'Q.Promise<() => any>' and 'Q.Promise<ICompileResult>' are incompatible:
		Call signatures of types '(finallyCallback: () => any) => Q.Promise<() => any>' and '(finallyCallback: () => any) => Q.Promise<ICompileResult>' are incompatible:
			Type '() => any' is missing property 'code' from type 'ICompileResult'.
			Types of property 'then' of types 'Q.Promise<() => any>' and 'Q.Promise<ICompileResult>' are incompatible:
				Call signatures of types '{ <U>(onFulfill: (value: () => any) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: () => any) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: () => any) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: () => any) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: ICompileResult) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: ICompileResult) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: ICompileResult) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: ICompileResult) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
					Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
									Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
					Call signatures of types '(value: () => any) => Q.IPromise<U>' and '(value: ICompileResult) => Q.IPromise<U>' are incompatible:
						Type '() => any' is missing property 'code' from type 'ICompileResult'.
						Type '() => any' requires a call signature, but type 'ICompileResult' lacks one.
					Call signatures of types '(value: ICompileResult) => Q.IPromise<U>' and '(value: () => any) => Q.IPromise<U>' are incompatible:
						Type '() => any' requires a call signature, but type 'ICompileResult' lacks one.
						Type '() => any' is missing property 'code' from type 'ICompileResult'.
					Types of property 'fin' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<Q.IPromise<U>>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'then' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '{ <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
									Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
											Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
												Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
													Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
									Call signatures of types '(value: Q.IPromise<U>) => Q.IPromise<U>' and '(value: U) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Call signatures of types '(value: U) => Q.IPromise<U>' and '(value: Q.IPromise<U>) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
					Types of property 'fin' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<Q.IPromise<U>>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'then' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '{ <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
									Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
											Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
												Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
													Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
									Call signatures of types '(value: Q.IPromise<U>) => Q.IPromise<U>' and '(value: U) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Call signatures of types '(value: U) => Q.IPromise<U>' and '(value: Q.IPromise<U>) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(768,11): error TS2081: Supplied parameters do not match any signature of call target.
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(768,11): error TS2087: Could not select overload for 'call' expression.
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(906,32): error TS2012: Cannot convert 'Q.Promise<void>' to 'Q.Promise<boolean>':
	Types of property 'fin' of types 'Q.Promise<void>' and 'Q.Promise<boolean>' are incompatible:
		Call signatures of types '(finallyCallback: () => any) => Q.Promise<void>' and '(finallyCallback: () => any) => Q.Promise<boolean>' are incompatible:
			Types of property 'then' of types 'Q.Promise<void>' and 'Q.Promise<boolean>' are incompatible:
				Call signatures of types '{ <U>(onFulfill: (value: void) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: void) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: void) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: void) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: boolean) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: boolean) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: boolean) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: boolean) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
					Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
									Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
					Call signatures of types '(value: void) => Q.IPromise<U>' and '(value: boolean) => Q.IPromise<U>' are incompatible.
					Call signatures of types '(value: boolean) => Q.IPromise<U>' and '(value: void) => Q.IPromise<U>' are incompatible.
					Types of property 'fin' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<Q.IPromise<U>>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'then' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '{ <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
									Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
											Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
												Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
													Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
									Call signatures of types '(value: Q.IPromise<U>) => Q.IPromise<U>' and '(value: U) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Call signatures of types '(value: U) => Q.IPromise<U>' and '(value: Q.IPromise<U>) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
					Types of property 'fin' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
						Call signatures of types '(finallyCallback: () => any) => Q.Promise<Q.IPromise<U>>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
							Types of property 'then' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
								Call signatures of types '{ <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: Q.IPromise<U>) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' and '{ <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => Q.IPromise<U>, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => Q.IPromise<U>, onProgress?: Function): Q.Promise<U>; <U>(onFulfill: (value: U) => U, onReject?: (reason: any) => U, onProgress?: Function): Q.Promise<U>; }' are incompatible:
									Types of property 'fin' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(finallyCallback: () => any) => Q.Promise<{}>' and '(finallyCallback: () => any) => Q.Promise<U>' are incompatible:
											Types of property 'inspect' of types 'Q.Promise<{}>' and 'Q.Promise<U>' are incompatible:
												Call signatures of types '() => Q.PromiseState<{}>' and '() => Q.PromiseState<U>' are incompatible:
													Types of property 'value' of types 'Q.PromiseState<{}>' and 'Q.PromiseState<U>' are incompatible.
									Call signatures of types '(value: Q.IPromise<U>) => Q.IPromise<U>' and '(value: U) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Call signatures of types '(value: U) => Q.IPromise<U>' and '(value: Q.IPromise<U>) => Q.IPromise<U>' are incompatible:
										Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
									Types of property 'done' of types 'Q.Promise<Q.IPromise<U>>' and 'Q.Promise<U>' are incompatible:
										Call signatures of types '(onFulfilled?: (value: Q.IPromise<U>) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' and '(onFulfilled?: (value: U) => any, onRejected?: (reason: any) => any, onProgress?: (progress: any) => any) => void' are incompatible:
											Call signatures of types '(value: Q.IPromise<U>) => any' and '(value: U) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
											Call signatures of types '(value: U) => any' and '(value: Q.IPromise<U>) => any' are incompatible:
												Type 'U' is missing property 'then' from type 'Q.IPromise<U>'.
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(971,26): error TS2084: Call signatures used in a 'new' expression must have a 'void' return type.
D:/_Editing/github/grunt/grunt-ts/tasks/ts.ts(985,17): error TS2088: Cannot invoke an expression whose type lacks a call signature.
>> Compilation failed
Warning: Task "ts-internal:build" failed. Use --force to continue.

Aborted due to warnings.

Process finished with exit code 3
