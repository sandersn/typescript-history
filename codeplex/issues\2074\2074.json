{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:29.02-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "If I create instance properties that reference each other, the resulting code only works as expected if they are ordered so that the dependent property is defined below the independent property. For example, the code in the following example doesn't work the way it might be read:\r\n\r\n```\r\nclass Class {\r\n\tdependent = this.independent; //Actually set to undefined\r\n\tindependent = 1234;\r\n}\r\n```\r\n\r\nIn this example, `dependent` is set to `undefined`.\r\n\r\nIf I change the properties to be static, I am instead given a compiler error, which is good, because it prevents me from introducing a subtle bug like in the above code. However, if I change the dependent static property to reference the class name instead of `this`, the same problem is produced:\r\n\r\n```\r\nclass Class {\r\n\tstatic dependent = Class.independent; //Actually set to undefined\r\n\tstatic independent = 1234;\r\n}\r\n```\r\n\r\nI think it would be useful if this could be addressed in some way. Some possibilities are:\r\n1. Produce a compiler error\r\n1. Adjust the generated JS code so that the code works as expected",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-01-06T16:33:41.1-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Improve handling of dependent properties",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 2074
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "There are a number of areas where ordering is important at runtime that we don't attempt to detect.  e.g. the below will compile without issue but fail at runtime also.\n\n```typescript\nvar x = new A();\nclass A { }\n```\n\nWe have no plans to detect and error/warn on these for v1 currently.  Assigning to Jonathan as a suggestion for a future release.",
      "PostedDate": "2014-01-07T17:26:38.73-08:00",
      "Id": 129734
    }
  ]
}