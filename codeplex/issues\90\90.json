{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:26.8-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "Create a Metadata Annotation system that allow us at compile time to modify the generated js .\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-04T04:16:24.85-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Metadata - Annotation System ",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 14,
    "Id": 90
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I'm curious what types of things fall under this.  Do you have specific scenarios/examples you would like to control?\n\n",
      "PostedDate": "2012-10-04T08:00:04.063-07:00",
      "Id": 78549
    },
    {
      "Message": "that kind of feature could allow us to do incredible things, for example we could implement some equivalent of Flex data binding ; for example :\n\n@bindable\npublic name:String;\n\nwould generate a getter and a setter with a change notification mechanism.\n\nWe could also use such a system to create dependency injection framework that parse our class at compile time to generate some factory, etc etc.",
      "PostedDate": "2012-10-04T10:40:10.47-07:00",
      "Id": 78577
    },
    {
      "Message": "i was about to post a similar request,  i'd call it \"meta programming via a precompiler step\"\n\nultimately, i would like to add runtime-reflection information,   however this could be added myself, if there was a precompiler stage that allowed me to perform meta programming:\n\nI'd suggest some support for attribute-like meta programming.  my appologizes that I am new to TS/javascript so please don't get stuck on my style ;)\n\n```\n\n\t[Reflection] //decorate types with an attribute that gets parsed as a precompile step\n\tclass MyClass{\n\n\t}\n\n\n\tclass Reflection implements ts.IAttribute{ \n\t\tconstructor(metaType) {\n\t\t\t\n\t\t\tmetaType.target.typeName :string = type.name; //emits MyClass.typeName\n\t\t\tmetaType.target.type: ts.Type = type; //emits MyClass.type\n\t\t\tmetaType.target.something : any = \"anything\" //emits MyClass.something\n\t\t}\n\t}\n\n\n\t//\n\tvar myClass = new MyClass();\n\n\tmyClass.something = \"something else\" //valid typescript with intelisence in VS!\n```",
      "PostedDate": "2013-02-12T18:11:28.397-08:00",
      "Id": 89145
    },
    {
      "Message": "Attributes are a great idea!  I find myself wanting this at times also.  Perhaps these \"attributes\" can simply compile into static object information on the type (function).",
      "PostedDate": "2014-04-07T19:29:12.28-07:00",
      "Id": 140909
    },
    {
      "Message": "Annotations add another dimension, which can help to extend the language in non-trivial ways. E.g. I tried to port Circuit library from dart - no such luck, mostly because of the lack of annotations.\nPlease see https://github.com/tatumizer/circuit-dart for details.\n\n\n",
      "PostedDate": "2014-04-07T19:49:55.46-07:00",
      "Id": 140912
    }
  ]
}