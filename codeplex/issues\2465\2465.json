{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-04-25T11:12:31.44-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "\r\nI can;t put this at the top of the file:\r\n```\r\n#!/usr/bin/env node\r\n```\r\n\r\ncompiler says \"error TS1001: Unexpected character \"#\".\"\r\n\r\nso obviously the env definition does not survive to the compiled JS and I can't create executable node scripts using TypeScript.\r\n",
    "LastUpdatedDate": "2014-08-14T14:33:05.433-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-25T10:16:41.057-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Can't create bash executables due to shebang rejection",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2465
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Not sure what you're expecting to happen here. That line isn't valid JavaScript either.",
      "PostedDate": "2014-04-25T11:12:23.64-07:00",
      "Id": 143087
    },
    {
      "Message": "@danquirk it isn't valid javascript but it works fine in nodejs.",
      "PostedDate": "2014-04-25T14:36:32.793-07:00",
      "Id": 143121
    },
    {
      "Message": "you shouldn't close this ... its a fairly well respected method for denoting what language you are programming in (in OSX or Linux), so that the shell can guess what interpreter is needed to *run* the file without explicit instructions.\n\nso instead of \"node myexecutable.js\" you just run \"myexecutable.js\"\nor instead of \"python mypython.py\" you just run \"mypython.py\" with \"#!/usr/bin/env python\"\n\nor, as per google's suggestions, you can drop the file extension entirely so users are not even aware they are running a script (vs.  a binary executable) because it really doesn't matter semantically from the command line.\n\nhttp://en.wikipedia.org/wiki/Shebang_(Unix)",
      "PostedDate": "2014-04-25T16:02:15.563-07:00",
      "Id": 143131
    },
    {
      "Message": "I too find this rather frustrating. I had a collection of js files which where directly executable using ./<file>.js. I decided to transition those files to typescript because of the code robustness types add. What is now missing in the generated js files is \"#!/usr/bin/env node' as the first line which enabled OSX to select node as the interpreter of the scripts.\nThat \"Not sure what you're expecting to happen here\" tells me that the concept does not even seem to be known although above wikipedia link explains it rather well...",
      "PostedDate": "2014-06-09T02:26:16.393-07:00",
      "Id": 149193
    },
    {
      "Message": "Please re-open as per above comments.\n\nShebangs are perfectly legitimate at the top of shell scripts written in JavaScript, and it's a pain to have to prepend them post-compilation if the shell script has been compiled from TypeScript.\n\nIf TypeScript is to be more widely adopted, `tsc` should facilitate TypeScript's use as a shell scripting language. Therefore, devs shouldn't have to write wrapper scripts for `tsc` to handle shebangs.\n\nThere are various possible solutions. For example, `tsc` could have a flag `--shebang` that would preserve an existing shebang (if present) in the TypeScript source through the compilation step, and which would add a shebang to the beginning of the JavaScript output if the TypeScript source file did not contain a shebang. Using that flag would, of course, also mean that `tsc` would not report shebangs as errors.",
      "PostedDate": "2014-08-14T14:31:45.657-07:00",
      "Id": 155513
    },
    {
      "Message": "See also this Stack Overflow Q&A: http://stackoverflow.com/q/23298295/82216",
      "PostedDate": "2014-08-14T14:33:05.433-07:00",
      "Id": 155514
    }
  ]
}