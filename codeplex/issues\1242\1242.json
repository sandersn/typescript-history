{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-06-27T16:47:02.257-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "I have interface declaration\r\n```\r\n  export interface IPromise<T> extends JQueryPromise {\r\n        done(...doneCallbacks: { (res: T): any; }[]): JQueryPromise;\r\n    }\r\n\r\n   export interface ILoadResult { fetchedItems: any[];  }\r\n        \r\n```\r\nin some class i have method declaration\r\n```\r\nload(query: any): IPromise<ILoadResult> {\r\n                    return <any>{};\r\n                }\r\n```\r\nnow when i try to use this method in a class instance\r\nlike\r\n```\r\n  var promise = someClassInstance.load(query);\r\n\r\n promise.done(function (res) {\r\n                        var fetchedItems = res.fetchedItems;\r\n  });\r\n```\r\nthe compiler gives error\r\nError\t1\tThe property 'fetchedItems' does not exist on value of type 'T'.\tC:/DATA/TEMP/TEST/jriappTS/jriappTS/user_modules/manToManDemo.ts\t323\t46\tjriappTS\r\n\r\nExpected that 'res' in done callback be resolved to ILoadResult \r\n",
    "LastUpdatedDate": "2013-06-27T16:47:02.257-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-26T01:18:40.253-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "compiler does not resolve generic parameter",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1242
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "even if i declare IPromise intereface\n\n```\nexport interface IPromise<T> extends JQueryPromise {\n        done<T>(...doneCallbacks: { (res: T): any; }[]): JQueryPromise;\n    }\n```\nthe compiler gives the same error",
      "PostedDate": "2013-06-26T01:22:09.433-07:00",
      "Id": 104176
    },
    {
      "Message": "when i cast 'res' parameter to 'any'\n\n```\npromise.done(function (res) {\n                        var fetchedItems = (<any>res).fetchedItems;\n  });\n```\n\nthe code is compiled, but without type safety - the compiler assumes\nthat 'res' parameter has T type, which does not exists anywhere in the code.",
      "PostedDate": "2013-06-26T02:10:32.1-07:00",
      "Id": 104180
    },
    {
      "Message": "Oops, i used 0.9 beta version.\nWhen i installed 0.9.0.0 version this code is compiled.\nSorry, please close this case.",
      "PostedDate": "2013-06-26T02:32:17.727-07:00",
      "Id": 104185
    }
  ]
}