{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:56.08-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I have this object initialization..\r\n\r\nvar foo = {    \"[[Value]]\": 10}\r\n\r\nI'd really rather do:\r\n\r\nvar foo: bar = {    \"[[Value]]\": 10}\r\n\r\nbut this doesn't seem legal:\r\n\r\ninterface bar { \r\n\r\n  \"[[Value]]\": Number;\r\n\r\n}\r\n\r\nApparently typescript doesn't believe that \"[[Value]]\" represents a valid identifier.  However, in this case javascript allows it as a property name.\r\n\r\nAny workarounds?",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-11-14T08:31:48.457-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "interfaces with literal property names",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 423
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I think this is one of the things you need to do to enable incremental typing addition via typescript.  You can't create new constraints like this.  In my case, it creates a gap in the typesafety as i'm forced to use these property names for compatibility with something else.  \n\nTo be clear, the fix isn't to change the lexical definition of Identifier but to add Literal as an allowable alternative in the same places its allowed in javascript.",
      "PostedDate": "2012-11-14T09:00:46.85-08:00",
      "Id": 82483
    },
    {
      "Message": "This is something we're tracking. I believe the solution will probably end up looking like the hypothetical interface you have.\n\nAssigning the issue to Luke for spec updates.",
      "PostedDate": "2012-11-14T09:24:27.89-08:00",
      "Id": 82487
    }
  ]
}