[
  {
    "Id": "1103960",
    "ThreadId": "461242",
    "Html": "First of all, I really like the direction TypeScript is going (despite a couple of rough edges in the VS plugin with 0.9.x ;)  ) and I'm looking forward to the 1.0 release.\r<br />\n<br />\n<br />\nI could not find anything about try catch blocks in the spec or on CodePlex but I think it might be interesting to talk about typed catch clauses like in C#, C++ or what not. The compiler (0.9.1.1) does currently not allow to add a type annotation to a catch clause (TS1013), so for example...<br />\n<pre><code>try {\n    // ...\n} catch(err: IException) {\n    // ...\n}</code></pre>\n\n... will not work.\r<br />\n<br />\nI'm aware of the fact that - in javascript - try blocks should ideally contain function calls only as try blocks are slow in todays JITs, but catch blocks can often get quite large, so it would be nice if one didn't have to cast the exception all the way down by hand.\r<br />\n<br />\nCurrently, the way to get a statically typed exception would be wrapping code into a function, but at the cost of yet another function call:<br />\n<pre><code>try {\n    // ...\n} catch (err) {\n    ((err: IException) =&gt; {\n        // ...\n    } (err));\n}</code></pre>\n\nIs this something that could be added to TS in the future?\r<br />\n<br />\nThanks!<br />\n",
    "PostedDate": "2013-10-05T07:01:10.763-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1104192",
    "ThreadId": "461242",
    "Html": "@FabianLauer, This is a <a href=\"https://typescript.codeplex.com/workitem/784\" rel=\"nofollow\">bug</a> and I believe it is fixed in the develop branch.<br />\n",
    "PostedDate": "2013-10-06T04:39:07.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1104237",
    "ThreadId": "461242",
    "Html": "@nabog, thanks, didn't  find that issue.<br />\n",
    "PostedDate": "2013-10-06T09:32:42.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]