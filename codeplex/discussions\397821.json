[
  {
    "Id": "921023",
    "ThreadId": "397821",
    "Html": "\r\n<p>typescript looks great and promising but I think it can be successful only if <span id=\"result_box\" lang=\"en\">\r\n<span>it manages to convey</span> <span>the feeling about intellisense in other ide's and editors...specially for editors because many javascript developers use editor over ide's...now...I think it's possible, we can code scala inside sublime editor and emacs\r\n with type check and real autocomplete, </span></span>http://www.youtube.com/watch?v=A2Lai8IjLoY ...</p>\r\n<p>&nbsp;</p>\r\n<p>f# has a very cool project for intellisense in command line and actually this can be adapted for provide real intellisense in any editor or ide&nbsp; (http://fsxplat.codeplex.com/wikipage?title=fsharp%20intellisense%20tool&amp;referringTitle=Home)</p>\r\n<p>&nbsp;</p>\r\n<p>Is possible than in a near future we've something similar to f# fsintellisense for typescript??...would be really amazing and a big plus for typescript&nbsp; ....</p>\r\n",
    "PostedDate": "2012-10-02T22:10:12.633-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922178",
    "ThreadId": "397821",
    "Html": "<p>TypeScript comes with the language service in addition to the compiler (with the source under src/services).&nbsp;We'll be working to&nbsp;improve these as we go.</p>\r\n<p>If&nbsp;there are specific features you'd like to add to the language service, let us know with a \"feature request\" in the issue tracker.&nbsp;</p>",
    "PostedDate": "2012-10-04T15:30:15.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922397",
    "ThreadId": "397821",
    "Html": "<p>What would be really be great if the TypeScript playground editor was open-sourced. It should be&nbsp;relatively&nbsp;easy to run that editor into something like node-webkit and add some basic file/directory operations.</p>\r\n<p>Than we would have an editor with intellisense capabilities written mainly in JavaScript (or even TypeScript, not sure if the playground editor itself was written in TypeScript).</p>",
    "PostedDate": "2012-10-05T05:33:23.207-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923149",
    "ThreadId": "397821",
    "Html": "<p>I just hacked together basic TypeScript support for SublimeLinter (thus only error-checking, but better than nothing).</p>\r\n<p>Emphasis on \"hacked\" - it is probably still buggy, but I wanted it out in the open so others can contribute. Here is the according <a href=\"https://github.com/SublimeLinter/SublimeLinter/pull/259\">SublimeLinter pull-request</a>.</p>\r\n<p>I welcome anybody to improve the code!</p>",
    "PostedDate": "2012-10-07T13:40:46.583-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "924277",
    "ThreadId": "397821",
    "Html": "<p>Hello,</p>\r\n<p>I've created a new CodeMirror mode for TypeScript.</p>\r\n<p>It's a pity that Microsoft does not want to release the playground editor but nothing stops us from building our own small editor:</p>\r\n<p><a href=\"https://github.com/ComFreek/TypeBox\">https://github.com/ComFreek/TypeBox</a></p>\r\n<p>Feel free to <strong>make pull requests, to fork the code or to tell any suggestions!</strong></p>",
    "PostedDate": "2012-10-09T13:45:11.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940237",
    "ThreadId": "397821",
    "Html": "<p>Hi,</p>\r\n<p>I wrote auto-complete source for&nbsp;emacs using the language service.</p>\r\n<p>https://github.com/zakki/auto-complete-ts</p>",
    "PostedDate": "2012-11-12T04:18:36.113-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942235",
    "ThreadId": "397821",
    "Html": "\r\n<p>@<a href=\"http://www.codeplex.com/site/users/view/k_matsuzaki\">k_matsuzaki</a>: thanks!</p>\r\n<p>That is very useful also for non-emacs efforts, because it pulls together most of the relevant pieces in one commandline tool (isense.ts). It is&nbsp;a commandline client for the language services and harness, outputting info in JSON format for editors to\r\n consume.</p>\r\n<p>Notes to typescript project:</p>\r\n<p>a) the particulars of output format might differ for different consumers (ides, editors), but for documentation purposes, it would be very helpful if a commandline service client like isense.ts would be included in the main typescript repo.</p>\r\n<p>b) there are some very odd things going on in typescript's standard harness.ts:</p>\r\n<p>1&nbsp;instead of relying on normal module system import, it tries to guess the path to typescriptServices.js and eval that source directly</p>\r\n<p>2&nbsp;it also tries to guess the path to lib.d.ts</p>\r\n<p>Both guesses go wrong if one tries to generate an all-in-one .js somewhere outside the typescript repo. The workarounds, included in auto-complete-ts's modified harness.ts&nbsp;seem to be simply to comment out the eval code and to inject the lib.d.ts path\r\n explicitly. Could these please be addressed in the original harness.ts source?</p>\r\n<p>c) OptionsParser hardcodes the command name (tsc), interfering with reuse for other commandline tools.</p>\r\n<p>Note for&nbsp;auto-complete-ts: parse should use a different pattern for result matching - at least allowing for double quotes &quot;result&quot; ;-)</p>\r\n",
    "PostedDate": "2012-11-15T11:41:19.737-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "946547",
    "ThreadId": "397821",
    "Html": "\r\n<p>@clausreinke:</p>\r\n<p>I fixed it, now parse json and get result.</p>\r\n<p>TypeScript.el: I need major-mode hook like&nbsp;https://github.com/zakki/auto-complete-ts/commit/ef2722480e9d62fa24411abde9f094e59d42b851#TypeScript.el</p>\r\n",
    "PostedDate": "2012-11-24T19:44:27.153-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "946576",
    "ThreadId": "397821",
    "Html": "\r\n<p>Readers of this thread will also find the thread <a href=\"http://typescript.codeplex.com/discussions/404060\">\r\nTypeScript Editor</a>&nbsp;interesting. There's a CodeMirror/node-webkit-based TS editor, and there's a commandline server for the TS language services, and there's a Vim plugin using the latter (all experimental/early stage;-).</p>\r\n<p>@<a href=\"http://www.codeplex.com/site/users/view/k_matsuzaki\">k_matsuzaki</a>: you might want to reuse some ideas from that thread for your emacs service:</p>\r\n<p>- using the real language service, and removing the test/shim-related code from harness</p>\r\n<p>- using dependency resolution from tsc</p>\r\n<p>- using a commandline server, to share slow project loading time over many fast queries</p>\r\n<p>I'm hoping that -once things get more stable- the TS server can be re-used for TS modes in other editors.</p>\r\n",
    "PostedDate": "2012-11-25T01:24:56.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]