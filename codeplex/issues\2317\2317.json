{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We have some existing proposals already tracking the general idea of supporting a require.js 'config' file for module resolution",
    "ClosedDate": "2014-03-17T08:09:04.62-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "If I have a definition file in TypeScript that defines an external module, I don't have a great way to import it using the TypeScript require function unless it happens to be in the same folder as the file I'm working on (or, oddly, a folder closer to the drive root than the .ts file, but not a subfolder in the project such as ~/Typings ) when using AMD.\r\n\r\n    import MyIdea = require(\"../Scripts/typings/MyIdea/MyIdea.d\");\r\n\r\nIn TypeScript 1.0 RC compiles to:\r\n\r\n    define([\"require\", \"exports\", \"../Scripts/typings/MyIdea/MyIdea.d\"], function(require, exports, MyIdea) { \r\n\r\nThe above code allows typings to work, but it also emits the path to the d.ts file into the JS.  It would be great to have require accept an optional second parameter to allow these concerns to be separate (finding the d.ts file versus what to reference in the emitted JS).\r\n\r\nIt would be nice if this TypeScript:\r\n\r\n    import MyIdea = require(\"../Scripts/typings/MyIdea/MyIdea.d\", \"MyIdea\");\r\n\r\nwould compile to this JavaScript:\r\n\r\n    define([\"require\", \"exports\", \"MyIdea\"], function(require, exports, MyIdea) { \r\n\r\nRequireJS supports a config property with a paths array that allows you to name libraries and then supply the relative or absolute path to those libraries.\r\n\r\nFor example:\r\n\r\n    requirejs.config({\r\n        paths: {\r\n            \"text\": \"../lib/text\",\r\n            \"durandal\": \"../lib/Durandal/js\",\r\n            \"MyIdea\": \"../lib/MyIdea.min\"\r\n         }\r\n    });\r\n\r\nIt would also be helpful if something like the above were available, or possibly could be passed-in via the command-line to tsc or set in VS project settings.",
    "LastUpdatedDate": "2014-03-17T08:09:04.62-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-15T07:54:08.013-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "Separate finding the reference from the emitted JS",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2317
  },
  "FileAttachments": [],
  "Comments": []
}