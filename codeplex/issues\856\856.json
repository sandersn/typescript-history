{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "The IO module is not intended to be used by whatever code you are compiling & executing.  Ideally, when your code executes, none of the objects the TypeScript compiler has setup would be available to you.  This is only available as an artifact of the limitations of certain hosts in settings up a new context.\n\nIf you want to write to the console when you code executes after it is compiled, you should use the host methods of the native JavaScript environment (e.g. console.log), not the IO object the TypeScript compiler has left hanging around.",
    "ClosedDate": "2013-04-03T10:37:50.483-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "It's possible to use the IO library and for example print to the console when executing a ts file:\r\n\r\ndeclare var IO;\r\nIO.print(\"hello world\");\r\n\r\ntsc -e somefile.ts\r\n\r\nBut it's for some reason not possible to reference an external definition file and do the same:\r\n\r\n/// <reference path=\"io.d.ts\"/>\r\nIO.print(\"hello world\");\r\n\r\nI found a workaround:\r\nAdd also a reference to an empty ts file\r\n/// <reference path=\"empty.ts\"/>\r\n/// <reference path=\"io.d.ts\"/>\r\nIO.print(\"hello world\");\r\n\r\nAnd compile it with the --out option\r\n\r\ntsc -e somefile.ts --out somefile.js",
    "LastUpdatedDate": "2013-04-03T10:37:50.483-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-30T08:57:45.623-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "reference a file and execute",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 856
  },
  "FileAttachments": [],
  "Comments": []
}