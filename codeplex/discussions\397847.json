[
  {
    "Id": "921117",
    "ThreadId": "397847",
    "Html": "\r\n<p>For example i have my own implementation of multicast &quot;delegates'&quot; and i would love to be able to write</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp; &nbsp;obj.MyEvent &#43;= subscriber.handler;</p>\r\n<p>&nbsp;</p>\r\n<p>and to generate actually:</p>\r\n<p>&nbsp; &nbsp;obj.MyEvent.add(new Delegate(subscriber, subscriber.handler));</p>\r\n<p>&nbsp;</p>\r\n<p>Please don't comment the saneness of the events approach, just the principle of the question.</p>\r\n<p>i would like a moment where the &quot;type information&quot; for the nodes in AST is available...</p>\r\n<p>Is there a recommended way to do this?</p>\r\n",
    "PostedDate": "2012-10-03T02:09:23.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921313",
    "ThreadId": "397847",
    "Html": "\r\n<p>&nbsp;</p>\r\n<p>I managed to modify tsc.js to obtain something like this, tampering &quot;BinaryExpression.emit&quot;.</p>\r\n<p>The hack is usable only if i declare obj.MyEvent : any...</p>\r\n<p>I must change also&nbsp;BinaryExpression.typeCheck to fit my needs...</p>\r\n",
    "PostedDate": "2012-10-03T08:35:26.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922504",
    "ThreadId": "397847",
    "Html": "<p>TypeScript doesn't currently allow you to overload operators like '+='.&nbsp; The only thing that comes to mind here would be to do some kind of pre-processing magic (that was type-aware?).&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-10-05T08:56:35.427-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]