[
  {
    "Id": "929412",
    "ThreadId": "400060",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I am trying to use define a self variable in a module so that I can use it as the context in some function inside the module:</p>\r\n<pre>export module Module1 { \r\n var self = this; \r\n}</pre>\r\n<p>I am receiving the error Error&nbsp;5&nbsp;'this' may not be referenced within module bodies.</p>\r\n<p>How can I make it work ?</p>\r\n<p>Thanks in advance.</p>\r\n",
    "PostedDate": "2012-10-19T07:07:11.993-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "929490",
    "ThreadId": "400060",
    "Html": "<p>There are a couple reasons why 'this' isn't allowed in a module.&nbsp; The modules system TS uses is based largely on the ECMAScript version 6 draft.&nbsp; When modules were being created, the team tried to align conservatively with this draft, which, to my understanding, meant that because the ES6 proposal didn't allow 'this', TS shouldn't either.&nbsp; The other reason was that the codegen currently doesn't expect 'this' to talk about the module.</p>\r\n<p>That said, these reasons aren't set in stone and could change.</p>",
    "PostedDate": "2012-10-19T09:17:41.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "929541",
    "ThreadId": "400060",
    "Html": "<p>But I have a function that needs to use the self variable in its context.</p>\r\n<p>How can I do this ?</p>",
    "PostedDate": "2012-10-19T10:52:43.887-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "929667",
    "ThreadId": "400060",
    "Html": "<p>There is only one instance of the module, so any reason you cannot just reference \"Module1\" directly?&nbsp; If not, could you share an example of what doesn't work?</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-10-19T16:41:31.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "930587",
    "ThreadId": "400060",
    "Html": "<p>Lukeh,</p>\r\n<p>Using the nmame of the module worked perfectly.</p>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">\r\n<p>Thanks</p>\r\n</span></span></span></p>",
    "PostedDate": "2012-10-22T10:06:37.717-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "936100",
    "ThreadId": "400060",
    "Html": "<p>Same problem here.</p>\r\n<p>I see no evidence in the ES6 proposal [1] that supports this behaviour. It clearly states: \"The initial binding of <code>this</code> is the global object.\"</p>\r\n<p>Unfortunately in my current situation (Mozilla JS Modules [2]) I need \"this\" to fake a CommonJS module system, so that I can use TypeScript. Current workaround only seems to be \"eval('this')\".</p>\r\n<p>[1] http://wiki.ecmascript.org/doku.php?id=harmony:modules</p>\r\n<p>[2] https://developer.mozilla.org/en-US/docs/JavaScript_code_modules</p>",
    "PostedDate": "2012-11-03T11:09:50.987-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]