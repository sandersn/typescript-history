{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.173-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I have tsc output a single file (--out default.js) and run it thru the Closure Compiler with simple optimization and it works.\r\n\r\nHowever, the same output file fails with advance optimization enabled.\r\n\r\nFor one, it generates several warnings about redeclared variables, and I can see Typescript does indeed redeclare the same variable for the top-level namespace for every .ts module it compiles into the final output.\r\n\r\nHowever, this warning is not the actual cause of failure. From the Closure Compiler docs:\r\n\r\nCode compiled with ADVANCED_OPTIMIZATIONS may not work with uncompiled code unless you take special steps to ensure interoperability. If you do not flag external functions and properties referenced in your code, Closure Compiler will inappropriately rename references in your code, causing mismatches between the names in your code and in the external code.\r\n\r\nI suspect this is the real issue. Typescript does not flag things properly enough to allow aggressive optimization.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-21T09:45:02.197-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Basic typescript fails with closure compiler advanced optimization",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 6,
    "Id": 304
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "In my experience Google Closure compiler with ADVANCED_OPTIMIZATIONS optimisation works very unpredictably. It would be better if the typescript compiler by itself could produce already minified scripts.\nBut at the current state of its development it is rather early to ask the team to add this feature to the compiler.",
      "PostedDate": "2012-10-22T00:40:35.113-07:00",
      "Id": 80628
    },
    {
      "Message": "Google Closure advanced optimizations are not \"unpredictable\", but as stated by billyzkid, you have to take special care in code fed to Google Closure to succeed.\n\nThere is a nice ongoing work being done by bolinfest in [github](https://github.com/bolinfest/typescript/) regarding Closure annotations integration.",
      "PostedDate": "2013-01-14T08:26:03.097-08:00",
      "Id": 86101
    }
  ]
}