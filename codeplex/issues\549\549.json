{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "The signature of the implementation is not visible to external callers. If you want the implementation signature to be visible, you need to declare it explicitly.",
    "ClosedDate": "2012-12-10T12:18:57.447-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "When a function is overloaded, and the parameter is a function, and the two signatures only differ by the signature of the function parameter, intellisense does not resolve the call site. Oddly, if the overloaded signatures are switched, it works.\r\n\r\nThis repros in the TS playground:\r\n\r\nfunction foo(fn: (item: any) => bool): bool;\r\nfunction foo(fn: (item: any, index: number) => bool): bool {\r\n\treturn true;\r\n}\r\n\r\nfunction bar(fn1: (item: any) => bool, fn2: (item: any, index: number) => bool): bool {\r\n\treturn foo(fn1) && foo(fn2);\r\n}\r\n\r\nThe call in bar to \"foo(fn2)\" says that the supplied parameters do not match any signature of call target.",
    "LastUpdatedDate": "2012-12-10T12:18:57.447-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-12-10T10:14:18.447-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Broken overloading when param of function type differs in signature",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 549
  },
  "FileAttachments": [],
  "Comments": []
}