[
  {
    "Id": "963937",
    "ThreadId": "412174",
    "Html": "\r\n<p>I need to declare an interface that accepts both string and number indexes for interfacing w/ an external JS environment (I know it seems strange) and a class that implements that interface. E.g.:</p>\r\n<p></p>\r\n<pre>declare interface MyInterface {\r\n    [index: string]: any;\r\n    [index: number]: any;\r\n}\r\n\r\ndeclare class MyClass implements MyInterface {\r\n    [index: string]: any;\r\n    [index: number]: any;\r\n}</pre>\r\nThis doesn't compile and it also doesn't if I remove the signatures from the declared class. If I only had one index signature in the interface, I could remove it from the class declaration and all is well. Is this something that can be supported?\r\n<p></p>\r\n",
    "PostedDate": "2012-12-20T15:19:04.823-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "964076",
    "ThreadId": "412174",
    "Html": "\r\n<p>I just ran into this as well. &nbsp;I needed to define an interface containing a property with two different&nbsp;possible types and this isn't currently allowed. Given that this is a fairly common scenario in JavaScript I think the team should consider supporting\r\n this.</p>\r\n<p>&nbsp;</p>\r\n<p>-steve &nbsp;</p>\r\n",
    "PostedDate": "2012-12-20T15:54:46.48-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "964265",
    "ThreadId": "412174",
    "Html": "\r\n<p>+1 from me also - I ran into this a few days ago with some code that consumed input field definitions (where the 'value' field could be either string or bool).</p>\r\n",
    "PostedDate": "2012-12-20T16:43:15.78-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "981427",
    "ThreadId": "412174",
    "Html": "\r\n<p>Thanks. &nbsp;I'll copy this to an issue for tracking. &nbsp;As for if you are just declaring (rather than implementing) the class, you can do as we do for the types in lib.d.ts, namely:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>declare <span style=\"color:blue\">interface</span> MyInterface {\r\n    [index: string]: Date;\r\n    [index: number]: Event;\r\n    test(): number;\r\n}\r\n\r\ndeclare <span style=\"color:blue\">var</span> MyClass: {\r\n    <span style=\"color:blue\">new</span> (): MyInterface;\r\n}\r\n\r\n<span style=\"color:blue\">var</span> x = <span style=\"color:blue\">new</span> MyClass();\r\n<span style=\"color:blue\">var</span> m1 = x[<span style=\"color:#a31515\">&quot;test&quot;</span>]; <span style=\"color:green\">// m1 is of type Date</span>\r\n<span style=\"color:blue\">var</span> m2 = x[5];      <span style=\"color:green\">// m2 is of type Event</span>\r\nx.test();\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-12-28T11:24:10.12-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "981428",
    "ThreadId": "412174",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/577\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2012-12-28T11:24:57.137-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]