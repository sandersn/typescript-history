[
  {
    "Id": "1099748",
    "ThreadId": "459371",
    "Html": "Is it possible to implement implicit or explicit cast in TypeScript ?\r<br />\nLike in C#:<br />\n<pre><code>class ToAnything\n{\n    public static int operator implicit(ToAnything x) { return 1; }\n}</code></pre>\n\nIf yes, is it possible to define generic cast operators ?\r<br />\nFor instance you can do in Nemerle language: <br />\n<pre><code>class ToAnything\n{\n  public static @:[T](_ : this) : T { default(T); }\n}\n</code></pre>\n\nC# (pseudo code, cause it is impossible):<br />\n<pre><code>class ToAnything\n{\n    public static T operator implicit&lt;T&gt;(ToAnything x) { return default(T); }\n}\n</code></pre>\n\nAnd then instance of this class can be converted to any type.<br />\n",
    "PostedDate": "2013-09-26T09:49:52.507-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1100249",
    "ThreadId": "459371",
    "Html": "No, TypeScript doesn't support anything like this at present. <br />\n",
    "PostedDate": "2013-09-27T12:02:50.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]