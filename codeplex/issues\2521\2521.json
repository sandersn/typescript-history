{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "TypeScript doesn't have a notion of read-only properties.\n\nWe tried to add this to the type system early on, but it had a lot of undesirable implications. We may revisit this later.",
    "ClosedDate": "2014-05-27T10:00:38.913-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Is there a reason why TypeScript doesn't throw a compiler error when you try to set a non-settable property?\r\n\r\n```\r\nclass Hello\r\n{\r\n\tget Thing()\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tMethod()\r\n\t{\r\n\t\tthis.Thing = 1; // No error\r\n\t}\r\n}\r\n\r\nvar h = new Hello();\r\nh.Thing = 2; // No error\r\n```\r\n\r\nIs this by design?\r\nIf so, what is the rationale?\r\nIs it just so that it \"works more like JavaScript\"?\r\nIt's quite annoying.",
    "LastUpdatedDate": "2014-05-27T10:00:38.913-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-25T16:04:08.19-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "No error on setting non-settable properties",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 2521
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "If it helps, you can ```'use strict';``` to get a runtime error.\n",
      "PostedDate": "2014-05-26T22:01:41.88-07:00",
      "Id": 147968
    }
  ]
}