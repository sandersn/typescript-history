[
  {
    "Id": "994305",
    "ThreadId": "431457",
    "Html": "\r\n<p>It seems impossible to mix internal and external modules with the latest releases of TS.</p>\r\n<p>I can only mix them if I import the external module at the top level (so outside the declaration of an internal module). But when I do that, internal modules that are split over several files do not &quot;match&quot; anymore.</p>\r\n<p>is this the intended behavior, or am I overlooking something.</p>\r\n<p>// Peter</p>\r\n",
    "PostedDate": "2013-01-30T11:50:55.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "994309",
    "ThreadId": "431457",
    "Html": "\r\n<p>Well I think this is intended due to specification, read this issue:</p>\r\n<p>http://typescript.codeplex.com/workitem/657</p>\r\n",
    "PostedDate": "2013-01-30T11:58:50.333-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "994317",
    "ThreadId": "431457",
    "Html": "\r\n<p>@jzvelc, thanks for pointing me that part of the spec. This time around I read it more carefully than when it first came out.</p>\r\n<p>What it really means is that if a file imports an external module, it will become itself an external module (and thus will be loaded in a&nbsp;<span>separate body</span>). So that would explains the compiler errors I got. So not a bug, but the intended behavior.</p>\r\n<p>I get more and more the feeling that the current module approach of TS is not optimal. I hope it will get revised so it becomes much more &quot;natural&quot; to use and you don't have to fight it all the time.</p>\r\n",
    "PostedDate": "2013-01-30T12:20:32.047-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "994327",
    "ThreadId": "431457",
    "Html": "\r\n<p>It depends on what kind of project you are working on. You will probably use AMD for client side & CommonJS for e.g. Node.js. In my opinion external modules are ok as they are but the concept of internal modules is confusing, specially if you already wrote\r\n around 30 files and then realized that you need to import an external module (ouch!) =) The only thing I see here is to use classic require but that way you won't get type completion etc.</p>\r\n",
    "PostedDate": "2013-01-30T12:35:29.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]