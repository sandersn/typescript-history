{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-02-04T17:00:42.977-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Test case:\r\n \r\nFile system.d.ts\r\n \r\n```\r\nexport interface ValueCallback {\r\n (value:any):any;\r\n}\r\nexport interface EventCallback {\r\n (value:any):void;\r\n}\r\nexport interface ErrorCallback {\r\n (error:any):any;\r\n}\r\nexport interface ProgressCallback {\r\n (progress:any):any;\r\n}\r\nexport interface CancelCallback {\r\n ():void;\r\n}\r\nexport interface Promise {\r\n then(success?:ValueCallback, error?:ErrorCallback, progress?:ProgressCallback):Promise;\r\n done(success?:ValueCallback, error?:ErrorCallback, progress?:ProgressCallback):void;\r\n cancel():void; \r\n}\r\nexport declare var Promise: {\r\n prototype: Promise;\r\n as(value: any): Promise;\r\n}\r\n \r\n```\r\nFile test.ts\r\n \r\n```\r\nimport system = module('./system');\r\nfunction foo():void {\r\n var p:system.Promise;\r\n p = system.Promise.as(10);\r\n}\r\nfunction bar():system.Promise {\r\n}\r\n \r\n```\r\nCompile using tsc --module node system.d.ts test.ts\r\nyou get test.ts(8,15): Expected type\r\n \r\nHowever system.Promise is a valid type as you can see on line 4\r\n",
    "LastUpdatedDate": "2014-02-04T17:00:42.977-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-18T16:43:55.297-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Using function returntype from external module, the type that is both value and type results in error",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 740
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Fixed in changeset 6da9662906e9b0f3de2468f84f11e62de89ccfa2",
      "PostedDate": "2014-02-04T16:40:31.107-08:00",
      "Id": 132583
    }
  ]
}