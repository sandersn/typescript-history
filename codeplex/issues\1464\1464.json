{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Use +(expr) if you want a shorthand for (expr) ? 1 : 0 that only works on booleans. This is not common enough to justify the unsafety of what is normally an actual numeric operation.",
    "ClosedDate": "2013-08-08T15:04:41.213-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I've tried round-tripping the jslinux emulator through typescript to see whether it could handle it.  It mostly does, but with some errors.  One that's clearly a bug is that it doesn't evaluate (Boolean expression) >> 0 as a number (it's a common idiom for (expr) ? 1 : 0), so it raises incorrect TS2113 errors.  E.g. these expressions:\r\n\r\n        cc_src = (cc_dst != ((cc_dst << 24) >> 24)) >> 0;\r\n        s.gate = (i != 2) >> 0;\r\n        out = (d >= this.count) >> 0;\r\n        out = (d < this.count) >> 0;\r\n        out = ((d % this.count) < (this.count >> 1)) >> 0;\r\n        out = (d == this.count) >> 0;\r\n",
    "LastUpdatedDate": "2013-08-08T15:04:41.213-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-08T13:49:41.957-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "TS2113 incorrectly raised for (boolean expression) >> 0",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1464
  },
  "FileAttachments": [],
  "Comments": []
}