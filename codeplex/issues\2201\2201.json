{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This has been discussed extensively in the forums. e.g. here https://typescript.codeplex.com/discussions/429350\n\nThe core reason is the following:\n\n````\nThe short answer is that, while this aspect is no doubt a little verbose, our class syntax tries to align very closely with the ES6 proposal for classes, which currently requires explicit \"this.\" for member accesses. \n````",
    "ClosedDate": "2014-02-21T14:05:59.337-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Typescript requires variables in a class to be prefixed by a this. This is very annoying. E.g., following code:\r\n \r\nclass Greeter {\r\n    greeting: string;\r\n    constructor(message: string) {\r\n        greeting = message;\r\n    }\r\n    greet() {\r\n        return \"Hello, \" + greeting;\r\n    }\r\n}\r\n\r\ngot translated to:\r\nvar Greeter = (function () {\r\n    function Greeter(message) {\r\n        greeting = message;\r\n    }\r\n    Greeter.prototype.greet = function () {\r\n        return \"Hello, \" + greeting;\r\n    };\r\n    return Greeter;\r\n})();\r\nusing the playground. greeting is now a global variable on the window object.\r\n\r\nCould this be fixed? i.e., typescript users should not have to prefix member names by a this all the time.",
    "LastUpdatedDate": "2014-02-21T14:05:59.337-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-20T11:09:49.047-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Having to prefix member variables by this is very annoying",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2201
  },
  "FileAttachments": [],
  "Comments": []
}