[
  {
    "Id": "1065991",
    "ThreadId": "449407",
    "Html": "Hello, \r<br />\n<br />\nI'd like to have two interfaces, one with 3 generic parameters, and a second with only two, inheriting from the first where the third template parameter is any<br />\n<pre><code>interface A&lt;I, J&gt; extends A&lt;I, J, any&gt;{\n    \n}\n\n\ninterface A&lt;I, J, K&gt; {\n    \n}</code></pre>\n\nthe typescript compiler throws an error saying that &quot;Generic type A&lt;I, J, K&gt; is recursively referenced as a base type of itself. \r<br />\nThe two types are however different. \r<br />\n<br />\nCould you explain me why this behavior is forbidden?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2013-07-09T02:07:00.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1066182",
    "ThreadId": "449407",
    "Html": "I believe that overloading on the number of type parameters is currently something that's disallowed based on a slightly older version of the spec, where we allowed you to leave off the type parameters when referring to the type (like A above).  At first glance, I can't think of a reason not to allow this in the future, though there might be something subtle here I'm not seeing.<br />\n",
    "PostedDate": "2013-07-09T08:47:08.663-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]