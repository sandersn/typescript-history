{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-05-20T17:51:26.287-07:00",
    "CommentCount": 12,
    "Custom": null,
    "Description": "Since upgrading to 1.0, the debugger works differently and it is quite annoying. We are a team of 2 developers working on the same project and both are now seeing this problem. When we put a breakpoint in a .ts file, the breakpoint is actually going in the \"Dynamic\" code file instead of my real .ts file. It didn't use to do that before I installed VS2013 RC Update 2.\r\n\r\nWorst is that \"Dynamic\" code file has all requirejs dependencies underlined as if there was a compilation error\r\n\r\nModule cannot be aliased to a non-module type.\r\nUnable to resolve external module ''xyz'\"\r\n\r\nHere's a quick demo: http://screencast.com/t/tasm7t0CUf",
    "LastUpdatedDate": "2014-05-25T07:15:59.963-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-29T11:52:31.437-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Debugging into the .ts file is broken on 1.0 (dynamic debug only)",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 7,
    "Id": 2477
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I have the same problem since upgrading to TypeScript 1.0 when trying to debug a TypeScript source file from another project.  TS source files within the same project work okay.\n\nSpecifically, when debugging project A and setting a breakpoint in one of project B's TypeScript source files, Visual Studio 2013 automatically opens the \"Dynamic\" code file and stops there instead, but it's blank/empty, so my only option is to continue running.\n\nI had configured this same scenario to work correctly under TypeScript 0.9.5 by overriding project A's IIS Express settings to match project B and adding a post-build step to copy project B's JavaScript & map files to project A.\n\n",
      "PostedDate": "2014-04-29T13:13:15.333-07:00",
      "Id": 145121
    },
    {
      "Message": "Actually, after debugging additional projects, I'm __always__ seeing this \"Dynamic\" code file for breakpoints--regardless of whether or nor the TypeScript sources files are within the same project.\n\nHowever, they're also blank if the TS source files are from another project.",
      "PostedDate": "2014-04-30T12:25:26.66-07:00",
      "Id": 145254
    },
    {
      "Message": "Same here. Since VS2013 RC Update 2, the code window always goes to dynamic code view and red wiggly lines everywhere. I can still debug, but it is a pain. On another machine, I still use TypeScript v0.921202.0 and debugging is just fine there. ",
      "PostedDate": "2014-05-04T09:47:28.337-07:00",
      "Id": 145514
    },
    {
      "Message": "Please fix this soon. I have a presentation in a few weeks, and debugging the TypeScript in VS is one of the coolest features.",
      "PostedDate": "2014-05-06T12:44:30.74-07:00",
      "Id": 145723
    },
    {
      "Message": "Something that might be related to this ticket is that while debugging and making correction to the .TS file, the .JS file is not always re-generated causing lost cycles and having to stop/start the solution for the rebuild to properly occur.",
      "PostedDate": "2014-05-07T07:33:44.757-07:00",
      "Id": 145789
    },
    {
      "Message": "I've partly solved this issue by specifying a \"root directory of source maps\".\n\n2 options:\n - put \"$(ProjectDir)\", but in that case debugging with other browser (at least Firefox) do not show TS files but JS files.\n - put the project URL (\"http://localhost:xxxx/\"), which solves the previous issue, but confuses VS when putting a breakpoint on a file which has the same filename as another file but in a different sub-directory...\n\nHowever with both options, variable contents display by putting the mouse over a symbol does not work, but external symbols are not more underlined and F12 correctly finds definitions.",
      "PostedDate": "2014-05-09T08:54:57.093-07:00",
      "Id": 146063
    },
    {
      "Message": "I have installed the VS2013 Update 2 Release over the RC and everything works fine now. If other can confirm the same behavior, we'll be able to close this one.",
      "PostedDate": "2014-05-14T04:49:02.757-07:00",
      "Id": 146549
    },
    {
      "Message": "Confirmed -- installing VS2013 Update 2 Release over the RC resolves this issue. ",
      "PostedDate": "2014-05-14T06:26:00.547-07:00",
      "Id": 146558
    },
    {
      "Message": "Great to hear, I'll close this but if anyone still sees it with Update 2 RTM do re-open this or file a new issue.",
      "PostedDate": "2014-05-20T17:51:20.773-07:00",
      "Id": 147289
    },
    {
      "Message": "I'm seeing this problem again. It won't compile on save, but it will compile when I build the project. This is only on one file right now, the others compile fine.",
      "PostedDate": "2014-05-23T09:49:29.277-07:00",
      "Id": 147550
    },
    {
      "Message": "@kswarts ... This closed topic is about a debugging problem with TS 1.0, that was resolved with TS 1.0.1, and doesn't involve the compile on save functionality, so I recommend searching the forum for an existing such thread or open a new issue accordingly.",
      "PostedDate": "2014-05-23T10:41:52.393-07:00",
      "Id": 147553
    },
    {
      "Message": "Sorry, wrong link.",
      "PostedDate": "2014-05-25T07:15:59.963-07:00",
      "Id": 147642
    }
  ]
}