[
  {
    "Id": "996831",
    "ThreadId": "432074",
    "Html": "Right now, specifying an overload requires you to duplicate the function signature with different parameters and no method body. I think this is fine for overloads with very different signatures, but for more &quot;simple&quot; overloads, it seems like overkill. <br />\n<br />\nOften I find I just need to specify that a variable can be of one or more types (but the name and order in the parameter list  doesn't change). For simple cases, I think the following syntax would be a lot more concise:<br />\n<pre><code>function foo(a: string|number, b: Date|string) { ... }</code></pre>\n\nThis allows you to specify 4 overloads without having to copy and paste function signatures. I think this combined with optional parameters could cover many JavaScript &quot;overloads&quot; in just a single concise line.<br />\n<br />\nWhat do you think? Does anyone see any problems with this approach?<br />\n",
    "PostedDate": "2013-02-05T10:39:19.167-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997313",
    "ThreadId": "432074",
    "Html": "Shorthand to give you all the permutations of overloads might be handy, though I think the confusion might come because &quot;string|number&quot; isn't actually a type. \r<br />\n<br />\nFor example, we probably won't end up also supporting:<br />\n<pre><code>var x : string|number;</code></pre>\n\nBecause of the complexity it adds to the typechecking algorithm.<br />\n",
    "PostedDate": "2013-02-06T07:05:15.307-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997356",
    "ThreadId": "432074",
    "Html": "I agree there is no need to support<br />\n<pre><code>var x: string|number;</code></pre>\n\nas that somewhat defeats the purpose of strong typing to begin with.\r<br />\n<br />\nI think in the case of overloads, the simplest solution would be for the compiler to treat a parameter marked with multiple types as an <code>any</code>. This is basically what you have to do now anyway when you have overloads with different types for the same parameter. The programmer would then have to do a type check to figure out what the type actually is, just like they do currently. <br />\n",
    "PostedDate": "2013-02-06T07:54:04.283-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]