{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in develop with change a565be0",
    "ClosedDate": "2012-10-21T23:30:46.04-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "File: test1.ts\r\n\r\nvar fs = require('fs');\r\n\r\nfunction foo() {\r\n};\r\n\r\nFile: test2.ts\r\n\r\nvar fs = require('fs');\r\n\r\nfunction foo() {\r\n};\r\n\r\nCompile using:\r\n\r\nnode .\\tsc.js -module commonjs node.d.ts test1.ts test2.ts\r\n\r\nyou get\r\n\r\ntest2.ts(1,0): Duplicate identifier 'fs'\r\ntest2.ts(3,0): Duplicate identifier 'foo'\r\n\r\nAdding any import or export statement will fix it. However I think that specifying the -module commonjs should for CommonJS anonymous modules even if the source doesn't contain and import or export. \r\n\r\nThe use case is that TypeScript code can still use require and exports. instead of the import and export keyword. ",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-04T07:33:54.53-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Compiler should honor module flag even if source doesn't contain any imports or exports",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 95
  },
  "FileAttachments": [],
  "Comments": []
}