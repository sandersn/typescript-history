[
  {
    "Id": "945693",
    "ThreadId": "404243",
    "Html": "\r\n<p>Can we define delegate (function) types in TypeScript?</p>\r\n",
    "PostedDate": "2012-11-22T07:25:56.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "945761",
    "ThreadId": "404243",
    "Html": "\r\n<p>var fn: (x: number) =&gt; number;</p>\r\n<p>fn = (x). =&gt; x*x;</p>\r\n<p>&nbsp;</p>\r\n<p>Or same but named:</p>\r\n<p>interface NumericalFunction {</p>\r\n<p>&nbsp; &nbsp;(x: number): number;</p>\r\n<p>}&nbsp;</p>\r\n",
    "PostedDate": "2012-11-22T09:57:31.927-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "945766",
    "ThreadId": "404243",
    "Html": "\r\n<p>The important thing to ask though is not if I can, but whether I should. Who is going to benefit from that function? Am doing a good service to the human race by abstracting those functions away?</p>\r\n<p>Those are difficult questions we should concentrate on, not technicalities like syntax or paradigms.&nbsp;</p>\r\n",
    "PostedDate": "2012-11-22T10:00:54.877-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "995387",
    "ThreadId": "404243",
    "Html": "the C# team thought that it would be ok to abstract a function type into DELEGATE.\r<br />\nWhy does Typescript not have the need to.\r<br />\n<br />\nif my API needs to pass around some functions with more complex signatures, repeating the type description each time is error prone and time consuming,\r<br />\n<br />\nwhy not:\r<br />\n<br />\n   delegate EventHandler( sender : object, args : EventArgs );\r<br />\n<br />\n   ... \r<br />\n<br />\n   class A\r<br />\n   {<br />\n<pre><code>           ....\n          public void Register( handler : EventHandler )</code></pre>\n\n...\r<br />\n   }<br />\n",
    "PostedDate": "2013-02-01T12:43:19.517-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "995669",
    "ThreadId": "404243",
    "Html": "It's already supported:<br />\n<pre><code>interface EventHandler {\n    (sender: Object; args: EventArgs): void;\n}\n\nfunction Register(handler: EventHandler) { ... }</code></pre>\n\nA named function type is simply an interface with one or more call signatures.<br />\n",
    "PostedDate": "2013-02-02T15:33:35.583-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "995670",
    "ThreadId": "404243",
    "Html": "&lt;div dir=&quot;ltr&quot;&gt;Thanks. Interesting and not obvious. Is this in the docs?&lt;/div&gt;\r\n&lt;div&gt;&lt;br&gt;\r\n&lt;br&gt;\r\n&lt;div&gt;On Sun, Feb 3, 2013 at 1:33 AM, ahejlsberg &lt;span dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a href=&quot;mailto:notifications@codeplex.com&quot; target=&quot;_blank&quot;&gt;notifications@codeplex.com&lt;/a&gt;&amp;gt;&lt;/span&gt; wrote:&lt;br&gt;\r\n&lt;blockquote style=&quot;margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex&quot;&gt;\r\n&lt;div&gt;\r\n&lt;p&gt;From: ahejlsberg&lt;/p&gt;\r\n&lt;div&gt;It's already supported: ``` interface EventHandler { (sender: Object; args: EventArgs): void; } function Register(handler: EventHandler) { ... } ``` A named function type is simply an interface with one or more call signatures.&lt;/div&gt;\r\n&lt;div&gt;\r\n&lt;p&gt;Read the &lt;a href=&quot;http://typescript.codeplex.com/discussions/404243#post995669&quot; target=&quot;_blank&quot;&gt;\r\nfull discussion online&lt;/a&gt;.&lt;/p&gt;\r\n&lt;p&gt;To add a post to this discussion, reply to this email (&lt;a href=&quot;mailto:typescript@discussions.codeplex.com?subject=[typescript:404243]&quot; target=&quot;_blank&quot;&gt;typescript@discussions.codeplex.com&lt;/a&gt;)&lt;/p&gt;\r\n&lt;p&gt;To start a new discussion for this project, email &lt;a href=&quot;mailto:typescript@discussions.codeplex.com&quot; target=&quot;_blank&quot;&gt;\r\ntypescript@discussions.codeplex.com&lt;/a&gt;&lt;/p&gt;\r\n&lt;p&gt;You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n&lt;a href=&quot;https://typescript.codeplex.com/discussions/404243/unsubscribe/&quot; target=&quot;_blank&quot;&gt;\r\nunsubscribe&lt;/a&gt; on CodePlex.com.&lt;/p&gt;\r\n&lt;p&gt;Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com&lt;/p&gt;\r\n&lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/blockquote&gt;\r\n&lt;/div&gt;\r\n&lt;br&gt;\r\n&lt;/div&gt;\r\n",
    "PostedDate": "2013-02-02T15:40:44.583-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1015676",
    "ThreadId": "404243",
    "Html": "function references in C# are called delegates. Function references in Javascript and therefore Typescript are just normal variables which have a call signature. Call signatures are mentioned on page 24 , section 3.5.3.1 of the typescript language specification : <a href=\"Spec\" rel=\"nofollow\">http://www.typescriptlang.org/Content/TypeScript%20Language%20Specification.pdf</a><br />\n",
    "PostedDate": "2013-03-14T20:20:02.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]