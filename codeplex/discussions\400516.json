[
  {
    "Id": "931305",
    "ThreadId": "400516",
    "Html": "\r\n<p>Hi,&nbsp;</p>\r\n<p>I see this pattern in some libraries for example a changed event in kendo</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>\r\ncalendar.bind(<span style=\"color:#a31515\">&quot;changed&quot;</span>, <span style=\"color:blue\">function</span>(e){... });\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I would like to change this to something typed without writing a wrapper for calendar class...</p>\r\n<p>so that i can have some intellisense for the supported events.</p>\r\n<p>Any ideas how to do this?</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><br></pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-10-23T12:57:14.007-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932462",
    "ThreadId": "400516",
    "Html": "<p>In case you are just looking for intellisense within the callback method, you could use something simple like this:</p>\r\n<p>&nbsp;</p>\r\n<pre><div style=\"color: black; background-color: white;\"><pre>calendar.bind(<span style=\"color: #a31515;\">\"changed\"</span>, <span style=\"color: blue;\">function</span>(e:ChangedEvent){... });\r\n</pre>\r\n</div>\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p>Of course you would have to declare the ChangedEvent interface.</p>\r\n<p>--Peter</p>",
    "PostedDate": "2012-10-25T08:09:32.63-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932522",
    "ThreadId": "400516",
    "Html": "\r\n<p>You could define an interface for that calendar something like this&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>interface Calendar {</p>\r\n<p>bind((ChangeEvent) =&gt; void) ;</p>\r\n<p>}&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Then if you cast your 'calendar' variable to that interface, you would get all the right intelliintellisense.&nbsp;</p>\r\n",
    "PostedDate": "2012-10-25T09:49:42.767-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932553",
    "ThreadId": "400516",
    "Html": "\r\n<p>Declare a class with static string fields for the events to use like an enumeration?</p>\r\n<p>class CalendarEvents {<br>\r\npublic static Changed = &quot;changed&quot;;<br>\r\n}</p>\r\n<p>calendar.bind(CalendarEvents.Changed, function (e) { });</p>\r\n<p>There are supposed to be enums in the final version of TypeScript, which will probably address this need better.</p>\r\n<div>On Oct 23, 2012 3:57 PM, &quot;ursuletzu&quot; &lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt; wrote:<br type=\"attribution\">\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: ursuletzu</p>\r\n<div>\r\n<p>Hi, </p>\r\n<p>I see this pattern in some libraries for example a changed event in kendo</p>\r\n<p></p>\r\n<div>\r\n<pre>\r\ncalendar.bind(<span style=\"color:#a31515\">&quot;changed&quot;</span>, <span style=\"color:blue\">function</span>(e){... });\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I would like to change this to something typed without writing a wrapper for calendar class...</p>\r\n<p>so that i can have some intellisense for the supported events.</p>\r\n<p>Any ideas how to do this?</p>\r\n<p></p>\r\n<p></p>\r\n<div>\r\n<pre><br></pre>\r\n</div>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n</div>\r\n<div>\r\n<p>Read the <a href=\"http://typescript.codeplex.com/discussions/400516#post931305\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:typescript@discussions.codeplex.com?subject=[typescript:400516]\" target=\"_blank\">typescript@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:typescript@discussions.codeplex.com\" target=\"_blank\">\r\ntypescript@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://typescript.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n",
    "PostedDate": "2012-10-25T10:47:56.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "935400",
    "ThreadId": "400516",
    "Html": "<p>&nbsp;You can also define an enum using a 'var' which&nbsp;will generate less output code then using&nbsp;a 'class':</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">var</span> CalendarEvents = {\r\n     Changed: <span style=\"color: #a31515;\">\"changed\"</span>\r\n};\r\n\r\ncalendar.bind(CalendarEvents.Changed, <span style=\"color: blue;\">function</span> (e) { });\r\n\r\n</pre>\r\n</div>",
    "PostedDate": "2012-11-01T11:56:19.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "935877",
    "ThreadId": "400516",
    "Html": "<p>signals are a more type-safe version of events</p>\r\n<p>http://millermedeiros.github.com/js-signals/</p>",
    "PostedDate": "2012-11-02T13:19:00.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "937823",
    "ThreadId": "400516",
    "Html": "<p>The js-signals stuff is every similar to how I've been approaching events in TypeScript but to be honest it doesn't even need to be as complex as they've made it. &nbsp;I just posted the basic code I've been using to strongly type events in TypeScript and the core dispatcher boils down to about 40 lines of JavaScript and with the way I've done it all of the actual typing stuff boils out at compile time yet you get an amazing tooling experience. &nbsp;It doesn't help much with existing frameworks like jQuery but for new TypeScript classes I hope it's helpful:</p>\r\n<p>http://typescript.codeplex.com/discussions/402228</p>",
    "PostedDate": "2012-11-07T02:59:38.727-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "937859",
    "ThreadId": "400516",
    "Html": "<p>I was also using js-signals in my code, but later on I discovered the 'jQuery.Callbacks( flags )' function which does the same thing. So don't use js-signals if you're already using jQuery.</p>\r\n<p>The jquery.d.ts file will guide you, but contains a small bug. The <a title=\"jQuery.Callbacks documentation\" href=\"http://api.jquery.com/jQuery.Callbacks/\" target=\"_blank\">flags argument is optional</a>, so the jquery.d.ts file should contain:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">/*********\r\nCALLBACKS\r\n**********/</span>\r\nCallbacks(flags?: any): JQueryCallback;\r\n</pre>\r\n</div>\r\n<p>Instead of:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">/*********\r\nCALLBACKS\r\n**********/</span>\r\nCallbacks(flags: any): JQueryCallback;\r\n\r\n</pre>\r\n</div>",
    "PostedDate": "2012-11-07T04:31:45.737-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]