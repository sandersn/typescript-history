[
  {
    "Id": "1111194",
    "ThreadId": "463299",
    "Html": "I am trying to create a multifile amd module with these two files:\r<br />\na.ts<br />\n<pre><code>module SomeNameSpace {\n  export class Base {}\n}</code></pre>\n\nb.ts<br />\n<pre><code>export module SomeNameSpace {\n  export class Tubo extends Base {}\n}</code></pre>\n\nBasically I want to have an amd module that is split across more than one file and compiled to a single file.\r<br />\nBut somehow I can't find the right combination of code and compiler directives to get it compiled properly. IMO this is important for managing amd modules...<br />\n",
    "PostedDate": "2013-10-23T11:23:02.727-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1111222",
    "ThreadId": "463299",
    "Html": "TypeScript does not currently support merging external modules across files. If they are both internal modules (ie not exported at the top level) then the --out flag will allow you to merge them into one file.<br />\n",
    "PostedDate": "2013-10-23T12:37:50.873-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1111241",
    "ThreadId": "463299",
    "Html": "Yay, I really hope that this one makes it into TS asap. Looks like a very important feature for module organization (can't really think of stuffing tons of code into one file).\r<br />\nAs per -out flag: this flag just concatenates the output, right?\r<br />\nBTW I did the inverse -out processing - concatenated .ts files together and then compiled one big .ts file. It works except for sourcemap information getting lost (due to the &quot;manual&quot; merge of .ts files).<br />\n",
    "PostedDate": "2013-10-23T13:06:01.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1111249",
    "ThreadId": "463299",
    "Html": "Yeah, the out flag just concatenates the files in the order provided. And yeah it's probably possibly to manually concat the exported module pieces into one file, you'll just need to make sure the semantics match your expectations. We've definitely heard this request before and spent some time trying to design it but haven't landed on a solution we like just yet.<br />\n",
    "PostedDate": "2013-10-23T13:22:49.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]