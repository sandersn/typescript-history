{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:22.19-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "This is a feature request: \r\n\r\nBasically a compiler flag that does not check types but still does type erasure (`--raw`).\r\n\r\nEffect: \r\nSame as compiling while ignoring all `///<references` and `import/require` calls (change to `var/require`) and just generating an output JavaScript. Will help speed up TS -> JS for development. People can still run full compilation occur as a part of prepush/build steps. \r\n\r\nRelated : https://github.com/grunt-ts/grunt-ts/issues/34",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-02T02:06:44.873-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Fast shallow compile , non type checked option",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 5,
    "Id": 2249
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This would be a nice feature to help bridge the gap between those who are looking for ECMA 6 syntax and those who want compilation to guarantee correctness.\n\nIt would also enable plugins to compile the JavaScript in two phases. One that just puts the JS on the page so that they can see the result of their change immediately, and then a second phase that tells them if their change type checks (which they might also be able to see from the runtime failure). I feel like this would be a pretty useful workflow for folks coming from a dynamic language background who look for the results on a the web page first then the compiler output.",
      "PostedDate": "2014-03-03T09:44:17.837-08:00",
      "Id": 135638
    },
    {
      "Message": "Thanks for the suggestion, there are a number of issues we need to think through with regards to internal modules. But assigning to Jon, so we can discuss this later.",
      "PostedDate": "2014-03-03T13:54:31.58-08:00",
      "Id": 135682
    },
    {
      "Message": "Would also make stuff like creating gruntfiles easier to do in TypeScript. Effectively using the code gen only features to make TypeScript feel like CoffeeScript.",
      "PostedDate": "2014-03-08T04:18:44.063-08:00",
      "Id": 136281
    }
  ]
}