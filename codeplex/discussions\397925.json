[
  {
    "Id": "921396",
    "ThreadId": "397925",
    "Html": "\r\n<p>E.g. I want a function in my class to acception a callback function as a parameter.&nbsp;<br>\r\n<br>\r\nCan you specify what the signature of this function should be ?</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">function</span> Foo( parameter1 : string, foocallback : <span style=\"color:blue\">function</span>( a:string, b:number ) ) {\n   ...\n   foocallback( <span style=\"color:#a31515\">&quot;test&quot;</span>,123 );\n}\n</pre>\r\n</div>\r\n<p></p>\r\n<p><strong>Update</strong>: I found I could express it as&nbsp;<br>\r\n</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">function</span> Foo(parameter1: string, foocallback: (a:string, b:number)=&gt;<span style=\"color:blue\">void</span>)\n</pre>\r\n</div>\r\n<br>\r\n<br>\r\nBut wat I really would like to do, is to define this callback signature as a type (like delegate in c#)?<br>\r\nSo that if the signature of the callback changes, I don't have to revisit all functions using the callback... only refactor the delegate definition.\r\n<p></p>\r\n",
    "PostedDate": "2012-10-03T11:01:33.863-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921433",
    "ThreadId": "397925",
    "Html": "<p>You can use an interface for this:</p>\r\n<pre>interface FooDelegate {\r\n    (a: string, b: number): void;\r\n}\r\n</pre>\r\n<p>Now you can use the type FooDelegate for foocallback and you'll be set.</p>",
    "PostedDate": "2012-10-03T12:04:33.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921447",
    "ThreadId": "397925",
    "Html": "<p>Great! That works...</p>",
    "PostedDate": "2012-10-03T12:17:45.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]