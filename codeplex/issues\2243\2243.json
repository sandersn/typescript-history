{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We've implemented some perf improvements in the release-1.0.1 branch. If anyone could give them a shot and post their results (in the forum) that'd be helpful. Thanks!",
    "ClosedDate": "2014-03-31T10:09:22.063-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "As also seen by @oocx in the [Reviews](https://typescript.codeplex.com/releases/view/118980), the 1.0RC compiler is notably slower than in 0.9.5.\r\n\r\nI'm on a very small and new project, and compiling using the NPM package with Grunt, and compile times immediately went from a consistent range of 3.4-3.8s to 5.0-5.4s.  Not so bad with a project of this size, but certainly a big leap if the ratio was consistent in larger projects.\r\n\r\nLet me know if there's anything I can provide - though I won't be able to share much code due to company restrictions etc.",
    "LastUpdatedDate": "2014-03-31T10:09:22.063-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-28T02:50:18.513-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "1.0RC compiler is ~40% slower",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 6,
    "Id": 2243
  },
  "FileAttachments": [
    {
      "FileId": 809423,
      "FileName": "ts0.9.5.txt",
      "DownloadUrl": ".\\809423"
    },
    {
      "FileId": 809424,
      "FileName": "ts0.9.7.txt",
      "DownloadUrl": ".\\809424"
    },
    {
      "FileId": 809470,
      "FileName": "tscDiagnostics.txt",
      "DownloadUrl": ".\\809470"
    }
  ],
  "Comments": [
    {
      "Message": "If anyone who is seeing this sort of issue can share an affected project with us (you can do so privately without having to let everyone else access it) it would be extremely helpful to track down a root cause. We do have a number of projects of various sizes (including some very large ones) we use to test that our performance goals are met (which certainly includes not regressing performance like this) but they obviously can't represent all possible project and code structures. ",
      "PostedDate": "2014-02-28T09:53:37.66-08:00",
      "Id": 135423
    },
    {
      "Message": "Can you compile with both 0.9.5 and 0.9.7 with the --diagnostics flag? and attach the output for both?",
      "PostedDate": "2014-03-01T15:55:16.223-08:00",
      "Id": 135542
    },
    {
      "Message": "Yes. Here is the output for 0.9.5",
      "PostedDate": "2014-03-03T00:30:40.687-08:00",
      "Id": 135592
    },
    {
      "Message": "... and here for 0.9.7",
      "PostedDate": "2014-03-03T00:31:53.193-08:00",
      "Id": 135593
    },
    {
      "Message": "Yes, see attached tscDiagnostics.txt",
      "PostedDate": "2014-03-03T02:20:41.96-08:00",
      "Id": 135602
    },
    {
      "Message": "I doubt it's any real use, but if you're looking at the y = mx+c of compile times, here's what the 'c' looks like on my machine with 0.97 (i7, lots of memory):\n\nThe file hello.ts consists of one line:\n\nalert(\"Hello, world\");\n\nC:\\temp\\tstest>tsc --diagnostics hello.ts\n\nFile resolution time:                     14\n           file read:                     13\n        scan imports:                     0\n       import search:                     0\n        get lib.d.ts:                     1\nSyntaxTree parse time:                    365\nSyntax Diagnostics time:                  183\nAST translation time:                     561\n\nType check time:                          5329\n\nEmit time:                                0\nDeclaration emit time:                    0\nTotal number of symbols created:          29746\nSpecialized types created:                149\nSpecialized signatures created:           112\n  IsExternallyVisibleTime:                0\n  TypeSignatureTime:                      0\n  GetBoundDeclTypeTime:                   0\n  IsOverloadedCallSignatureTime:          0\n  FunctionDeclarationGetSymbolTime:       0\n  GetBaseTypeTime:                        0\n  GetAccessorFunctionTime:                0\n  GetTypeParameterSymbolTime:             0\n  GetImportDeclarationSymbolTime:         0\nEmit write file time:                     2\nCompiler resolve path time:               1\nCompiler directory name time:             0\nCompiler directory exists time:           0\nCompiler file exists time:                0\nIO host resolve path time:                1\nIO host directory name time:              0\nIO host create directory structure time:  0\nIO host write file time:                  1\nNode make directory time:                 0\nNode writeFileSync time:                  0\nNode createBuffer time:                   0",
      "PostedDate": "2014-03-28T04:16:02.51-07:00",
      "Id": 139883
    }
  ]
}