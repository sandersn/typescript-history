[
  {
    "Id": "921615",
    "ThreadId": "397975",
    "Html": "\r\n<p>Hello, I am trying to describe the Knockout observableArray and I am trying to figure out how to describe its remove function.. the Interface wont let me overload even though the two remove(s) have different signitures..</p>\r\n<p>here is as far as I have gotten with this interface.</p>\r\n<p>interface observableArrayAny {<br>\r\n&nbsp;&nbsp;&nbsp; (newValue: any[]): observableArrayAny;<br>\r\n&nbsp;&nbsp;&nbsp; (): any[];<br>\r\n&nbsp;&nbsp;&nbsp; subscribe: (newValue: any[]) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; indexOf: (search: any) =&gt; any;<br>\r\n&nbsp;&nbsp;&nbsp; slice: (start: number, count: number) =&gt; any[];<br>\r\n&nbsp;&nbsp;&nbsp; push: (item: any) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; pop: () =&gt; any;<br>\r\n&nbsp;&nbsp;&nbsp; unshift: (item: any) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; shift: () =&gt; any;<br>\r\n&nbsp;&nbsp;&nbsp; reverse: () =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; sort: (predicate? : (left: any, right: any) =&gt; number) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; splice: (start: number, count: number) =&gt; any[];<br>\r\n&nbsp;&nbsp;&nbsp; remove: (predicate: (item: any) =&gt; bool) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; remove: (item : any) =&gt; void;<br>\r\n&nbsp;&nbsp;&nbsp; removeAll: (items?: any[]) =&gt; void;<br>\r\n}</p>\r\n<p>I get red-squigglies at remove: (item : any) =&gt; void;</p>\r\n<p>Thanks</p>\r\n<p>Josh</p>\r\n",
    "PostedDate": "2012-10-03T18:59:26.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921616",
    "ThreadId": "397975",
    "Html": "<p>Never mind! I am setting them up wrong.. (looked back at the jquery example and it all became clear :-P...&nbsp; it should look like</p>\r\n<p>interface observableArrayAny {<br />&nbsp;&nbsp;&nbsp; (newValue: any[]): observableArrayAny;<br />&nbsp;&nbsp;&nbsp; (): any[];<br />&nbsp;&nbsp;&nbsp; subscribe(newValue: any[]) : void;<br />&nbsp;&nbsp;&nbsp; indexOf(search: any) :any;<br />&nbsp;&nbsp;&nbsp; slice(start: number, count: number) : any[];<br />&nbsp;&nbsp;&nbsp; push(item: any) : void;<br />&nbsp;&nbsp;&nbsp; pop() : any;<br />&nbsp;&nbsp;&nbsp; unshift(item: any) : void;<br />&nbsp;&nbsp;&nbsp; shift() : any;<br />&nbsp;&nbsp;&nbsp; reverse() : void;<br />&nbsp;&nbsp;&nbsp; sort(predicate? : (left: any, right: any) =&gt; number) : void;<br />&nbsp;&nbsp;&nbsp; splice(start: number, count: number) : any[];<br />&nbsp;&nbsp;&nbsp; remove(predicate: (item: any) =&gt; bool) : void;<br />&nbsp;&nbsp;&nbsp; remove(item : any) : void;<br />&nbsp;&nbsp;&nbsp; removeAll(items?: any[]) : void;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-10-03T19:04:29.767-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921860",
    "ThreadId": "397975",
    "Html": "<p>Hi,</p>\r\n<p>Have ever try to implement your interface ? You get the same error.</p>",
    "PostedDate": "2012-10-04T05:58:11.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921864",
    "ThreadId": "397975",
    "Html": "<p>My original issue was that I was describing functions as Properties with a method description as there value.. Obviously you can't have two different properties with same name (no one lets you do that)... now Technically in Javascript, technically thats what a function is (a property with a method attached to it)... However, because we are describing overloads, we have to describe them as methods.. I don't get the error with the second interface because its properly describing overloading to the Typescript compiler.</p>\r\n<p>&nbsp;</p>\r\n<p>Josh</p>",
    "PostedDate": "2012-10-04T06:07:48.7-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]