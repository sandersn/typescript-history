{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "These have all been fixed in the develop branch. Thanks!",
    "ClosedDate": "2013-08-21T12:35:25.277-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "These are bugs in Playground, guess they are all known, but still.\r\n\r\n1. No error if I declare properties with names that have the same string representation, but in different forms (identifier, string literal, number literal).\r\n2. Looks like properties named with string literals are simply ignored. They do not type index expressions (like ins[\"2\"]) and cause errors in reference expressions (like ins.k).\r\n3. Intellisense is broken after index expressions (note that this issue is separate from a second one, because it doesn't work even after correctly typed properties).\r\n```\r\nclass A {\r\n\ta: { prop_a };\r\n\t\"a\": { prop_a_str }; // no error\r\n\t1: { prop_1 };\r\n\t\"1\": { prop_1_str }; // no error\r\n\t\"2\": { prop_2_str }; \r\n\t\"k\": { prop_k_str }; \r\n}\r\n\r\nvar ins = new A();\r\nvar n2 = ins[2]; // tooltip on n2 says \"any\"\r\nvar n2_str = ins[\"2\"]; // also \"any\"\r\nvar k = ins.k; // Error. Why?\r\nvar n1 = ins[1]; // This example gives a correct tooltip { prop_1: any; }\r\nins[1]. // Still Intellisense gives \"no suggestions\" here\r\n```",
    "LastUpdatedDate": "2013-08-21T12:35:25.277-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-21T11:06:15.29-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Bugs with literally named properties",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1543
  },
  "FileAttachments": [],
  "Comments": []
}