[
  {
    "Id": "1211781",
    "ThreadId": "533422",
    "Html": "Just wondering, why no contextual typing occurs (according to spec 4.19) in the following situations:<br />\n<ol>\n<li>\nIn conditional operator (?:) third operand could be contextually typed by second operand.<br />\n</li>\n<li>\nIn arrow function expressions in form\r<br />\n  ArrowFormalParameters =&gt; AssignmentExpression\r<br />\nAssignmentExpression could be contextually typed in the same way as return expressions.<br />\n</li>\n</ol>\nI'm sure there is some logical explanation, but it evades me :)<br />\n",
    "PostedDate": "2014-02-21T07:37:01.777-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1211858",
    "ThreadId": "533422",
    "Html": "Regarding 1: It's not really clear that either of the second or third operand provide context for the other. For example, you should be able to reverse the condition and the two operands and get exactly the same behavior.<br />\n<br />\nRegarding 2: The AssignmentExpression <em>is</em> contextually typed the same way as a return expression. The spec states (in 4.9.2) that an arrow function expression with an expression body is exactly equivalent to an arrow function expression with a single return statement, and this extends to contextual typing as well.<br />\n",
    "PostedDate": "2014-02-21T11:33:48.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1211859",
    "ThreadId": "533422",
    "Html": "Thanks!<br />\n",
    "PostedDate": "2014-02-21T11:37:56.833-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]