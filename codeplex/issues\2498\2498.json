{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "See work item jamesnw linked",
    "ClosedDate": "2014-05-09T14:05:29.947-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "In FP languages one can create a type alias for an ugly looking type.\r\nIn TypeScript it is not possible. As an alternative in TypeScript one can create a derived nice looking interface by inheriting from an ugly one. However this doesn't work in covariance/contravariance situations. So would you please consider adding type aliases. Thank you!\r\n\r\n\r\n",
    "LastUpdatedDate": "2014-05-09T14:05:29.947-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-09T07:08:32.713-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "Feature request: Type aliases",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2498
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "What is being asked is a C-style typedef,\n\nhttp://www.tutorialspoint.com/cprogramming/c_typedef.htm\n\nThis can make reading code difficult.",
      "PostedDate": "2014-05-09T08:56:05.233-07:00",
      "Id": 146064
    },
    {
      "Message": "You mean like this already existing request: https://typescript.codeplex.com/workitem/119\n;)",
      "PostedDate": "2014-05-09T09:21:39.37-07:00",
      "Id": 146068
    }
  ]
}