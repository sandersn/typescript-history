[
  {
    "Id": "1256849",
    "ThreadId": "548843",
    "Html": "At the moment I need to do something like this.<br />\n<pre><code>export var Routes: {\n        ControllerPattern: string;\n        ActionPattern: string;\n        IdPattern: string;\n        QueryPattern: string\n    } = {\n        ControllerPattern: &quot;{controller}&quot;,\n        ActionPattern: &quot;{action}&quot;,\n        IdPattern: &quot;{id}&quot;,\n        QueryPattern: &quot;{query}&quot;\n    };</code></pre>\n\nIt can get quite tedious so I thought that having something like the following code would be nice.<br />\n<pre><code>export var Routes = {\n    ControllerPattern: string = &quot;{controller}&quot;,\n    ActionPattern: string = &quot;{action}&quot;,\n    IdPattern: string = &quot;{id}&quot;,\n    QueryPattern: string = &quot;{query}&quot;\n};</code></pre>\n\nI'm not sure whether it makes sense but it's a lot less verbose and clear.\r<br />\n<br />\nP.S. I'm pretty new to TypeScript so if there's something similar I'd be glad to know. :)<br />\n",
    "PostedDate": "2014-06-16T14:36:46.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1256860",
    "ThreadId": "548843",
    "Html": "The type of the variable is inferred from its initializer, so you can simply write:<br />\n<pre><code>export var Routes = {\n    ControllerPattern = &quot;{controller}&quot;,\n    ActionPattern = &quot;{action}&quot;,\n    IdPattern = &quot;{id}&quot;,\n    QueryPattern = &quot;{query}&quot;\n};</code></pre>\n\n",
    "PostedDate": "2014-06-16T15:23:43.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-06-16T16:36:37.773-07:00"
  },
  {
    "Id": "1256868",
    "ThreadId": "548843",
    "Html": "Yeah I did that exactly but then TSLint suggested to add explicit typedef, that's the reason I thought about it. :)<br />\n",
    "PostedDate": "2014-06-16T15:46:51.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1256870",
    "ThreadId": "548843",
    "Html": "I don't think that's a good rule to have. TypeScript is designed around the fact that types can be inferred in most places; making you add a type annotation to a literal is just making you write the same thing twice (most of the time).<br />\n",
    "PostedDate": "2014-06-16T15:49:16.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-06-16T16:36:19.707-07:00"
  },
  {
    "Id": "1256875",
    "ThreadId": "548843",
    "Html": "Yeah, true, so would you say it's something that should be fixed within TSLint?<br />\n",
    "PostedDate": "2014-06-16T15:57:48.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]