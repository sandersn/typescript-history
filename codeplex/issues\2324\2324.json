{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We discussed this for a *very* long time and decided to not address this for 1.0 due to substantial complexity problems. If you're actually using static getters with side effects in a way that matters, you can shim in your own __extends function (this is why we emit `__extends = __extends || ...`) that handles it the way you'd like to.",
    "ClosedDate": "2014-03-17T08:14:38.333-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This looks like a major bug to me...\r\n\r\n```\r\nclass A {\r\n\tstatic get x() {\r\n\t\talert(\"Hello\");\r\n\t}\r\n}\r\n\r\nclass B extends A {\r\n\t\r\n}\r\n```\r\n\r\nThe `__extends` function (`for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];`) should use `Object.getOwnPropertyDescriptor` / `Object.defineProperty` instead.\r\n\r\nSome JS engines have slow implementations of getOwnPropertyDescriptor/defineProperty so this may increase startup time.",
    "LastUpdatedDate": "2014-03-17T08:14:38.333-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-16T14:48:08.823-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Postponed"
    },
    "Summary": "Should not execute static getters when extending classes.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 2324
  },
  "FileAttachments": [],
  "Comments": []
}