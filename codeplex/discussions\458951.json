[
  {
    "Id": "1098643",
    "ThreadId": "458951",
    "Html": "In many JavaScript libraries (jQuery for example) a callback can be passed into the library, and when it's invoked the library will bind <code>this</code> to some object.  For example, when firing a &quot;click&quot; event, jQuery binds <code>this</code> to the DOM element that was clicked.<br />\n<br />\nHas the TypeScript team considered ways of specifying type information for <code>this</code> in such cases?<br />\n<br />\nMy idea is to allow <code>this</code> to appear as an argument in the function's signature.  When present, TypeScript will use the type annotation to provide stronger typing.  It will not consider it as an extra argument.<br />\n<br />\nContinuing the jQuery example:<br />\n<pre><code>$(&quot;div&quot;).on(&quot;click&quot;, function(this: Element) {\n    var numChildren = this.children.length; // numChildren is automatically typed as a number\n    console.log(&quot;This &lt;div&gt; has &quot; + numChildren + &quot; children.&quot;);\n    this.foobar(); // &lt;-- TypeScript's compiler can catch this as a type error\n});\n</code></pre>\n\nThe anonymous function is considered to have 0 arguments and the value of <code>this</code> is of type <code>Element</code>.  Normally, this type information would be specified in a library's .d.ts file so that consumers of the API don't need to include it in their function signature.<br />\n<pre><code>// Original excerpt from jquery.d.ts\non(events: string, selector?: any, handler?: (eventObject: JQueryEventObject) =&gt; any): JQuery;\n// Excerpt modified to include type information for this\non(events: string, selector?: any, handler?: (this: Element, eventObject: JQueryEventObject) =&gt; any): JQuery;\n</code></pre>\n\nHas this been considered?  Is it a bad idea?<br />\n",
    "PostedDate": "2013-09-24T10:30:44.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1098710",
    "ThreadId": "458951",
    "Html": "I think this issue <a href=\"https://typescript.codeplex.com/workitem/507\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/507</a> captures the things you're requesting. Feel free to upvote it further, definitely a reasonable thing to want.<br />\n",
    "PostedDate": "2013-09-24T11:50:58.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1098720",
    "ThreadId": "458951",
    "Html": "Oh wow, yeah that looks like it's exactly the same thing.  Thanks!<br />\n",
    "PostedDate": "2013-09-24T12:04:33.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]