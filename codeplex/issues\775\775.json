{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Can you update with a code snippet showing how to reproduce the behavior? We can take a look from there. Thanks!",
    "ClosedDate": "2013-03-04T17:01:40.23-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I use the language services a lot for an IDE I'm building and since 0.8.2 I have noticed the following behavior for a project with many external modules (node style modules).\r\n\r\nAfter I added all the TypeScript files to the environment (similar to the TypeScript harness class) the compilation goes fine. But as soon as I update 1 single script, the compilation fails because the modules are no longer resolved. For example the following import suddenly gives the \"does not exist in current scope\" error:\r\n\r\n    import dom = module(\"../html5/dom\");\r\n\r\nWhile before I updated the script, everything compiled ok and I didn't get any error. And these errors occur in all files, not just the one I updated.\r\n\r\nThe only modules that are still being resolved are the ones in declaration files, like: \r\n\r\n     import path =module(\"path\");\r\n\r\n\r\n",
    "LastUpdatedDate": "2013-08-13T09:52:06.893-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-02T08:05:41.273-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "language service compiler ",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 775
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Due the type of issue, it is not easy to create a test case that reproduces it. If required I can write down the steps how to reproduce it in my editor (CATS), but I guess than it would be difficult for you guys to investigate \nit.\n\nI was more hoping that it would ring a bell and could be easily fixed. If this is not the case, I would say I can wait for 0.9.x which seems to overhaul the compiler and check if the issue is solved in that version.",
      "PostedDate": "2013-03-06T00:54:45.037-08:00",
      "Id": 92391
    }
  ]
}