{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:42.817-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi,\r\n\r\nI found that on setting array item with defined type, you can set anything. Compiler not throws error, and compile successfully.\r\n\r\n``` TS\r\nexport class BasicModel\r\n{\r\n\tpublic validation: { [key: string]: bool; } ;\r\n\t\r\n\tconstructor() \r\n\t{\r\n\t\tthis.validation = \r\n\t\t{\r\n            \"asdasd\" :\"|\", // here compiler shall throw error. Value is not bool\r\n\t\t\tfirstName: // here also compiler shall throw error.\r\n                { \r\n                     ss: { something: \"\"} \r\n                } \r\n\t\t};\t\r\n    }\r\n}\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 0.9.0",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-08T02:47:22.483-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Missing type checking on array item return type",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 3,
    "Id": 795
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The behavior described here is expected given the current TypeScript language rules.  But there are a set of related scenarios that do suggest more closely aligning indexers with properties on an object.  Keeping this suggestion active in 0.9 to consider.",
      "PostedDate": "2013-03-10T11:37:31.45-07:00",
      "Id": 92892
    }
  ]
}