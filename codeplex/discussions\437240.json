[
  {
    "Id": "1017891",
    "ThreadId": "437240",
    "Html": "I have seen several questions about generating TypeScript interfaces from C# classes in this  forum. Because I need such tool as well, I wrote an utility that generates TS interfaces from .NET assemblies in Visual Studio (using T4 template). It supports most of the TypeScript features including modules, collections and inheritance.\r<br />\n<br />\n<strong>Example</strong><br />\n<pre><code>namespace Demo {\n    public class Person {\n        public string Name { get; set; }\n        public List&lt;address&gt; Addresses { get; set; }\n    }\n  \n    public class Employee : Person {\n        public decimal Salary { get; set; }\n    }\n  \n    public class Address {\n        public string Street { get; set; }\n     \n    }\n}</code></pre>\n\n<pre><code>module Demo {\n    interface Person {\n        Name: string;\n        Addresses: Address[];\n    }\n  \n    interface Employee extends Person {\n        Salary: number;\n    }\n  \n    interface Address {\n        Street: string;\n    }\n}</code></pre>\n\nThe utility is available as <a href=\"https://nuget.org/packages/TypeLite\" rel=\"nofollow\">NuGet package</a>, documentation and tutorials can be found on the project webpage <a href=\"http://type.litesolutions.net/\" rel=\"nofollow\">http://type.litesolutions.net/</a><br />\n",
    "PostedDate": "2013-03-19T13:25:06.27-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1018174",
    "ThreadId": "437240",
    "Html": "Nice work, I was planning on doing something like this myself too already. :) I probably still will, but with a different approach.<br />\n<br />\nI just think T4 is a bad option for this. You either always have to run it manually when changing something (which people will definitely forget!).<br />\n",
    "PostedDate": "2013-03-20T04:34:15.32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1018216",
    "ThreadId": "437240",
    "Html": "I agree, this isn't the ideal solution. I'm thinking of a tighter integration with build process - perhaps a MsBuild task, that would generate TypeScript interfaces during the build process. Does anybody have a better idea? (I just don't want to use VS Extensions, because they aren't working in Express editions of Visual Studio.)<br />\n",
    "PostedDate": "2013-03-20T05:46:09.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1018249",
    "ThreadId": "437240",
    "Html": "I am working on a solution for such problems. Next weekend I can tell you more about it by releasing a first version, if you can wait this long. :-)<br />\n",
    "PostedDate": "2013-03-20T06:48:05.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]