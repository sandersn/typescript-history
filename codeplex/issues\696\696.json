{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in develop branch",
    "ClosedDate": "2013-06-13T11:19:21.433-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": " Thanks cretz, I added <TypeScriptModuleKind>AMD</TypeScriptModuleKind> as you suggested.  This causes visual studio to output the correct AMD modules when I build the project, but still outputs non-amd javascript when it compiles on save.   Looks like it may be a bug in the compile on save feature. ",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-04T10:07:48.603-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Compile on Save and Export AMD Modules",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 696
  },
  "FileAttachments": [
    {
      "FileId": 624103,
      "FileName": "TypeScriptHTMLApp1.zip",
      "DownloadUrl": ".\\624103"
    }
  ],
  "Comments": [
    {
      "Message": "Taken from: http://typescript.codeplex.com/discussions/431176",
      "PostedDate": "2013-02-04T13:01:38.957-08:00",
      "Id": 88221
    },
    {
      "Message": "I am seeing the same issue. I've attached a very simple project which exhibits the problem for me under VS2012.\r\n\r\nI've changed the project file from the defaults to:\r\n\r\n```\r\n<PropertyGroup>\r\n    <TypeScriptTarget>ES3</TypeScriptTarget>\r\n    <TypeScriptIncludeComments>true</TypeScriptIncludeComments>\r\n    <TypeScriptSourceMap>true</TypeScriptSourceMap>\r\n    <TypeScriptModuleKind>amd</TypeScriptModuleKind>\r\n</PropertyGroup>\r\n```\r\n\r\nIf you load the project and build the solution then the generated file1.js will correctly be output as a require.js compatible module:\r\n\r\n```\r\ndefine([\"require\", \"exports\"], function(require, exports) {\r\n    var Point = (function () {\r\n        ...\r\n```\r\n\r\nIf you edit file1.ts to (for example) change the name of the 'p' variable and save it then the js file will be regenerated, but it will no longer be an amd module:\r\n\r\n```\r\nvar Point = (function () {\r\n```\r\n\r\nChanging other project settings such as source map generation and including comments work as expected across both full solution builds and single file saves.",
      "PostedDate": "2013-02-15T13:26:33.643-08:00",
      "Id": 90509
    },
    {
      "Message": "i am still seeing this issue with 0.8.3.1, please reopen",
      "PostedDate": "2013-04-25T21:24:38.507-07:00",
      "Id": 98555
    },
    {
      "Message": "I cannot reproduce this issue. \n\nThe Compile on Save options specified in the project file only work when inside the context of a project. If you open the .ts file outside that project, it will use the default options.\n\r\n\r** Closed by paulb 02/04/2013 1:29PM",
      "PostedDate": "2013-02-04T13:29:30.733-08:00",
      "Id": 98620
    },
    {
      "Message": "Taking another look.",
      "PostedDate": "2013-04-26T11:41:06.02-07:00",
      "Id": 98621
    },
    {
      "Message": "Marked as active.",
      "PostedDate": "2013-04-26T12:06:46.147-07:00",
      "Id": 98626
    },
    {
      "Message": "I can confirm this error, see also the Stackoverflow Entry http://stackoverflow.com/questions/14899801/typescript-0-8-2-compile-amd-modules-on-save which led me here",
      "PostedDate": "2013-05-06T07:46:26.66-07:00",
      "Id": 99479
    }
  ]
}