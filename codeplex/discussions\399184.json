[
  {
    "Id": "926029",
    "ThreadId": "399184",
    "Html": "\r\n<p>See:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">function</span> doSomething(name:string, age?:number, height?:number) {\n}\n\ndoSomething(<span style=\"color:#a31515\">&quot;James&quot;</span>, height:5);\n\n<span style=\"color:green\">// Generated code:</span>\n\ndoSomething(<span style=\"color:#a31515\">&quot;James&quot;</span>, undefined, 5);\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-12T14:57:18.38-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "926062",
    "ThreadId": "399184",
    "Html": "\r\n<p>It's not quite the same, but object literals give similar results and are already supported in TypeScript and Javascript.</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">function</span> doSomething(name: string, otherData? : { age?:number; height?:number}) {\n\n}\n\ndoSomething(&quot;James&quot;, { height: 5 });</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-12T19:47:51.81-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "926075",
    "ThreadId": "399184",
    "Html": "<blockquote style=\"border: solid .1em #ccc; font-style: italic; margin: .25em 1em 0 1em; padding: 0 .25em 0 .25em;\"><strong>Alexjs wrote:</strong><br />\r\n<p>It's not quite the same, but object literals give similar results and are already supported in TypeScript and Javascript.</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">function</span> doSomething(name: string, otherData? : { age?:number; height?:number}) {\r\n\r\n}\r\n\r\ndoSomething(\"James\", { height: 5 });</pre>\r\n</div>\r\n</blockquote>\r\n<p>Indeed &ndash; I have used this syntax in CoffeeScript too, but as you said, it's not quite the same. &nbsp;Having first-class support would encourage it's use as a common pattern. &nbsp;It makes code far more readable, particularly with booleans. &nbsp;I use it extensively in C#, regardless of whether parameters are optional or not.</p>\r\n<p>In the following example, if you didn't know the API you would likely have a difficulty understanding the following code without looking at documentation:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>deleteDirectory(<span style=\"color: #a31515;\">\"/this/path\"</span>, <span style=\"color: blue;\">true</span>, <span style=\"color: blue;\">false</span>);\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>With named parameters you can answer it comfortably:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>deleteDirectory(<span style=\"color: #a31515;\">\"/this/path\"</span>, recursive:<span style=\"color: blue;\">true</span>, throwExceptions:<span style=\"color: blue;\">false</span>);\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>I would love to see this added to the spec.</p>\r\n<p>Cheers,</p>\r\n<p>Stu</p>",
    "PostedDate": "2012-10-12T21:16:44.343-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "926771",
    "ThreadId": "399184",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/256\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2012-10-15T08:22:19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]