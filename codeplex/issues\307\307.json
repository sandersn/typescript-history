{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is the same syntax as in plain JavaScript, which we need to be compatible with.",
    "ClosedDate": "2012-10-22T14:31:21.99-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Get and Set clauses are written separately, and compiler does not check that if we have a clause for property getter and then write a clause for property setter that their names must be identical. If we mistype property name for setter clause the compiler generates new only writable property.\r\n\r\nExample:\r\n\r\nget testProp(){\r\n\t\treturn this.greeting;\r\n\t}\r\nset testPropBug(v){\r\n\t\tthis.greeting = v;\r\n\t}\r\n\r\nFor this property definition the compiler will generate two properties, although it was a mistyping in the set property name.\r\n\r\nExpected:\r\n  If property name in the setter is mistyped then the compiler signals about it with an error.\r\n\r\nSolution:\r\nTo solve this problem property get and set clauses must be scoped to one property name (like it was done in C# or in any other language). There must be no typing repeatedly the same property name.\r\n\r\nP.S. - aside from this, the refactoring in VS2012 typescript designer for a code which uses property name references is not working.  If we rename the property, all code that uses that property name is not renamed.",
    "LastUpdatedDate": "2012-10-22T14:31:21.99-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-21T23:48:05.433-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Get and Set properties syntax is bug prone",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 307
  },
  "FileAttachments": [],
  "Comments": []
}