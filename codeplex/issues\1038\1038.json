{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is the same issue as https://typescript.codeplex.com/workitem/1029 .  We're looking into it.",
    "ClosedDate": "2013-05-17T08:08:27.053-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "* use the latest from develop (7682fa4)\r\n* compile the snippet below\r\n\r\n```\r\nimport foo = module('super');\r\n\r\nfunction bar(f) {\r\n\treturn true;\r\n}\r\n\r\nconsole.log(bar(foo));\r\n```\r\n\r\n* see that the generated code misses the import and will cause an error\r\n\r\n```\r\n\r\n\r\nfunction bar(f) {\r\n    return true;\r\n}\r\n\r\nconsole.log(bar(foo));\r\n\r\n\r\n```\r\n\r\n",
    "LastUpdatedDate": "2013-05-17T08:08:27.053-07:00",
    "PlannedForRelease": "TypeScript 0.9.0 Alpha and Beta",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "High",
      "Severity": 150,
      "Id": 3
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-14T08:33:18.88-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "module imports get lost",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1038
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I think usually this occurs when there's a problem in the module chain. Try checking your imported files and the files that they import for compilation errors.",
      "PostedDate": "2013-05-14T19:09:16.317-07:00",
      "Id": 100217
    },
    {
      "Message": "Also, I think importing a module that imports the current module also breaks it:\nFile A:\n```\nimport fileB = module(\"fileB\");\n```\n\nFile B:\n```\nimport fileA = module(\"fileA\");\n```",
      "PostedDate": "2013-05-14T19:10:42.243-07:00",
      "Id": 100218
    },
    {
      "Message": "This isn't the case in the sample I have posted above. The module ```super``` reads like this. No cyclic dependencies and also no compile issues.\n\n```\nexport interface Super {\n\t\n}\n\nexport var Events = {\n\tOnBeforeX: 'onBefore'\n}\n```",
      "PostedDate": "2013-05-14T23:49:05.107-07:00",
      "Id": 100226
    },
    {
      "Message": "Sorry, I just oopsed.\nFrom what I've seen, the typescript compiler optimises out imports that are not used (including imports where only interfaces are used). It's quite annoying, but by adding an empty function or variable that's exported to the `super` module and then calling it in the child module should fix it.\n\nI believe this is to prevent the program importing many unused files (that declare interfaces) at run time.\n\nIt would however be nice if you could specify `//@always-import` above or something to be able to turn this feature off on a case-by-case basis.",
      "PostedDate": "2013-05-16T15:38:10.853-07:00",
      "Id": 100401
    },
    {
      "Message": "I understand, but this isn't really an option for us because we use a particular pattern that exposes this bug in many places. ",
      "PostedDate": "2013-05-16T23:32:05.783-07:00",
      "Id": 100426
    }
  ]
}