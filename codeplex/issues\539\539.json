{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.533-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "0.8.1.1 no longer crashes Visual Studio when the debugger tries to break on an error. However, because my js files have the cache-busting version added to the url querystring, it won't break into the ts file. But it will break into the js file. When I remove\n\nrequire.config({\n    urlArgs: \"version=\" + opportunityManagementVersion\n});\n\nfrom my main.ts file, then it will break into the ts source files. But ... as soon as I make changes to my ts files, the browser continues to use the old cached version of the js file. I need to empty the browser cache before the browser, or more specifically\n require.js, will load the latest version of the js file. CTRL+F5 in IE does not work. Perhaps for debugging I would remove the cache busting version from the url querystring for the VS debugger to break into the ts source files, if only there was an automatic\n way of making sure the browser / require.js loads the latest version of my js files. Note that I will want to add this cache-busting version in the production release of my app, to make sure users always use the latest version of the js files after an upgrade\n of my app. I made sure my cache busting version is not some client-side generated timestamp, but is the last modified time of the app assembly on the server.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-12-06T14:21:30.563-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Cache-busting breaks debugging in VS",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 539
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I reported this issue 6 months ago, and having received only 2 votes, not many people must be having this issue. I should add that I am not required to add a cache-busting querystring to require.js to load my javascript files when developing on Windows 8 using IE10. On Windows 8 when I configure IE10 to check for newer versions of stored pages every time I visit the webpage (under internet options, browser history settings), require.js on IE10 always loads the latest version of the javascript files, and I am therefore not required to add a cache-busting querystring to require.js to load my javascript files, and I can therefore debug my TypeScript files directly. \n\nHowever, I have been doing most of my TypeScript development in SharePoint 2010 using IE10 on Windows Server 2008 R2. Even when I configure IE10 on Windows Server 2008 R2 to check for newer versions of stored pages every time I visit the webpage (under internet options, browser history settings), require.js on IE10 insists on loading old cached versions of my javascript files. I am therefore required to add this cache-busting querystring to require.js to make sure require.js loads the latest version of my javascript files. But as a consequence I can then no longer debug my TypeScript files and have to debug the javascript files instead. \n\nSo, am I doing something wrong? It works with IE10 on Windows 8, but not with IE10 on Windows Server 2008 R2. Or have I not configured IE10 correctly on Windows Server 2008 R2? With only two votes I suppose this issue is not high priority, but I would like to know is it a difficult thing to fix to allow VS to debug the TypeScript when the JavaScript has a cache-busting querystring? ",
      "PostedDate": "2013-06-23T07:33:26.903-07:00",
      "Id": 103879
    },
    {
      "Message": "I am facing this issue but it is an IE issue rather than typescript as it works fine in chrome. so we should probably report a bug there",
      "PostedDate": "2013-09-29T04:33:09.473-07:00",
      "Id": 115938
    }
  ]
}