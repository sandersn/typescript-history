[
  {
    "Id": "920176",
    "ThreadId": "397589",
    "Html": "\r\n<p>It seems</p>\r\n<p><strong>interface T { a: string }</strong></p>\r\n<p>doesn't compile because there lacks a comma at the end of the line. JS allows such omissions in many other place so it would be great if I could get the same here?</p>\r\n<p>In fact, I would not force semicolons at all: if I use a linebreak, this is a sufficient sign I declare another field. This just required a [noLineBreak] token in your parser, I think.</p>\r\n",
    "PostedDate": "2012-10-01T12:51:41.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921649",
    "ThreadId": "397589",
    "Html": "<p>Thanks for the suggestion.&nbsp; We are discussing this internally as a possible allowance, as it is quite a common mistake (I still do it frequently myself).&nbsp; Thanks for raising!</p>",
    "PostedDate": "2012-10-03T21:50:23.103-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921721",
    "ThreadId": "397589",
    "Html": "<p>Without dredging up The Great Semicolon Debate of Spring of '12, is there any practical reason why ASI wouldn't work in TypeScript? Or is it a purely stylistic decision to make it look more like C#? I'm okay with either (and personally, I always use semicolons because I'm so used to them).</p>\r\n<p>&nbsp;</p>\r\n<p>Actually, the case of interfaces is interesting, since without the semicolon, as in @FremyCompany's example, the block looks like an object literal.</p>",
    "PostedDate": "2012-10-04T01:05:38.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921792",
    "ThreadId": "397589",
    "Html": "<p>This is actually just a bug. The spec already permits the last semicolon to be omitted.</p>",
    "PostedDate": "2012-10-04T03:57:25.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]