{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-12-31T09:00:57.28-08:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "In lib.d.ts under the definition of Array<T>, the following functions are defined:\r\n\r\nevery(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\r\nsome(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\r\nforEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\r\nmap<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\r\nfilter(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): T[];\r\n\r\nEach function's callback definition has only one truly required parameter, but in lib.d.ts the subsequent parameters are defined as non-optional, meaning code such as myArray.map(a => a.foo) will not compile, even though the JavaScript equivalent is perfectly valid.\r\n\r\nI haven't been right through lib.d.ts, but it might be worth checking if this issue occurs with other function definitions as well.",
    "LastUpdatedDate": "2013-12-31T09:00:57.28-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-12-30T23:27:47.257-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "lib.d.ts - incorrect function definitions",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2055
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I might be wrong here but it does compile right? Or am I not understanding the issue?\n[playground](http://www.typescriptlang.org/Playground/#src=var%20test%3Astring%5B%5D%20%3D%20%5B%22ASDdf%22%5D%3B%0D%0A%0D%0Atest%20%3D%20test.map(a%3D%3E%20a.toLowerCase())%0D%0Aconsole.log(test)%3B)",
      "PostedDate": "2013-12-30T23:33:46.953-08:00",
      "Id": 128747
    },
    {
      "Message": "Gah... I experience these issues, stash them away in my brain and then report them when I have time, only to discover that I can't reproduce them after reporting them. Closing for now until I can reproduce it again.",
      "PostedDate": "2013-12-31T01:48:01.747-08:00",
      "Id": 128751
    },
    {
      "Message": "Hmm, I assumed I could close the issue myself. Please close it and accept my apologies for wasting your time.",
      "PostedDate": "2013-12-31T01:49:26.673-08:00",
      "Id": 128752
    },
    {
      "Message": "No problem.  I'll close this.\n\nIn callbacks you can always leave off parameters in the function you provide, and shouldn't mark them as optional.  See this more detailed explanation from Anders: https://typescript.codeplex.com/discussions/428458 ",
      "PostedDate": "2013-12-31T09:00:52.833-08:00",
      "Id": 128773
    }
  ]
}