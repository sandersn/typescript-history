{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Yeah, by design here, we have to permit legal JavaScript like this.",
    "ClosedDate": "2014-04-15T19:09:47.197-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "TypeScript compiler does not complain on this. I think it should, in both cases:\r\n\r\n```typescript\r\nclass A {\r\n\tmethod() {\r\n\t\tname: 'Ben'\r\n\t}\r\n\t\r\n\tmethod2 = () => {\r\n\t\tname: 'Rob'\r\n\t}\r\n}\r\n```\r\n",
    "LastUpdatedDate": "2014-04-15T19:09:47.197-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-14T18:43:24.987-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Should not accept object literal for method body",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2439
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "That is valid JavaScript.  Try running this in a console:\n\n```\nvar i = 0;\nblock1: { block2: { console.log(i++); break block1; } console.log(i++); }\n```\nMany people don't realize that JavaScript supports labels. ;)",
      "PostedDate": "2014-04-14T20:13:11.09-07:00",
      "Id": 141814
    },
    {
      "Message": "Your code won't run. I get: `undefined`",
      "PostedDate": "2014-04-15T11:35:51.997-07:00",
      "Id": 141976
    },
    {
      "Message": "You're right. I noticed if adding multiple key/values separated by commas as in an object literal then compiler produces errors.\r\n\r\n```typescript\r\nclass A {\r\n    method() {\r\n        id: 1,  // Error: ';' expected.\r\n        name: 'Ben'\r\n    }\r\n    \r\n    method2 = () => {\r\n        id: 2, // Error: ';' expected.\r\n        name: 'Rob'\r\n    }\r\n}\r\n```",
      "PostedDate": "2014-04-15T11:43:08.047-07:00",
      "Id": 141980
    },
    {
      "Message": "@omidkrad It does work - you will get 'undefined' AND the log will output \"0\".",
      "PostedDate": "2014-04-15T13:39:29.757-07:00",
      "Id": 142001
    },
    {
      "Message": "More details:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label\nhttp://www.w3schools.com/js/js_break.asp\n",
      "PostedDate": "2014-04-15T13:41:59.22-07:00",
      "Id": 142004
    }
  ]
}