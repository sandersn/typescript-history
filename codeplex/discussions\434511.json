[
  {
    "Id": "1006798",
    "ThreadId": "434511",
    "Html": "I found out that some people try to extend e.g. string class and that works fine - see <a href=\"http://stackoverflow.com/questions/13897659/extending-functionality-in-typescript\" rel=\"nofollow\">http://stackoverflow.com/questions/13897659/extending-functionality-in-typescript</a>.\r<br />\n<br />\nBut when I try to extend array prototype like this:<br />\n<pre><code>interface Array {\n    addx() : bool;\n}\n\nArray.prototype.addx = function() { return true; };</code></pre>\n\nthen errors view in VisualStudio reports error at  'function() ...' saying \r<br />\n<br />\nError\t24\tCannot convert '() =&gt; bool' to '{ (): number; (): number; (): number; (): number; (): number; (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }': Call signatures of types '() =&gt; bool' and '{ (): number; (): number; (): number; (): number; (): number; (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }' are incompatible\tc:\\interfaces.ts\t85\t24\tuserPermissions.ts\r<br />\n<br />\n<br />\nError\t22\tCannot convert '() =&gt; bool' to '{ (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }': Call signatures of types '() =&gt; bool' and '{ (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }' are incompatible\tc:\\interfaces.ts\t85\t24\tinviteUser.ts\r<br />\n<br />\nError\t20\tCannot convert '() =&gt; bool' to '{ (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }': Call signatures of types '() =&gt; bool' and '{ (): number; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; (): bool; }' are incompatible\tc:\\interfaces.ts\t85\t24\tapi.ts\r<br />\n<br />\netc.\r<br />\n<br />\nWhen I run tsc compiler, it runs fine.\r<br />\nHow can I avoid the errors in VS error output?<br />\n",
    "PostedDate": "2013-02-26T01:46:08.867-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1007163",
    "ThreadId": "434511",
    "Html": "This is likely due to the fact that Array is treated specially in the 0.8.x series because of the lack of generics. As we add generics to the language, special cases like this (with their limitations) should go away.<br />\n",
    "PostedDate": "2013-02-26T11:38:40.603-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1007504",
    "ThreadId": "434511",
    "Html": "Oh, that's good to hear! When can we expect generics in typescript?<br />\n",
    "PostedDate": "2013-02-27T03:34:55.677-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1007693",
    "ThreadId": "434511",
    "Html": "Indeed.  We're hoping publish a draft of the spec with generics for the community to comment on soon.  Also, our experimentations on generics and speeding up the compiler are also available in the develop-0.9.x branch.  Still early on, but may be worth a look.<br />\n",
    "PostedDate": "2013-02-27T08:39:10.133-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1008894",
    "ThreadId": "434511",
    "Html": "We'll probably post a blog soon talking about the design, but you can grab a sneak peek now at the generics design we're proposing in the draft spec that's in the develop-0.9.x branch's doc folder.<br />\n",
    "PostedDate": "2013-03-01T07:56:32.11-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]