[
  {
    "Id": "996481",
    "ThreadId": "431969",
    "Html": "The definition of Backbone.View in <a href=\"http://typescript.codeplex.com/SourceControl/changeset/view/0c05df1781d6#samples/todomvc/js/todos.ts\" rel=\"nofollow\">todos.ts</a> sample is as follows:<br />\n<pre><code>   export class View {\n       constructor (options? );\n       $(selector: string): any;\n       el: HTMLElement;\n       $el: any;\n       model: Model;\n       remove(): void;\n       delegateEvents: any;\n       make(tagName: string, attrs? , opts? ): View;\n       setElement(element: HTMLElement, delegate?: bool): void;\n       tagName: string;\n       events: any;\n\n       static extend: any;\n   }</code></pre>\n\nmodel is set to be of type Backbone.Model however, in Backbone.js the 'class type' extending Backbone.Model is assigned to the model property and not an instance of Backbone.Model. Backbone will take care of the instantiation of the type. So I guess the correct definition should be something like:<br />\n<pre><code>       model: ()=&gt;Model;</code></pre>\n\nbut that still creates compiler error. How is it possible to define this?<br />\n<pre><code>       model: class A where A extends Backbone.Model; // generics?</code></pre>\n\n",
    "PostedDate": "2013-02-04T20:05:16.19-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996483",
    "ThreadId": "431969",
    "Html": "If it's not supported yet, this is the syntax I would suggest for it:<br />\n<pre><code>       model: &lt;Model&gt;;</code></pre>\n\n",
    "PostedDate": "2013-02-04T20:09:07.027-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996762",
    "ThreadId": "431969",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/699\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2013-02-05T08:26:46.693-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997608",
    "ThreadId": "431969",
    "Html": "Well, the work item was closed but this question is not answered yet and I think it's a common issue that should be addressed in the specifications.<br />\n",
    "PostedDate": "2013-02-06T16:36:47.427-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "997784",
    "ThreadId": "431969",
    "Html": "@omidkrad, Generics look set to be introduced in version 0.9.x. Please <a href=\"http://typescript.codeplex.com/wikipage?title=Roadmap&amp;referringTitle=Home\" rel=\"nofollow\">refer to the roadmap</a>.<br />\n",
    "PostedDate": "2013-02-07T01:35:54.82-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1077483",
    "ThreadId": "431969",
    "Html": "Maybe the solution for this is the new <code>typeof</code> operator?<br />\n<br />\nRelated work item: <a href=\"https://typescript.codeplex.com/workitem/2425\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/2425</a><br />\n",
    "PostedDate": "2013-08-06T16:25:34.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]