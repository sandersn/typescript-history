{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.58-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "As per best practice I'm running JSHint on the generated Javascript and it gives some minor linting errors at the end of the file when I generate an AMD module.\r\n\r\nI highlighted 2 of them below:\r\n\r\n```\r\ndefine([\"require\", \"exports\"], function(require, exports) {\r\n    var MyType= (function () {\r\n        function MyType() {         \r\n                //stuff\r\n        }       \r\n        //class body stuff\r\n        return MyType;\r\n    })();\r\n    exports.MyType= MyType;    <-- [ trailing whitespace ] \r\n})   <-- [ missing semicolon ] \r\n//@ sourceMappingURL=storige.js.map\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-28T08:22:08.513-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "minor JSHint lint in javascript output",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 850
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I noticed another typical lint-trigger: if you extend a class you get the extends snippet. \n\n```\nvar __extends = this.__extends || function (d, b) {\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();       <-- [ 'new' triggers constructor warning ] \n};\n```\nJSHint has a rule about how a constructor should start with a uppercase letter that we'd like to enforce.\n\nIt's not broken feature, but an acceptable name would allow cleaner inter-op and mixing with plain Javascript not generated by TypeScript, while keeping aggressive optioned project linting validity.",
      "PostedDate": "2013-03-28T10:56:49.947-07:00",
      "Id": 94678
    },
    {
      "Message": "Thanks for the report, it would be nice to clean up some of these so JSHint helps you find the more interesting errors in your own code. Marking as active for some investigation.",
      "PostedDate": "2013-03-28T19:36:18.53-07:00",
      "Id": 95226
    },
    {
      "Message": "This is not likely to meet our bug bar in the near time. Changing to a suggestion for Jonathon to track.",
      "PostedDate": "2013-06-03T18:04:50.96-07:00",
      "Id": 102014
    }
  ]
}