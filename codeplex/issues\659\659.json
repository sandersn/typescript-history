{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "'any' *always* means that the type system is effectively not doing any type checking for you. This is why we have the style setting for \"no implicit any\" -- if you want strong typing, you need to not be using 'any' types.",
    "ClosedDate": "2013-01-28T10:23:17.46-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Consider the following:\r\n\r\n```\r\ninterface SomeType {\r\n    Id: string;\r\n}\r\n\r\nclass Container { \r\n    private items: SomeType[];\r\n\r\n    public append(item: any) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    someMethod() {\r\n        alert(this.items[0].Id);\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\nI would expect that the compiler would prevent me from typing the argument of method [append()] as <:any>.\r\n\r\nThe method [push()] accepts <:any>, making the call perfectly legal. Hence no warning (error) from the compiler.\r\n\r\nResult is that the array [items] can get poisoned with elements that are not adhering to the interface [SomeType]. (Took me some time to figure out a bug caused by it)\r\n\r\nThe Intellisense popup in vs2012 showed me that [push()] expects <:SomeType>.\r\nGranted, the compiler and VS-plugin are different products but it can't be that the editor aids are ahead of the compiler :-)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "LastUpdatedDate": "2013-01-28T10:23:17.46-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-01-27T16:57:40.007-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Typesystem to weak?",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 659
  },
  "FileAttachments": [],
  "Comments": []
}