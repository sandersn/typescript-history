{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:11.597-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "(from: https://typescript.codeplex.com/discussions/470775)\r\n\r\nHey.\r\n\r\nI'd like to suggest you guys to use the same \"code formatting/indenting\" engine that is used on javascript, also for typescript editor (the same or something inherited from it). I don't know if you guys are the responsible on embedding the TS in the Visual Studio, but anyway, I think you could forward this, so here are the reasons:\r\n\r\n__Code Indentation__\r\nIn __JS file__, I can format my code as follow:\r\n```\r\n$.get(url, null, null, \"json\").done(function (data)\r\n{\r\n\t//ok\r\n})\r\n.fail(function (err)\r\n{\r\n\t//fail\r\n});\r\n```\r\nAnd, if I press Ctrl+K+D (reformat), the engine respects the way it is formatted.\r\nBut if I reformat the same code above in a __TS file__, the result is:\r\n```\r\n$.get(url, null, null, \"json\").done(function (data)\r\n{\r\n\t//ok\r\n})\r\n\t.fail(function (err)\r\n\t{\r\n\t\t//fail\r\n\t});\r\n\r\n```\r\nIt throws the .fail to right!\r\n\r\n\r\n__Regions collapsing__\r\nI'm used to code with brackets in new lines. The typescript options permits me to set the brackets on new lines. Also, I like to collapse the functions so I can give a quick look if the class face is pretty. But, collapsing + brackes on new lines are behaving a little weird. See:\r\nIn a __JS file__, if I collapse the functions, I got this visual.\r\n\r\n```\r\n    method1() [...]\r\n    method2() [...]\r\n    method3() [...]\r\n```\r\nBeautifull collapsed!\r\n\r\nBut in a __TS file__, the visual is:\r\n```\r\n    method1()\r\n[...]\r\n    method2()\r\n[...]\r\n    method3()\r\n[...]\r\n```\r\n\r\nIt shows the double of lines, and causes the lose of focus, because the method is indented, and the collapsed glyph is always at first column, no matter where the code starts.\r\n\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-25T08:55:47.31-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Visual Studio indenting and regions collapsing",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 12,
    "Id": 1946
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Hey. Thanks for watching the work item.\n\nDon't forget about this situation also, this does not collapse:\n\n    //this does not collapse\n    loadNextPage = () =>\n    {\n        this.loadNextPageWithCallbacks();\n    }\n\n    //neither\n    loadNextPage = () => {\n        this.loadNextPageWithCallbacks();\n    }",
      "PostedDate": "2013-11-26T09:04:24.913-08:00",
      "Id": 124327
    },
    {
      "Message": "+1 for the collapse feature!\n\nWe use json within ts to describe data structure, which works very well together with typescript typechecking: \n\n```\nvar formdescriber:IFormDescriber = {\n    \"name\" : \"Sample form\",\n    \"sections\": [\n        {\n            \"start\": [\n                {\n                    \"name\": {\n                        \"type\": \"text\",\n                        \"label\" : \"Name\"\n                    }\n...\n```\n\nWith the collapse feature we're used to from the js editor the big json structure will get much easier to handle:\n\n```\nvar formdescriber:IFormDescriber = {\n    \"name\" : \"Sample form\",\n    \"sections\": [\n        {\n            \"start\": [\n            ...\n           ],\n            \"describe\": [\n            ...\n           ],\n \n```",
      "PostedDate": "2013-12-21T02:48:51.437-08:00",
      "Id": 128219
    },
    {
      "Message": "Also, if you put your arguments to a function on separate lines the indenting gets weird.\n```\nfunction someFunction(\n    id: number,\n    title: string\n    ) {\n            someOtherFunction(); // typescript forces a double indent here when hitting 'enter' - formatting the document returns it to proper indenting.\n}\n```\n\nIt'd be nice to be able to put the first argument on the same line as the function and have them line up though too:\n\n```\nfunction someFunction(id: number,\n                      title: string) {\n}\n```\n",
      "PostedDate": "2014-01-23T13:35:26.543-08:00",
      "Id": 131366
    }
  ]
}