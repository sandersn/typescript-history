{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2012-10-04T22:21:47.88-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Consider this code:\r\n\r\n\tinterface bar {\r\n\t    horace: number;\r\n\t}\r\n\r\n\tinterface baz {\r\n\t    esplode: (string, number) => bool;\r\n\t}\r\n\r\n\tinterface bazzer extends bar, baz { }\r\n\r\n\tvar foo: bazzer = {\r\n\t    horace: 12,\r\n\t    esplode: function () { }\r\n\t}\r\n\r\n\tvar x = foo.esplode('crackers', 2);\r\n\r\nWhy is foo's implementation of baz.esplode valid? My understanding is that an empty method matches void.\r\n\r\nSee this StackOverflow post: http://stackoverflow.com/questions/12687045/typescript-why-is-this-not-a-type-error/12695198#12695198",
    "LastUpdatedDate": "2012-10-04T22:21:47.88-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-02T20:07:28.427-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Contextually typed functions don't have proper type inference.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 51
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks!  You're right in that this is a bug - I pushed up a fix to the develop branch last night.  \r\n\r\nhttp://typescript.codeplex.com/SourceControl/changeset/4df6fbb87304",
      "PostedDate": "2012-10-03T14:23:53.817-07:00",
      "Id": 78481
    }
  ]
}