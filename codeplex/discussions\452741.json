[
  {
    "Id": "1077932",
    "ThreadId": "452741",
    "Html": "I originally created an <a href=\"https://typescript.codeplex.com/workitem/1440\" rel=\"nofollow\">issue for this</a>, but wanted to add it here also for discussion as a feature suggestion:<br />\n<br />\nThe suggestion is to allow generic parameter overloads like the following:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">declare</span> <span style=\"color:Blue;\">module</span> Backbone {\n    <span style=\"color:Blue;\">class</span> Model{}\n    <span style=\"color:Blue;\">class</span> Events{}\n    <span style=\"color:Blue;\">class</span> ViewOptions&lt;TModel <span style=\"color:Blue;\">extends</span> Model&gt; {}\n    <span style=\"color:Blue;\">class</span> Collection&lt;TModel <span style=\"color:Blue;\">extends</span> Model&gt; {}\n\n    <span style=\"color:Green;\">// Generic parameter overload</span>\n    <span style=\"color:Blue;\">class</span> View <span style=\"color:Blue;\">extends</span> View&lt;Backbone.Model&gt;;\n    <span style=\"color:Blue;\">class</span> View&lt;TModel <span style=\"color:Blue;\">extends</span> Model&gt; <span style=\"color:Blue;\">extends</span> Events { <span style=\"color:Green;\">// Don&#39;t take as duplicate identifier</span>\n        <span style=\"color:Blue;\">constructor</span>(options?: ViewOptions&lt;TModel&gt;);\n        model: TModel;\n        collection: Collection&lt;TModel&gt;;\n    }\n}\n\n<span style=\"color:Green;\">// With Generics Parameter overloads, old non-generic consumer</span>\n<span style=\"color:Green;\">// code works as before and does not need to change.</span>\n<span style=\"color:Blue;\">class</span> MyView <span style=\"color:Blue;\">extends</span> Backbone.View {\n}\n<span style=\"color:Blue;\">var</span> myView = <span style=\"color:Blue;\">new</span> MyView();\n<span style=\"color:Blue;\">var</span> model = myView.model; <span style=\"color:Green;\">// model is of type Backbone.Model</span>\n\n<span style=\"color:Green;\">// Can gradually introduce generic parameters to Views</span>\n<span style=\"color:Blue;\">class</span> DerivedModel <span style=\"color:Blue;\">extends</span> Backbone.Model { \n}\n<span style=\"color:Blue;\">var</span> myView2 = <span style=\"color:Blue;\">new</span> Backbone.View&lt;DerivedModel&gt;();\n<span style=\"color:Blue;\">var</span> model2 = myView2.model; <span style=\"color:Green;\">// model2 is of type DerivedModel</span>\r\n</pre></div>This is important because this would allow people to introduce generics in their library declarations without breaking large amounts of existing code for the consumers. We do this a lot in C#, and it is compatible with TypeScript design because it won't make any changes in the resulting javascript, and works pretty much like method overloads in TypeScript.<br />\n",
    "PostedDate": "2013-08-07T12:58:43.377-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233386",
    "ThreadId": "452741",
    "Html": "Any thoughts on this?<br />\n",
    "PostedDate": "2014-04-11T16:51:58.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233955",
    "ThreadId": "452741",
    "Html": "We could potentially support this in the future.<br />\n\r<br />\nWhen this first came up, we didn't require you to put the type arguments on the classes and would infer an argument of 'any'.  This made them less useful and potentially pretty confusing.  Now that we require you to put the type arguments explicitly on the types, it should be possible to explore adding support for these type parameter overloads.  I agree, they'd be handy for configuring defaults like you show with View.<br />\n",
    "PostedDate": "2014-04-14T09:52:06.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1234031",
    "ThreadId": "452741",
    "Html": "Great, so I created a new work item for it:\r<br />\n<a href=\"https://typescript.codeplex.com/workitem/2438\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/2438</a>\r<br />\n<br />\nThanks!<br />\n",
    "PostedDate": "2014-04-14T12:54:39.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]