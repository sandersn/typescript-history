[
  {
    "Id": "1137430",
    "ThreadId": "474469",
    "Html": "I have two modules in TypeScript: <a href=\"http://goo.gl/BdOJ1D\" rel=\"nofollow\">http://goo.gl/BdOJ1D</a><br />\n<pre><code>module superModule {\n  export interface myInterface { /*...*/ }\n}\n\nmodule app.superModule {\n  var x: superModule.myInterface;\n}</code></pre>\n\nNotice, that there are two different &quot;superModule&quot; modules. One in root, second as submodule of app module.<br />\n<br />\nThe code above is evaluated as there is missing &quot;myInterface&quot; interface, becouse compiler is searching only in app.superModule.<br />\n<br />\nHow to access &quot;root&quot; superModule from submodule superModule?<br />\n",
    "PostedDate": "2013-12-18T02:22:21.197-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1137624",
    "ThreadId": "474469",
    "Html": "Similar to how you would work around other name collisions, eg capturing the right 'this', you need to alias the outer super module to another name that doesn't collide.  Something like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">module</span> superModule {\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">interface</span> myInterface { <span style=\"color:Green;\">/*...*/</span> }\n}\n\n<span style=\"color:Blue;\">import</span> mySuperModule = superModule;\n\n<span style=\"color:Blue;\">module</span> app.superModule {\n    <span style=\"color:Blue;\">var</span> x: mySuperModule.myInterface;\n}\r\n</pre></div>",
    "PostedDate": "2013-12-18T09:17:25.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2013-12-18T10:27:05.733-08:00"
  }
]