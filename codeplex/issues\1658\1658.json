{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.707-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Please, could you make a .Net wrapper for the compiler that makes it possible to compile files / source code in memory without outputting to a new file?\r\n\r\nThis would be of great help.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-08T05:09:22.31-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": ".Net wrapper for the compiler",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1658
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the suggestion, assigned to Jonathan. The compiler/language API has been in flux and generally has not been designed explicitly to be easy to use as a service itself. As the code is all open source someone is free to get started on this whenever though :) As for your specific application, what you're asking for can be accomplished with the existing APIs in TypeScript, the test automation code would be one place to look for examples of how to use some of the compiler APIs for this purpose.",
      "PostedDate": "2013-09-09T12:08:12.373-07:00",
      "Id": 112890
    }
  ]
}