{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.423-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "People (including myself) have mentioned this sort of thing in comments and forum posts and what not, but I thought I'd make a concrete issue out of it. \r\n\r\nAlong with documenting function parameters, I think it's equally important to document return types. It would be helpful if the TypeScript language services recognized the JSDoc `@returns` tag and, for VS, presented its content via Intellisense when invoking a function.\r\n\r\nExample:\r\n``` TypeScript\r\n\r\n/**\r\n * Returns a bar from a foo.\r\n * @param foo The foo.\r\n * @returns A bar that was made from the foo.\r\n */\r\nfunction example(foo: number): string {\r\n     return 'bar';\r\n}\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-26T13:47:49.587-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "JSDoc @returns tag support",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 10,
    "Id": 762
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "We have no plans to support the @returns tag in the immediate future.  With @param tags, intellisense can be context sensitive and provide info about the current parameter.  However with return type, this isn't selectable, and the general summary docs can give the guidance here (as your sample does above, where your @returns is effectively repeating the info already displayed in the summary).\n\nWe continue to display any text in @returns or other JSDoc tags we don't explicitly parse in intellisense, so no info is being lost in the presentation.",
      "PostedDate": "2013-02-26T15:34:50.74-08:00",
      "Id": 91615
    },
    {
      "Message": "@billti\nI appreciate that the Intellisense dumps out the whole contents of the `/** */`, but this isn't the same as having a bolded `@returns` statement below the highlighted parameter information. \n\nI also disagree that the content of `@returns` is necessarily encapsulated in the rest of the documentation. Consider:\n``` TypeScript\n/**\n * Adds an item.\n * @param item The item to add.\n * @returns The collection to which the item was added.\n */\nfunction addItem(item: any): any { }\n```\nIn this example, the return value could be anything, a bool, another object, a collection. Without the `@returns` tag you'd have no idea.\n\nIn addition, maybe I'm being naive, but this seems like a rather minor feature to implement when you take into consideration the machinery to parse JSDoc tags must already exist. \n\nDid this issue have to be closed rather than pushed back for future consideration?",
      "PostedDate": "2013-02-27T11:57:43.23-08:00",
      "Id": 91709
    },
    {
      "Message": "\n\r\n\r** Closed by billti 02/26/2013 3:35PM",
      "PostedDate": "2013-02-26T15:35:24.263-08:00",
      "Id": 91799
    },
    {
      "Message": "Thanks for the follow up. I've assigned to jonturner who handles our suggestions for things like this.",
      "PostedDate": "2013-03-01T12:23:44.703-08:00",
      "Id": 91998
    }
  ]
}