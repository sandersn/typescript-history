{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Same root cause as https://typescript.codeplex.com/workitem/2162",
    "ClosedDate": "2014-03-17T15:00:54.56-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Spec, 11.2.2:\r\n> if the referenced external module contains an export assignment the identifier is classified exactly like the entity or entities named in the export assignment\r\n\r\nAccording to spec, if we make an external module with export assignment from interface, then import alias from this module would be classified as interface, not as a variable or module instance.\r\n\r\nI've created file2.ts:\r\n```\r\ninterface a {}\r\nexport = a;\r\n```\r\n\r\nAnd file1.ts:\r\n```\r\nimport m = require(\"file2\");\r\n\r\nvar m: m; // error: Variable declaration cannot have the same name as an import declaration\r\nvar bb = m; // no error here, even if the previous line is commented out\r\n```\r\n\r\nBut I'm getting errors, as if an import alias is classified also as a module instance. Either this is an error, or spec should be enhanced to make a correct behaviour clear.",
    "LastUpdatedDate": "2014-03-17T15:00:54.56-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-17T14:03:14.54-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "Export assignments with interfaces",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2331
  },
  "FileAttachments": [],
  "Comments": []
}