[
  {
    "Id": "1208681",
    "ThreadId": "532021",
    "Html": "Is there a way to convert generated .js JavaScript back to the origin .ts-Format?<br />\n<br />\nI mean something like a conversion of:<br />\n<pre><code>var Greeter = (function () {\n    function Greeter() {\n    }\n    Greeter.prototype.greet = function (g) {\n        return &quot;Hello &quot; + g.s + &quot;!&quot;;\n    };\n    return Greeter;\n})();</code></pre>\n\nback to:<br />\n<pre><code>class Greeter {\n    \n    s:string;\n    \n    greet(g:Greeter) {\n        return &quot;Hello &quot; + g.s + &quot;!&quot;;\n    }\n}</code></pre>\n\nIf there is not, will it be available in the next versions of typescript?<br />\n<br />\nI know that the type information will be lost while translating <em>.ts to </em>.js, but maybe it can be memorized by comments:<br />\n<pre><code>///#class Greeter\nvar Greeter /*:class*/ = (function () {\n\n    ///#s:string\n\n    function /*:constructor*/ Greeter() {\n    }\n    Greeter.prototype.greet = function (g/*:Greeter*/) {\n        return &quot;Hello &quot; + g.s + &quot;!&quot;;\n    };\n    return Greeter;\n})();</code></pre>\n\n(or with a different syntax - you are quite smarter :D)<br />\n<br />\nIt would be great to open a *.js file in Visual Studio and a question pops up: &quot;TypeScript detected - Would you like to recover the original TypeScript Code?&quot;<br />\n<br />\nI would like to save the files in the <em>.js format and edit them in the </em>.ts format.<br />\n",
    "PostedDate": "2014-02-15T02:09:37.353-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1213772",
    "ThreadId": "532021",
    "Html": "We've talked a bit about extending the compiler so that it can produce JSDoc output in the compile .js file.  If this were sufficiently detailed, it might be possible to use (or write) a JSDoc'd JS to TS converter that could allow you to roundtrip code back to TypeScript.\r<br />\n<br />\nTo do what you're talking about now, as an alternate approach you could use source maps that point back to the original TypeScript from the JavaScript files.  We do this, for example, to enable debugging directly on the .ts files.<br />\n",
    "PostedDate": "2014-02-24T07:59:17.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]