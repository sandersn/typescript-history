{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:21.283-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "There is a great feature in F# called units of measure (http://msdn.microsoft.com/en-us/library/dd233243.aspx), when one can assign a unit to a value making it impossible to misuse it as opposed to using bare values which can be confused by mistake.\r\n\r\nSo in addition to the obvious benefits of being able to annotate the numbers, wouldn't it be great to be able assign a unit to a string, say mark strings that are intended to be used like emails with \"email\"? This way you cannot use it in place of a string marked \"firstName\".\r\n\r\nSomething like this:\r\n```\r\nvar myEmail = \"whatever@mycompany.com\"<email>;\r\nvar myFirstName = \"Mathew\"<firstName>;\r\nmyFirstName = myEmail; // <-------- compilation error\r\n```\r\nThis is additional type safety feature that contribute to the quality of the code yet doesn't have a footprint on the target code (units will be type-erased just like every other type annotation in TypeScript)\r\n\r\nA clumsy alternative to units are wrapper classes which are harder to maintain, come with an noticeable performance overhead, bloat the type system and don't solve the problem, because a wrapped value still can be misused.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-23T11:19:19.583-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Feature request: Unit annotations in TypeScript just like units of measure in F#",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 10,
    "Id": 1715
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the suggestion!  We have a number of F# engineers on the team, so are very familiar with the feature :-)\n\nI'm assigning this suggestion to Jonathan for consideration for a future release.",
      "PostedDate": "2013-09-24T09:23:06.353-07:00",
      "Id": 115495
    },
    {
      "Message": "I currently use TinyTypes to enforce this, but only when I really need it.\n\nIt would be great to have a units of measure similar to F# in TypeScript. It would make a huge difference.",
      "PostedDate": "2014-03-06T11:58:53.12-08:00",
      "Id": 136071
    }
  ]
}