[
  {
    "Id": "1062128",
    "ThreadId": "448447",
    "Html": "Hi,\r<br />\n<br />\nWe have a large JavaScript project and are evaluating TypeScript.  A lot of developers are on macs so we need to have the workflow be compatible with node.js.  We've looked at grunt-typescript and using tsc directly but the problem is it seems to be compiling everything everytime a file is changed.\r<br />\n<br />\nWe can use grunt-contrib-watch to only recompile individual files but doing that doesn't seem to take dependencies into account.\r<br />\n<br />\nIs there a good way to incrementally compile large TypeScript projects using node.js at the moment?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2013-06-27T12:23:38.22-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1177594",
    "ThreadId": "448447",
    "Html": "I'm also interested in this issue too. This could be also a solution to my other question: <a href=\"https://typescript.codeplex.com/discussions/507413\" rel=\"nofollow\">https://typescript.codeplex.com/discussions/507413</a><br />\n",
    "PostedDate": "2014-01-18T09:04:17.363-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1196343",
    "ThreadId": "448447",
    "Html": "I wrote something that works with grunt-typescript and grunt-contrib-watch to do incremental compilation:\r<br />\n<br />\n<a href=\"https://github.com/bryanforbes/core/blob/0e423d5fa93a15e29c850029894ccee8c784f33e/Gruntfile.js#L134-L240\" rel=\"nofollow\">https://github.com/bryanforbes/core/blob/0e423d5fa93a15e29c850029894ccee8c784f33e/Gruntfile.js#L134-L240</a>\r<br />\n<br />\nIt scans files that are watched for <code>import something = require('./path/to/something')</code> as well as <code>/// &lt;reference path=&quot;./path/to/something/something&quot; /&gt;</code>. It only scans relative paths as I don't have a need right now. Hopefully this points you in the right direction.<br />\n",
    "PostedDate": "2014-01-24T15:17:50.48-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]