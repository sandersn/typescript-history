[
  {
    "Id": "920806",
    "ThreadId": "397771",
    "Html": "\r\n<p>Here is the original thread where the idea came from: <a href=\"http://typescript.codeplex.com/discussions/397683\">\r\nhttp://typescript.codeplex.com/discussions/397683</a></p>\r\n<p>We can only specify one type at the moment, for example:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">interface</span> Test {\r\n  data: string\r\n}\r\n</pre>\r\n</div>\r\n<p>But&nbsp;what should we do if we want to allow multiple types? A common use case is allowing either a string or an object as an option. We can take another interface for the object but we can't\r\n<strong>mix</strong> it!</p>\r\n<p>I could imagine something like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">interface</span> TestOptions {\r\n  nr1: number;\r\n  nr2: number;\r\n}\r\n\r\n<span style=\"color:green\">// Some syntax proposals for</span>\r\n<span style=\"color:green\">// multiple type specifiers</span>\r\n\r\n<span style=\"color:blue\">interface</span> Test {\r\n  <span style=\"color:green\">// JSON style</span>\r\n  data: [string, TestOptions],\r\n\r\n  data: string | TestOptions;\r\n\r\n  data: string, TestOptions;\r\n\r\n  data: string &#43; TestOptions\r\n}\r\n\r\n<span style=\"color:blue\">function</span> test(data: [string, TestOptions]) {}\r\n\r\n<span style=\"color:blue\">function</span> test(data: string | TestOptions) {}\r\n\r\n<span style=\"color:blue\">function</span> test(data: string, TestOptions) {}\r\n\r\n\r\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-02T12:25:44.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922594",
    "ThreadId": "397771",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/120\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2012-10-05T11:46:44.047-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "922603",
    "ThreadId": "397771",
    "Html": "<p>I have seen this happen in the real world for event handlers, where 'e' can be either an event object or a string.</p>",
    "PostedDate": "2012-10-05T12:07:38.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]