/*export interface IConverter<TIn, TOut> {
    forward(TIn): TOut;
    backward(TOut): TIn;
}

export interface Observable<TValue> {
    (): TValue;
    (TValue): void;
}

export interface IInfo {
    value: number;
}

export class Worker {
    textValue: Observable<String>;
    structuredValue: Observable<IInfo>;
    converter: IConverter<string, IInfo>;
    constructor() {
    }
    doSomething() {
        this.textValue(this.converter.backward(this.structuredValue()));
    }
}*/