{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.643-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I'd like the ability to use some kind of pragma comment to tell `tsc` to silence any warnings in a section of code.\r\n\r\nFor example:\r\n\r\n// TSC: NO WARNINGS\r\n... some bad code here ...\r\n// END TSC: NO WARNINGS\r\n\r\nMy current use case for this is an area of code where I partially polyfill out `window.console` on old browsers and `tsc` warns me about the fact that I'm not providing a complete polyfill for all of the interface's members. I don't care in this case and I don't want to see these warnings because my goal is to fail my CI build if `tsc` finds any problems.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-03T06:51:08.427-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Support using special comments to disable warnings for a section of code.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 7,
    "Id": 59
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I like this idea.  It also comes up when you call JS functions where JS does an autoconversion to string that we don't do automatically (like alert).",
      "PostedDate": "2012-10-03T19:28:28.103-07:00",
      "Id": 78501
    },
    {
      "Message": "Also it would help with unit test. Suppose I have a function which returns complex object. In unit tests I want to stub this function using () => {} and spy / return on it using Jasmine. Currently TypeScript reasonably complains that () => {} is incompatible with original function signature. But I would love to suppress this error, because I do this intentionally.",
      "PostedDate": "2014-01-24T08:37:43.827-08:00",
      "Id": 131431
    }
  ]
}