{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:23.453-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "In TypeScript, enums are numbers. Can we add support for using enums as the type of an indexer. For example:\r\n\r\n```\r\nenum MyEnum\r\n{\r\n   a,\r\n   b\r\n}\r\n\r\ninterface Interface\r\n{\r\n    [x: MyEnum]: string;\r\n}\r\n\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-19T14:40:56.9-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Allow enum as the type of an indexer",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 6,
    "Id": 1535
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This would be really useful, especially when trying to eliminate switch statements in code. Since enum is a distinct subtype of number, you can use enums to index into an already created indexer with a number type, but this is awkward and does not have type safety (can use other enums to access it as well).\n\n```\nenum KeyCode {\n\tspace,\n\tctrl,\n\talt\n}\n\nenum Key {\n\tzero,\n\tone,\n\ttwo\n}\n\nfunction exec() {\n\tvar keyMapping: { [index: number]: string } = {};\n\t\n\tkeyMapping[KeyCode.space] = \"space\";\n\tkeyMapping[KeyCode.ctrl] = \"ctrl\";\n\tkeyMapping[KeyCode.alt] = \"alt\";\n\t\n\talert(keyMapping[Key.one]);\n}\n\nexec();\n```",
      "PostedDate": "2014-04-01T09:55:18.847-07:00",
      "Id": 140188
    },
    {
      "Message": "I would really love to see this feature, especially since enums are number / string based in typescript already",
      "PostedDate": "2014-06-03T09:36:26.74-07:00",
      "Id": 148699
    }
  ]
}