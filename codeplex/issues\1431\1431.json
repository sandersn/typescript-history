{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T13:31:38.647-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "It looks like TypeScript is now (v0.9.1) including comments in compiled JavaScript files. However, these comments are placed in a strange location for static methods. When a comment immediately precedes a static method, TypeScript places it between the assignment operator and the function definition instead of keeping it at the top. For example:\r\n\r\n```TypeScript\r\n// ----- methods related to foo ----- //\r\n\r\n/**\r\n* Returns bar\r\n*/\r\npublic static foo(): string {\r\n    return \"bar\";\r\n}\r\n```\r\ncompiles to\r\n```TypeScript\r\nHelpfulDate.foo = // ----- methods related to foo ----- //\r\n/**\r\n* Returns bar\r\n*/\r\nfunction () {\r\n    return \"bar\";\r\n};\r\n```\r\n\r\nIs this expected behavior? It strongly smells like a bug.\r\n\r\nNote: this issue doesn't seem to occur with comments before instance (non-static) methods.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-06T13:48:44.817-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Strange comment location for compiled static methods",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1431
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Yep, that looks bad. We recently fixed this for instance methods, but appears static methods have the same issue.  We'll take a look into this.",
      "PostedDate": "2013-08-06T15:47:23.94-07:00",
      "Id": 108721
    }
  ]
}