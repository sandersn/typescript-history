{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "You'll need to write `declare var foo;` as well here if you want the `foo` module to be treated as a value. Per spec, modules which do not declare members do not create a name in the value space.\n\nWas this a generated .d.ts file? If so we may need to fix that code.",
    "ClosedDate": "2013-11-19T08:52:35.51-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi,\r\n\r\n__Version 0.9.5 Beta__\r\n\r\nConsider the following\r\n\r\n```TypeScript\r\ndeclare module foo { }\r\n\r\n// error TS2095: Build: Could not find symbol 'foo'\r\nvar x: any = foo[\"bar\"];\r\n```\r\n\r\nBut\r\n\r\n```TypeScript\r\ndeclare module foo { var zoo: any; }\r\n\r\n// No error\r\nvar z: any = foo[\"bar\"];\r\n```\r\n\r\nThis doesn't seem very consistent. Ideally I should be able to write `foo[\"bar\"]` irrespective of whether there is anything declared in the module or not.\r\n\r\nThis is an issue for large projects where declarations are in different locations to actual implementations.\r\n",
    "LastUpdatedDate": "2013-11-19T08:52:35.51-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-19T06:05:30.583-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Empty module declaration",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1916
  },
  "FileAttachments": [],
  "Comments": []
}