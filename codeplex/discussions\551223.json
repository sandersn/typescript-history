[
  {
    "Id": "1264700",
    "ThreadId": "551223",
    "Html": "Hi All,\r<br />\n<br />\nI am such a newbie to Typescript. I am trying to add a JS file as a ref to a TS file in order to access a plugin.\r<br />\nBut i am facing problem. \r<br />\nMy JS looks like following:\r<br />\n<br />\n(function($) {<br />\n<pre><code>jQuery.fn.Listener = function(options, callback) {\n\n    //inizializza le variabili\n    char0 = new Array(&quot;ยง&quot;, &quot;32&quot;);........\n\n</code></pre>\n\nNow i wanted to call my listener to a TS file. I am trying to do something like this.\r<br />\n<br />\ndeclare function Listener(): any;\r<br />\n<br />\nthe above is not able to find the JS file.\r<br />\n<br />\nPlease tell me how to resolve this<br />\n",
    "PostedDate": "2014-07-11T00:47:26.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1264925",
    "ThreadId": "551223",
    "Html": "Using &quot;declare&quot; only means &quot;I promise it will be loaded before this point&quot;.  It does not trigger any loader.  TypeScript transpiles down to JavaScript, and doesn't really do anything special (like loading files).  You have to load the required files yourself by either including the script tag(s) for the file(s) before your code loads/executes, or using a loader type library (like RequireJS).<br />\n",
    "PostedDate": "2014-07-11T11:07:46.587-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1264975",
    "ThreadId": "551223",
    "Html": "Exactly what jamesnw said. The 'declare' statements are only about providing type information to the TypeScript compiler so that you can get nice auto completion and compiler errors. They say nothing about where the actual implementation for that type information comes from and how it will be loaded.<br />\n",
    "PostedDate": "2014-07-11T13:49:01.99-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]