{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T14:00:20.7-08:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "When using the new declaration merging feature (v0.9.0) if you declare a class and then a module with the same name so that you can create nested classes, the compiler does not recognize the nested classes when referenced from the main class.  For example:\r\n\r\n```\r\nmodule Parent {\r\n    export class ParentClass {\r\n        static SomeMethod(): Parent.ParentClass.InnerClass { } // Compiler complains that it does not know about \"InnerClass\"\r\n    }\r\n    module ParentClass {\r\n        export class InnerClass {\r\n            constructor() { }\r\n        }\r\n    }\r\n}\r\n```",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-20T15:10:13.21-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Issue with Declaration Merging",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 4,
    "Id": 1196
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the report, we'll take a look.",
      "PostedDate": "2013-06-20T20:42:05.633-07:00",
      "Id": 103743
    },
    {
      "Message": "I think this is the same issue:\n\n```\nmodule Ns {\n\texport class Foo {\n\t\tconstructor(){\n\t\t\tconsole.log('base');\n\t\t}\n\t}\n}\n\nmodule Ns.Foo {\n\texport class Bar extends Ns.Foo {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tconsole.log('derived');\n\t\t}\n\t}\n}\n\nnew Ns.Foo.Bar();\n```\nThis Code also throws compiler errors: error TS4022: Type reference cannot refer to container 'Ns.Foo', although it produces valid js and works perfectly fine ([playground](http://www.typescriptlang.org/Playground/#src=module%20Ns%20%7B%0A%09export%20class%20Foo%20%7B%0A%09%09constructor()%7B%0A%09%09%09console.log('base')%3B%0A%09%09%7D%0A%09%7D%0A%7D%0A%0Amodule%20Ns.Foo%20%7B%0A%09export%20class%20Bar%20extends%20Ns.Foo%20%7B%0A%09%09constructor()%20%7B%0A%09%09%09super()%3B%0A%09%09%09console.log('derived')%3B%0A%09%09%7D%0A%09%7D%0A%7D%0A%0Anew%20Ns.Foo.Bar()%3B)).\n\nIs there a way to ignore this error when compiling locally until this issue is fixed?",
      "PostedDate": "2013-11-11T04:32:39.717-08:00",
      "Id": 122614
    },
    {
      "Message": "> Is there a way to ignore this error when compiling locally until this issue is fixed?\nI figured out it was my editor-plugin that stopped compiling when I got errors, so ignore this please.",
      "PostedDate": "2013-11-11T05:02:59.113-08:00",
      "Id": 122616
    }
  ]
}