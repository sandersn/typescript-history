{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This bug has been fixed. If you're still seeing this issue, please re-open the bug (click \"Re-open Issue\" below the \"ISSUES\" tab). Thanks!",
    "ClosedDate": "2013-08-07T11:55:53.637-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi, here is the repro using TS 0.9 Beta:\r\n\r\nThe following code compiles, even though it shouldn't:\r\n```JavaScript\r\ninterface IFoo<T>{\r\n}\r\nclass Bar {\r\n    public getBar(foo: IFoo[]) {\r\n    }\r\n}\r\n```\r\n\r\nAnd generates declarations file\r\n```JavaScript\r\ninterface IFoo<T> {\r\n}\r\ndeclare class Bar {\r\n    public getBar(foo: IFoo<T>[]): void;\r\n}\r\n```\r\n\r\nIn the first snippet we should only permit `getBar(foo: IFoo<something>[])`.\r\n\r\nThe generated .d.ts is faulty because the parameter `T` does not exist in that context.\r\n\r\nThe correct error is generated if the getBar parameter is not an array: `public getBar(foo: IFoo)`",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-05T08:38:00.397-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Omitting generic parameter generates faulty declarations file",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1114
  },
  "FileAttachments": [],
  "Comments": []
}