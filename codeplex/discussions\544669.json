[
  {
    "Id": "1242896",
    "ThreadId": "544669",
    "Html": "My apologies if this has come up before, but I wasn't able to find it in another discussion.\r<br />\n<br />\nI was thinking it would be handy in large projects if a single file could be compiled in &quot;quick mode&quot;. The compiler would simply remove the type definitions, do the straightforward conversions for classes, enums, etc. It wouldn't attempt to load any external files.\r<br />\n<br />\nI think the transformation described above would be possible under the current language spec,  although I don't know about future plans.\r<br />\n<br />\nIt would be nice when working on a large codebase, as I could do quick change / test iterations, and just kick off a more complete re-compile when necessary. For instance, I made a change and I want to figure out what I need to update, or I'm about to push code and want to make sure everything is still green.\r<br />\n<br />\nThe cool thing about the &quot;quick compile&quot; mode is that I could write a script loader for node that would, when a file is required during development, check whether it needs to be re-compiled. If it's out of date, it could kick off the quick compile and load it on-the-fly. That would make change / test cycles pretty fast and smooth (especially for those not using VS).<br />\n",
    "PostedDate": "2014-05-07T23:32:14.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1243162",
    "ThreadId": "544669",
    "Html": "We've talked about this on and off.  In theory, it'd work like you say.  You'd just have a &quot;binding&quot; pass rather than a full typecheck.<br />\n\r<br />\nLike you say, this could be very handy when working with codebases that don't change often, or that you know what necessarily be affected by small changes in a way that it must be fully typechecked.\r<br />\n<br />\nThere are a couple of questions around when/if such a mode might be automatically enabled, but I think the general idea is pretty good and one that I think larger projects would end up using.<br />\n",
    "PostedDate": "2014-05-08T09:38:42.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]