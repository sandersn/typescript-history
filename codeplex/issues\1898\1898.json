{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.113-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I hope this one can be fixed. I like the fact that one can just type `new A` to instantiate `A` when the constructor takes no arguments. Unfortunately, if the class has a type parameter, the parentheses become mandatory:\r\n\r\n    class A {\r\n    }\r\n\r\n    class B<T> {\r\n    }\r\n\r\n    function f () {\r\n       new A      // parentheses not required\r\n       new B<A>() // parentheses required\r\n    }\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-16T12:25:28.51-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Inconsistent grammar for generic object instantiation",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1898
  },
  "FileAttachments": [],
  "Comments": []
}