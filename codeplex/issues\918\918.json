{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-04-18T11:23:44.313-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi,\r\n\r\nI'd like to provide type definitions for [asyncblock](https://github.com/scriby/asyncblock). It's a flow control library built on top of fibers that provides a solution to callback hell.\r\n\r\nThere's a couple cases that I'm not sure are currently possible to specify:\r\n\r\n```\r\nasyncblock(function(flow){\r\n    var contents = flow.sync( fs.readFile('path', 'utf8', flow.add() ); //contents contains the result of fs.readFile\r\n});\r\n\r\n//I'd need to specify something like \"flow.sync returns type T, where T is the type of the 2nd arg of the callback called by fs.readFile\r\n```\r\n\r\nHere's another one\r\n\r\n```\r\nasyncblock(function(flow){\r\n    var contents = fs.readFile('path', 'utf8').sync();\r\n});\r\n\r\n//This example relies on source transformation to convert the call into the same format as the previous example\r\n//It seems like we could support this if we pretended that \"sync\" was on the function prototype, and it returned the type of the 2nd arg to the callback\r\n//But it seems like we'd have a problem with TypeScript indicating that the wrong number of args are passed to fs.readFile, as the callback is supplied by asyncblock\r\n```\r\n\r\nIs there any hope that those examples could be supported by TypeScript?",
    "LastUpdatedDate": "2013-04-18T11:23:44.33-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-04-16T21:41:19.93-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Type definitions for asyncblock",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 918
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It seems that the root request is to be able to flow types between arguments and return values.  This is one of the areas generics should help address, which is being added to the 0.9.x releases.\n\nIf you are enlisted in our GIT repo, you should be able to see the latest language spec draft in the /doc folder.  Starting at section 3.4 \"Type Parameters\" should give you a good overview of what generics are capable of, and looking at the updated Array typing in /typings/lib.d.ts should help clarify how this is implemented (e.g. look at the members of \"interface Array<T>\" ).\n\nIf this doesn't meet your needs, please reopen with specific issues or requests for the language.  If you have general questions on how to achieve something in TypeScript, StackOverflow.com is the recommended forum.\n\nThanks!",
      "PostedDate": "2013-04-18T11:23:32.63-07:00",
      "Id": 97392
    }
  ]
}