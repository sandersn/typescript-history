{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.05-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "TypeScript is great, but needs a preprocessing facility to allow conditional compilation based on the project configuration (something like #if _DEBUG). This could probably be implemented through 3rd party scripts, but these are hard to integrate with Visual Studio builds. The most elegant solution is to have the TypeScript compiler simply perform a first pass. This should be relatively easy to implement.\r\n\r\nLarge productions build both Debug and Release builds, for many good reasons. TypeScript should offer this facility.\r\n\r\nThanks!\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-11-20T07:31:11.87-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Preprocessing / conditional compilation",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 25,
    "Id": 1926
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Assigned to Jonathan who handles suggestions.",
      "PostedDate": "2013-11-20T14:47:50.903-08:00",
      "Id": 123709
    },
    {
      "Message": "For reference, the last time this feature was suggested: [https://typescript.codeplex.com/workitem/111](https://typescript.codeplex.com/workitem/111). I sincerely hope people are given a chance to vote on and discuss this issue this time rather than shutting down discussion for no good reason.",
      "PostedDate": "2013-11-22T05:22:37.587-08:00",
      "Id": 123873
    },
    {
      "Message": "This feature (preprocessing) could also be used to add a lot of desired features like\n#NAMEOF \nwhich can be used to convert methods names and property names to literal strings like\n\n#NAMEOF(this.methodName)\nwould be replaced with 'methodName'\n#NAMEOF(this.propertyName)\nwould be replaced with 'propertyName'\n\nwhich helps to eliminate a lot of magic strings in the code.",
      "PostedDate": "2013-11-24T05:12:52.98-08:00",
      "Id": 124058
    },
    {
      "Message": "I created a CodePlex account just to be able to vote on this issue, to give you an idea of how important I think it is.  I mean, I'll resort to writing a TypeScript preprocessor if I have to, but seems kinda funny to write a preprocessor for what is essentially a preprocessor.",
      "PostedDate": "2014-02-21T13:05:30.39-08:00",
      "Id": 134385
    },
    {
      "Message": "Currently this can be done with a post-processor such as UglifyJS or Esprima. It doesn't strictly need to be in TypeScript nor in a separate pre-processor.",
      "PostedDate": "2014-02-24T11:46:05.253-08:00",
      "Id": 134597
    },
    {
      "Message": "Clearly we can accomplish this via other tools, but a solution using the TypeScript preprocessor would be simpler and easier to integrate into builds. Other languages (C++) value preprocessors and I really think TypeScript would benefit from one. It can't be that hard to implement!\n",
      "PostedDate": "2014-02-25T06:09:22.03-08:00",
      "Id": 134661
    },
    {
      "Message": "We don't need a full C-style preprocessor, but something like C#'s `#if`, `#else`, `#endif` would be more than welcome.",
      "PostedDate": "2014-05-19T06:40:29.96-07:00",
      "Id": 147039
    }
  ]
}