{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "You can redefine the property as long as its type is assignment compatible with the base class's property type. Derived classes cannot break the contract of their parent types.",
    "ClosedDate": "2013-03-07T14:38:25.497-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have a base class that defines the data property as any[]. In a derived class I need to redeclare this property with a different type. I am getting an error: Type of overriden member is not subtype of original member defined by ...\r\n\r\n```\r\ndeclare class MyBase { data: any[]; }\r\ndeclare class MyData { }\r\ndeclare class MyDerived extends MyBase { data: MyData; /* <--- problem */ }\r\n```",
    "LastUpdatedDate": "2013-03-07T14:38:25.497-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-07T09:59:57.17-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Cannot redefine the type of a property in a derived class.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 793
  },
  "FileAttachments": [],
  "Comments": []
}