{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for the report. Fortunately this is now working correctly in the latest bits in the develop branch.",
    "ClosedDate": "2014-02-12T17:39:43.377-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "From spec, 10.1:\r\n> A non-instantiated module is an internal module containing only interface types and other non-instantiated modules.\r\n\r\nIn playground this code results in a error. Apparently compiler treats module A as non-instantiated, even though it has an exported alias to a variable.\r\n\r\n```\r\nmodule B {\r\n\texport var V: { varProp };\r\n\texport interface V { intProp }\r\n}\r\n\r\nmodule A {\r\n\texport import Alias = B.V;\r\n\t//export var AV = 1; // Uncommenting this line fixes the error\r\n}\r\n\r\nvar c = A.Alias.varProp; // Error on \"A\"\r\nvar cc: A.Alias;\r\n\r\n```",
    "LastUpdatedDate": "2014-02-12T17:39:43.377-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-11T09:27:21.52-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Module with exported import is treated as non-instantiated",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2170
  },
  "FileAttachments": [],
  "Comments": []
}