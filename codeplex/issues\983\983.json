{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in develop branch",
    "ClosedDate": "2013-06-13T11:25:13.62-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi, here is the repro:\r\n\r\n```\r\nclass Foo<T> {\r\n    public getFoo() {\r\n        return <T>undefined;\r\n    }\r\n}\r\ninterface IBar {\r\n    getFoo(): number;\r\n}\r\nclass Bar extends Foo<number> implements IBar {\r\n}\r\n```\r\n\r\nThe code above results in\r\n __error TS2137:__ \r\nTypes of property 'getFoo' of types 'Bar' and 'IBar' are incompatible:\r\nCall signatures of types '() => T' and '() => number' are incompatible.\r\n\r\nHowever, the following seems to work:\r\n\r\n```\r\nclass Foo<T> {\r\n    public getFoo() :T {\r\n        return undefined;\r\n    }\r\n}\r\n```",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-04-30T09:06:55.717-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Specialisation of generic base class faulty when inferring return value",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 983
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks!  Good issue.  We'll take a look at this.",
      "PostedDate": "2013-04-30T14:38:06.69-07:00",
      "Id": 98973
    }
  ]
}