{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-08-01T13:28:24.38-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I've found that when declaring enums in definition (.d.ts) files, TypeScript considers my code to be type safe and thus compiles it--but the compiled JavaScript does not run.\r\n\r\nHere's an example.\r\n\r\nIn `definitions.d.ts`:\r\n\r\n    declare module Definitions {\r\n        export enum Colors { Red, Green, Blue }\r\n    }\r\n\r\nAnd in `main.ts`:\r\n\r\n    /// <reference path=\"definitions.d.ts\" />\r\n    var color = Definitions.Colors.Red;\r\n\r\n`main.ts` compiles successfully, but the produced JavaScript looks like:\r\n\r\n    var color = Definitions.Colors.Red;\r\n\r\nWhen this code is run, of course an error occurs; that is, `Definitions` is not defined, because it is defined in `definitions.d.ts`, which is only a compile-time construct. I understand why it is impossible to actually use the `enum` at run-time, but I don't think that this code should compile as it's misleading to developers.\r\n\r\nBest,\r\nCharlie",
    "LastUpdatedDate": "2013-08-13T09:44:36.897-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-01T12:37:45.093-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "enums in definition files: produces faulty JS",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1417
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "A d.ts file is designed to describe an existing javascript file,, at runtime that existing is expected to exist.",
      "PostedDate": "2013-08-01T13:28:19.34-07:00",
      "Id": 108239
    },
    {
      "Message": "Interesting, I had thought .d.ts was just for defining any run-time-only interfaces (e.g., for enforcing a type system). My mistake.\n\nRegardless, I feel slightly uncomfortable that TypeScript would __ever__ successfully compile JS code that doesn't run. But this is a broader issue. Thanks.",
      "PostedDate": "2013-08-01T15:23:36.44-07:00",
      "Id": 108302
    }
  ]
}