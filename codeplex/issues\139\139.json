{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "by design",
    "ClosedDate": "2012-10-08T14:32:03.3-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "If you create a function with the signature `() => any` and assign it to a variable with the type `() => void` the compile doesn't complain. For example:\r\n\r\nvar t : () => void = () => { return \"hello\"; };\r\nvar x = t();\r\n\r\nThe second line will complain with \"Cannot assign 'void' to variable 'x'\" even though `t` actually returns a string. \r\n\r\nWe shouldn't be able to declare a function to return void if it doesn't actually return void.\r\n\r\nSee another example of this happening on this StackOverflow question:\r\n\r\nhttp://stackoverflow.com/questions/12761607/typescript-void-return-type-converted-to-any-type",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-06T11:38:06.827-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Declaring a function to return void doesn't check if the function returns void",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 139
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This is actually by design. \nRyan explains the reasoning of our design on the StackOverflow page. Please check that topic out, thanks!",
      "PostedDate": "2012-10-08T14:31:56.897-07:00",
      "Id": 79063
    }
  ]
}