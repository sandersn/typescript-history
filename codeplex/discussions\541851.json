[
  {
    "Id": "1232734",
    "ThreadId": "541851",
    "Html": "Now that 1.0 is out, do you have any more explicit roadmap to share  ? :p<br />\n",
    "PostedDate": "2014-04-10T02:25:15.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1232846",
    "ThreadId": "541851",
    "Html": "It's on my todo list.  Anything in particular you want me to touch on?<br />\n",
    "PostedDate": "2014-04-10T08:37:22.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1232875",
    "ThreadId": "541851",
    "Html": "I'm interested on es6 features scheduling (especially generator), but much more on Type system improvement that would allows to use existing lib :<br />\n<ul>\n<li>Mixins </li>\n<li>A way to extends declared variables like Object, Date etc ...</li>\n<li>A way to create class that extends arbitrary function (not only declared class)</li>\n<li>Private Types (<a href=\"https://typescript.codeplex.com/workitem/1312\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/1312</a>)</li>\n<li>\nAmbient &quot;this&quot; pointer typing in callback/function signatures (<a href=\"https://typescript.codeplex.com/workitem/507\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/507</a>)<br />\n</li>\n</ul>\nI don't know what is planned or not, but if any of this feature are planned I'm interested :p.<br />\n",
    "PostedDate": "2014-04-10T09:42:41.077-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1232931",
    "ThreadId": "541851",
    "Html": "Note: You cannot properly extend primitive types without a lot of work-arounds (and you cannot apply primitive constructors to a new custom object instance).  That is a JS limitation, not a TS one.<br />\n",
    "PostedDate": "2014-04-10T11:22:34.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233115",
    "ThreadId": "541851",
    "Html": "Hi JonTurner,\r<br />\n<br />\nOn behalf on the DefinitelyTyped team there are the following things that we're very interested in:<br />\n<ul>\n<li><a href=\"https://typescript.codeplex.com/workitem/1364\" rel=\"nofollow\">Add support for type unions</a> - will allow strong typings for object bags (config objects) rather than the <code>any</code> we have to use presently</li>\n<li><a href=\"https://typescript.codeplex.com/workitem/917\" rel=\"nofollow\">Make class / variable declarations open ended</a></li>\n<li><a href=\"https://typescript.codeplex.com/workitem/2387\" rel=\"nofollow\"><code>export =</code> not usable without claiming a name in the global namespace</a> - a slightly controversial issue with a workaround that feels rather unsatisfactory.</li>\n<li>\n<a href=\"https://typescript.codeplex.com/wikipage?title=Known%20breaking%20changes%20between%200.8%20and%200.9\" rel=\"nofollow\">Generic constraints no longer can reference parameters in the same parameter list </a> - this came out when 0.9.7 was released and at the time there was mention of this being re-introduced later.  Wondering if there was any news?  (I think their absence made the typings for Underscore / Lo-Dash less useful than they had been previously)<br />\n</li>\n</ul>\nThere may be some more to follow.\r<br />\n<br />\nThanks,\r<br />\nJohn<br />\n",
    "PostedDate": "2014-04-11T01:18:10.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233296",
    "ThreadId": "541851",
    "Html": "I'd say the type-related features (type unions, <code>this</code> pointer typing, generic constraint restriction) are the most important things you guys should be looking at (in that order). First and foremost the purpose of TypeScript was to describe JavaScript's type system, which at present it has trouble doing in far too many cases. <br />\n",
    "PostedDate": "2014-04-11T10:50:36.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233340",
    "ThreadId": "541851",
    "Html": "Wouldn't it be brilliant if CodePlex could provide a tracker where we could post issues and vote on them?!<br />\n",
    "PostedDate": "2014-04-11T12:27:34.87-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233346",
    "ThreadId": "541851",
    "Html": "Yeah, if only ... LOL   :P<br />\n",
    "PostedDate": "2014-04-11T12:53:37.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233357",
    "ThreadId": "541851",
    "Html": "I think I should have been more specific :) \r<br />\n<br />\nWhat aspects of the <em>roadmap</em> should I make sure to touch on?  I take it, looking at the comments, the answer is &quot;when will language feature &lt;x&gt; land?&quot;  There is also the work on the language service, the compiler, etc. <br />\n",
    "PostedDate": "2014-04-11T13:47:58.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1233379",
    "ThreadId": "541851",
    "Html": "Besides planned language features, I'd be curious to hear more about what upcoming language service features are planned.  I'm also interested in hearing more about the expected cadence for new releases from this point (will they be roughly as frequent as they have been in the past or slower now that TypeScript hit 1.0).<br />\n",
    "PostedDate": "2014-04-11T16:12:05.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]