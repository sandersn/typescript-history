{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in develop branch",
    "ClosedDate": "2013-06-13T11:23:10.863-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "```\r\ninterface Simple<T> {\r\n  val : T;\r\n}\r\n\r\ndeclare var s1 : Simple<string>;\r\n\r\n// Correctly points out the error - TS111: Cannot convert 'Simple<string>' to 'Simple<number>'\r\nvar s2 : Simple<number> = s1;\r\n\r\n\r\n\r\ninterface Promise<T> {\r\n  then<V>(f:(t:T) => V): Promise<V>;\r\n}\r\n\r\ndeclare var p1 : Promise<string>;\r\n\r\n// No error raised.\r\nvar p2 : Promise<number> = p1;\r\n\r\n\r\n/*\r\n  There are a number of modifications of the Promise interface declaration \r\n  that are enough for tsc to catch this mistake, e.g.:\r\n\r\n  interface Promise<T> {\r\n    val : T;\r\n    then<V>(f:(t:T) => V): Promise<V>;\r\n  }\r\n*/\r\n```",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-03-25T22:23:46.187-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "some generic interfaces allow assignment to incompatible types",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 844
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thank for reporting.  I'm actually seeing this be inconsistent in testing today... sometime the error appears, then after a little editing it goes away again.  We'll investigate further.",
      "PostedDate": "2013-03-27T12:51:23.057-07:00",
      "Id": 94581
    }
  ]
}