{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in develop branch",
    "ClosedDate": "2013-06-13T11:26:13.57-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "I am new to typescript and trying few things\r\n\r\nwhere function demands number parameter and bool as return value.\r\n\r\n```\r\nfunction where(items: number[], filter: (item: number) => bool) {\r\n    for (var counter = 0; counter < items.length; counter++) {\r\n        var item = items[counter];\r\n        if (filter(item)) {\r\n            console.log(item);\r\n        }\r\n    }\r\n}\r\nvar data = [1, 2, 3, 4];\r\n```\r\nCase 1 - TypeScript gives a compile error\r\n\r\n```\r\nvar evenFilter = function (item: number) {\r\n    //actual line is item % 2 == 0;\r\n    return item;\r\n}\r\nwhere(data, evenFilter);\r\n```\r\nCase 2 - Inline function with incorrect return type does not generate compile time error\r\n\r\n```\r\nwhere(data, function(item : number){\r\n    return item;\r\n});\r\n```\r\nCase 3 - Even the short hand syntax does not generate compile time error\r\n\r\n```\r\nwhere(data, item => item);\r\n```\r\nIs this a bug with TypeScript or expected behavior?",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-09T07:43:43.167-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Inline function not getting checked for type safety",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 3,
    "Id": 1021
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It's definitely weird that Case 1 and 2 aren't functionally the same.",
      "PostedDate": "2013-05-09T08:23:52.647-07:00",
      "Id": 99808
    },
    {
      "Message": "Both Case 1 and Case 2 give correct, and equivalent, errors in the latest develop bits for 0.9. You're correct that it is a bug in 0.8.3 that Case 2 is not the same error. You defined where's 2nd parameter as a function that takes a number and returns a bool. Your evenFilter variable is not of that type, it is number => number. In Case 2 this is exactly the same, you've simply used an anonymous function with the same type signature. \r\n\r\nCase 3 is a bug that still exists in 0.9. marking this as active for investigation.",
      "PostedDate": "2013-05-10T12:57:44.773-07:00",
      "Id": 99937
    }
  ]
}