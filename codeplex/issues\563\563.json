{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:11.737-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm finding that I make use of a helper function like this:\n\nfunction className (d): string => d.name\n\nBy not giving \"d\" a type, one can pass the name of a TypeScript /class/ as an identifier and then obtain its name qua JavaScript /function/ as a string, for browsers which support the name property on functions. This provides reflective access to the name of a class, without having to embed it as a string in your code. Maybe TS should provide enough reflection to make this possible in a portable and typesafe way.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-12-17T00:12:55.62-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Basic reflection facility",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 563
  },
  "FileAttachments": [],
  "Comments": []
}