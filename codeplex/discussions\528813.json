[
  {
    "Id": "1202252",
    "ThreadId": "528813",
    "Html": "We recently added some Typescript code to an existing WebRole project (C#, Azure, VS2012). Installed all the necessary plugins on the build machines (quickiBuild, msbuild) and the inclusions in the .csproj files like &lt;Typescript compile Includes=&quot;&quot;&gt; and   &lt;TypeScriptTarget&gt;ES5&lt;/TypeScriptTarget&gt;<br />\n<pre><code>&lt;TypeScriptRemoveComments&gt;false&lt;/TypeScriptRemoveComments&gt;\n&lt;TypeScriptSourceMap&gt;true&lt;/TypeScriptSourceMap&gt;\n&lt;TypeScriptModuleKind&gt;AMD&lt;/TypeScriptModuleKind&gt;.</code></pre>\n\nAlso the .ts files have the Build Action set to TypeScriptCompile<br />\n<br />\nThe build generates the .JS files in the same directory as the .ts files and that's where the .html file looks for them. However when the build runs on the build machines i guess the files are complied but the build copy does not pick up the complied .js files from the subfolders and copy them to the release location.<br />\nI know there is a \t&lt;TypeScriptOutDir&gt;my/dir&lt;/TypeScriptOutDir&gt; option but how do we tell the build to pick up the complied .js files from the subfolders after the build and copy to the corresponding release subfolder same as the source tree. It picks up the existing .js files added to the soln but not the generated ones. <br />\n",
    "PostedDate": "2014-02-03T14:16:25.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1203233",
    "ThreadId": "528813",
    "Html": "You're probably seeing a bug, which we have with builds on build servers. This is something we plan on addressing for 1.0 and we may have a workaround that we're investigating.<br />\n",
    "PostedDate": "2014-02-05T15:03:24.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]