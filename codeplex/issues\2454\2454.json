{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Slightly weird, but very low impact. If this turns out to have any other symptoms we can look into it more.",
    "ClosedDate": "2014-04-21T10:45:09.677-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "First off, yes, I know \"for in\" iterators are \"any\". However, if the iterator variable is typed before the \"for in\" it can be either string or any:\r\n\r\n```\r\nvar userId: string;\r\nfor (userId in users) {  // hover over userId => \"userId: string\"\r\n}\r\n```\r\n\r\nAnd if you care about not getting type bugs in your code, this is what you should be doing, because TypeScript doesn't allow you to do `for (var userId: string in users)`. Ahem.\r\n\r\nBut if you have a var in the for in, it shows the type as \"any\" -- even though it doesn't actually change the type:\r\n\r\n```\r\nvar userId: string;  // hover over userId => \"userId: string\"\r\nfor (var userId in users) {  // hover over userId => \"userId: any\"\r\n    console.log(userId);  // hover over this userId => \"userId: string\"\r\n}\r\n```\r\n\r\nBit of a nitpick, I know, but you never know when it could signal a deeper underlying bug.",
    "LastUpdatedDate": "2014-04-21T10:45:09.677-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-21T10:36:53.653-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Postponed"
    },
    "Summary": "\"var\" in \"for in\" shows type as \"any\" even when it's not",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2454
  },
  "FileAttachments": [],
  "Comments": []
}