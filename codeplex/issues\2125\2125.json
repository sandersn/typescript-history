{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:10.33-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "This is a feature request :\r\n\r\nIf you `require` a folder in nodejs it loads the `index.js` file from that folder. TypeScript should do the same for the types inside index.ts \r\n\r\nRelated stackoverflow query : http://stackoverflow.com/questions/21323956/requiring-a-folder-with-index-js",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-01-23T22:02:52-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Load a folder in nodejs",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 9,
    "Id": 2125
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for reporting, we'll take this into consideration. \r\n\r\n",
      "PostedDate": "2014-01-24T16:15:16.87-08:00",
      "Id": 131542
    },
    {
      "Message": "I just ran across this limitation. Would be helpful for creating a clean organization in a project I'm working on.",
      "PostedDate": "2014-02-25T14:41:28.17-08:00",
      "Id": 134706
    },
    {
      "Message": "Same here, would be nice :)",
      "PostedDate": "2014-03-01T09:18:15.003-08:00",
      "Id": 135522
    },
    {
      "Message": "I also miss this feature. But this alone is not enough. Typescript should also honor the \"main\" option in the package.json file. So when you import the module itself then it should import the main script instead.\n\nSo when a library has a module \"lib/foobar.js\" and the package.json has the definition `\"main\": \"lib/foobar.js\"` then we want to import this module with `import foobar = require(\"foobar\")` and not with `import foobar = require(\"foobar/lib/foobar\")`.\n\nThis works fine in plain javascript so it would be nice if typescript could do the same.",
      "PostedDate": "2014-04-05T10:38:37.563-07:00",
      "Id": 140666
    },
    {
      "Message": "Oh, I just noticed that typescript doesn't honor node modules at all... It just crawls up the parent directories and if you are lucky and you have your dependency project in the same folder than the other project then they can see each other. But if you installed the dependency as a node module then typescript can't see it at all because it does not dive into the node_modules folder. So forget my last comment... But it would still be nice if TypeScript would try to load modules the same way as NodeJS does it. This is documented here by the way:\n\nhttp://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\n",
      "PostedDate": "2014-04-05T12:38:11.423-07:00",
      "Id": 140670
    },
    {
      "Message": "I created a pull request which adds node_modules support and index support:\n\nhttps://typescript.codeplex.com/SourceControl/network/forks/kayahr/typescript/contribution/6559\n\nThis patch does NOT add support for the main option in package.json. Sorry, that's too complicated for me right now.\n",
      "PostedDate": "2014-04-06T04:09:08.22-07:00",
      "Id": 140713
    },
    {
      "Message": "Please Add!!!  I spent a couple hours trying to figure out why I kept getting a TS error unless I changed ```import``` to ```var``` to get the folder's index file without entering the full path name.",
      "PostedDate": "2014-05-16T23:22:20.913-07:00",
      "Id": 146926
    }
  ]
}