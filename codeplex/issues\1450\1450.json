{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for the report. This looked like a dupe of https://typescript.codeplex.com/workitem/1455which has already been fixed but I don't repro this in the public Playground with 0.9.1. It also doesn't repro with the latest bits in the develop branch so all should be well going forward.",
    "ClosedDate": "2013-08-08T11:47:48.717-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "This happens when a generic type (class or interface) contains a member of function type where one of parameters has the generic type.\r\nFor example:\r\n\r\n```\r\nexport interface I<T> {\r\n   f: ( x: T ) => void;\r\n}\r\n```\r\n\r\nIn this particular case, I could have just made `f` a function instead of property, but it does not always work. For one example, sometimes I want a class member to hold a reference to a function that was passed to me by the class consumer.\r\n\r\nNOTE: this does not happen when `T` is in the return type position.",
    "LastUpdatedDate": "2013-08-08T16:57:21.957-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-07T12:17:00.913-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "TS2049: Parameter 'x' of exported function is using inaccessible module 'y.ts'",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1450
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It does reproduce on my computer with 0.9.1.\n\nCould it, perhaps, have too do with the fact that I'm using AMD modules?",
      "PostedDate": "2013-08-08T14:07:21.633-07:00",
      "Id": 109097
    }
  ]
}