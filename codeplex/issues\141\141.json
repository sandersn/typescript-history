{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex issues and suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some issues and feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:20:17.46-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "TypeScript does not allow a boxed object to be assigned to a\r\ncorresponding primitive without an explicit type assertion e.g.  \r\n\r\n    var s: string;\r\n    var S: String;\r\n    s = S;          // Error: cannot convert 'String' to 'string'.\r\n    s = <string> S; // OK.\r\n    S = s;          // OK: string automatically type asserted to String.\r\n\r\nHere's an example where this occurs in practice (passing the text from\r\na file read by the node readFileSync API to JavaScript's JSON.parse\r\nAPI):\r\n\r\n  JSON.parse(fs.readFileSync(confFile, 'utf8'));          // Error.\r\n  JSON.parse(<string> fs.readFileSync(confFile, 'utf8')); // OK.\r\n\r\nIs TypeScript being unnecessarily strict? It makes sense \r\ntheoretically, but are there enough real use cases to justify the\r\nincompatibility with existing JavaScript code?\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:34.097-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-06T14:45:28.51-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Should autoboxed objects be equivalent to corresponding primitives?",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 141
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I agree with this. Either we should make it throw a compile error if one is used over the other (e.g., only \"string\" or \"String\" is valid, not both), or we make it so TypeScript can do implicit conversions between the two. This can be very confusing. I had to waste more time then I should of to figure out why I was getting this error (coincidentally with JSON.parse and String as well).",
      "PostedDate": "2012-10-20T12:49:36.34-07:00",
      "Id": 80559
    }
  ]
}