{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this has been fixed in the develop branch.",
    "ClosedDate": "2013-09-06T13:39:11.583-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi, here is the repro using 0.9.1.0:\r\n\r\n```TypeScript\r\n\r\ninterface Promise<T> {\r\n\r\n    then<U>(successHandler: (result: T) => void): void;\r\n}\r\n\r\ninterface Foo {\r\n\r\n    getFoo(): Promise<string>;\r\n}\r\n\r\nclass Bar {\r\n\r\n    public doFoo() {\r\n\r\n        var foo: Foo;\r\n\r\n        // Error TS7005: Variable 'result' implicitly has an 'any' type\r\n        foo.getFoo().then(result => this.doBar(result));\r\n\r\n        // This compiles fine\r\n        foo.getFoo().then(result => this.doBar2(result));\r\n    }\r\n\r\n    public doBar<T>(state: string): Promise<T> {\r\n        return undefined;\r\n    }\r\n\r\n    public doBar2<T>(state: string) {\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen compiled with the NoImplicitAny flag the first `foo.getFoo()` errors out.\r\n\r\nMouse-over on the `result` parameter shows the correctly inferred type as `string`.\r\n\r\nI don't believe this should be a compiler error.\r\n",
    "LastUpdatedDate": "2013-09-06T13:39:11.583-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-05T11:54:09.517-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Callback method with return value and No Implicit Any",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1644
  },
  "FileAttachments": [],
  "Comments": []
}