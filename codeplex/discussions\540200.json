[
  {
    "Id": "1226921",
    "ThreadId": "540200",
    "Html": "Hello\r<br />\nfirst of all i would like to thank all the typescript team for your work\r<br />\nyou made an awesome implementation!\r<br />\n<br />\ni saw alot of requests for reflection, method overloading, extension methods and such\r<br />\n<br />\ni think that the best way to solve those issue\r<br />\nis actually exactly what you have been doing\r<br />\nthrough javascript api's (TypeScript object)\r<br />\n<br />\nbut instead of combining everything together why not breaking those issues into multiple objects and divide the responsibilities ?\r<br />\n<br />\nsmth like FormatterServices for code conversion (runtime eval;TS to JS)\r<br />\nReflection for runtime code information\r<br />\n<br />\nfor instance i understand (in a large view) the problems of making methods (class functions) overloadable because of the type checking that should will occur at runtime\r<br />\nthis could be avoided by using metadata of the method call on TS\r<br />\nso that the actual function call on javascript will not rely on type checking\r<br />\nbut instead on the hardcoded 'reference' to the said method\r<br />\n<br />\nif the code was compiled by calling the method X (a:number)\r<br />\n<br />\nthen it will be parsed to call(X, args, signature) from inside a catch all method with the same name\r<br />\n<br />\ni understand that while i have good arguments i do not see the big picture and that there are other things to consider\r<br />\nhowever i do feel that typescript is a .NET like thinking in solving a particular problem \r<br />\n(OOP key feature) and that instead of simply ignore some of the runtime aspects developers require, typescript should face this problem head on by implementing a model in which we address to our TS code in JS runtime by a set of certain objects and resources that will completely simplify that task\r<br />\nwhether it is reflection or some kind of prototype linking (method overloading).\r<br />\n<br />\nthanks to whomever devoted the time in reading my suggestion\r<br />\n<br />\nregards\r<br />\nmazor vanunu<br />\n",
    "PostedDate": "2014-03-26T07:01:32.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]