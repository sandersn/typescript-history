{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.66-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "This is invalid ES3 code, but ES5 allows it:\r\n\r\n``` typescript\r\nvar obj = {};\r\nobj.delete = null;\r\n```\r\n\r\nThe typescript compiler should use backwards compatible property access when compiling in ES3 target mode:\r\n\r\n``` typescript\r\nobj['delete'] = null\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-23T23:11:41.15-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Compiler should use ['x'] syntax for property access when x is an ES3 reserved word",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 5,
    "Id": 1387
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Btw, I can fix the above example in my code by manually using ['x'] to access the properties. However, what I can't fix is the following case, which generates invalid ES3 javascript code. The only solution is to not use reserved words as method names.\n\n``` typescript\nclass Foo {\n    delete(){}\n}\n```\n\nCompiler version used: 0.9.0.1.",
      "PostedDate": "2013-07-23T23:17:06.863-07:00",
      "Id": 107221
    },
    {
      "Message": "I hit this last week with IE8 (an ES3 target.) Voted.",
      "PostedDate": "2013-07-25T09:33:10.567-07:00",
      "Id": 107404
    },
    {
      "Message": "Thanks for the suggestion. Assigned to Jonathan.",
      "PostedDate": "2013-07-25T11:50:16.337-07:00",
      "Id": 107423
    },
    {
      "Message": "wereHamster ... you can define and use function the same way as properties, like:\n```\nclass Foo {\n\t\"delete\" = () => { };\n}\n\nvar f = new Foo();\nf[\"delete\"]();\n\n```\nthe only problem is that also for this example, js is not generated correctly.\n",
      "PostedDate": "2013-07-30T04:18:24.753-07:00",
      "Id": 107895
    }
  ]
}