{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:11.813-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "We are working on a 3D library written in TypeScript ( http://typescript.away3d.com/ ) and would love a mechanism to inline code (for those welcome performance boosts):\r\n\r\n     inline public fooBar : number = 2;\r\n     inline public foo() : void{};\r\n\r\nHopefully that feature you would consider adding.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-20T12:07:55.42-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Feature request - TypeScript - Code inlining",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 10,
    "Id": 1819
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "If you're willing to abide by the restrictions required by Google Closure Compiler, you can get all sorts of optimizations including inlining, devirtualization, dead code elimination, argument specialization, and more. I've written a monkey-patched version of the compiler that emits the correct type annotations in comments: https://github.com/evanw/typescript-closure-compiler/. A live demo is available at http://evanw.github.io/typescript-closure-compiler/.\n",
      "PostedDate": "2013-10-20T12:14:36.043-07:00",
      "Id": 118988
    },
    {
      "Message": "Certainly looks interesting - will take a look at it. However it would be great if code inlining could become part of the TypeScript compiler. ",
      "PostedDate": "2013-10-21T02:45:29.71-07:00",
      "Id": 119026
    },
    {
      "Message": "Putting into our suggestion bucket.\r\n\r\nNote that enum constants will be inlined automatically, so you can consider using those in the meantime.",
      "PostedDate": "2013-10-21T10:41:05.373-07:00",
      "Id": 119085
    },
    {
      "Message": "Thank you. And good to know about Enums :-) ",
      "PostedDate": "2013-10-21T11:36:09.09-07:00",
      "Id": 119099
    },
    {
      "Message": "That would be a good addition to the compiler. But, it will be more interesting with a full set of encasulation keywords in typescript , like protected, internal, private. In that case, it would be great.\n",
      "PostedDate": "2013-10-22T23:24:28.733-07:00",
      "Id": 119303
    },
    {
      "Message": "Inline functions would enable the JS stack to incur less overhead when making in scope function calls, potentially increasing a significant increase in execution speed of an application. I feel that inline functions would be a great feature to include into the TypeScript language. Thanks",
      "PostedDate": "2013-10-23T04:31:45.933-07:00",
      "Id": 119326
    }
  ]
}