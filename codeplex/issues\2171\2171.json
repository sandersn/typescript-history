{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:17:22.5-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "Hi, \r\n\r\nVisual Studio currently only has an option for \"HTML Application with TypeScript\". This generates a lot of stuff that needs to be deleted, if one is only interested in using the project as a class libarary, for example App.css, web.config etc.\r\n\r\nPlease provide a project template for creating class libraries that should have just a \"Class1.ts\" - or ideally nothing at all.\r\n\r\nThanks.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-11T09:48:06.637-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Please provide a \"TypeScript Class Library\" project template",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 15,
    "Id": 2171
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Marked as a suggestion. This was definitely already on our radar for post 1.0. ",
      "PostedDate": "2014-02-12T17:25:52.083-08:00",
      "Id": 133441
    },
    {
      "Message": "Even more important, it should allow referencing ala .Net class libraries. Right now I have to create build events to copy all the files to destination projects. This works but essentially means I had to redo all my TS to use Require-style modules since I am targeting web and Node. I did it but it would've been great to have TS handle that case gracefully.",
      "PostedDate": "2014-04-02T17:28:31.48-07:00",
      "Id": 140366
    },
    {
      "Message": "Agree with @kayub, the ability to import different TypeScript libraries into my web application (or other) project is crucial.\n\nAlso, consider the scenario of a portable OWIN web app built as a .NET class library, with both .NET and TypeScript code. It should be possible to create a class library (sure, perhaps a separate OWIN Portable App project template is needed) that encompasses both C# and TypeScript compilation, and supports adding references to both .NET and TypeScript class libraries.",
      "PostedDate": "2014-06-16T10:58:13.433-07:00",
      "Id": 149847
    },
    {
      "Message": "Okay, so this is pretty much a duplicate of [https://typescript.codeplex.com/workitem/571]. However, the discussion here adds a few things that are missing over there.",
      "PostedDate": "2014-06-20T07:18:30.633-07:00",
      "Id": 150333
    },
    {
      "Message": "* https://typescript.codeplex.com/workitem/571 (since I can't edit my own comment :P)",
      "PostedDate": "2014-06-20T07:22:08.273-07:00",
      "Id": 150336
    }
  ]
}