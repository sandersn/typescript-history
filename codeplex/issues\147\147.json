{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Dupe of http://typescript.codeplex.com/workitem/43",
    "ClosedDate": "2012-10-07T21:52:15.65-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "HTML5 array methods (filter, forEach, map, etc) has an optional second argument (thisArg) to pass as \"this \" into the predicate. Given the following example\r\n\r\nvar param = { v1: 'v1', v2: 'v2' };\r\n['v1','v2'].filter((item) => item in this, thisArg);\r\n\r\nthis is compiled to:\r\n['v1','v2'].filter( function(item) { return item in _this }, thisArg);\r\n\r\nthis has unknown reference issues  on _this if placed outside a class scope, plus does not allowing actually referencing the correct this.\r\nthe correct syntax would be:\r\n['v1','v2'].filter( function(item) { return item in this }, thisArg);\r\n\r\n",
    "LastUpdatedDate": "2012-10-07T21:52:15.65-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-07T01:30:08.63-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "HTML5 array methods compile incorrectly",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 147
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This is a duplicate http://typescript.codeplex.com/workitem/43",
      "PostedDate": "2012-10-07T05:33:59.96-07:00",
      "Id": 78897
    },
    {
      "Message": "Also, a note about:\n\n['v1','v2'].filter((item) => item in this, thisArg);\n\n\"thisArg\" will not be used as \"this\" in the ArrowFunction, since the Lexical \"this\" will have already been bound.",
      "PostedDate": "2012-10-07T09:19:47.963-07:00",
      "Id": 78907
    },
    {
      "Message": "In this case a part of the functionality is lost, namely: parametrization of the predicates. Only the \"this\" will provide for variable references that are actually not \"compiled\" into the predicate function definition, so their value can be changed.",
      "PostedDate": "2012-10-07T12:08:18.027-07:00",
      "Id": 78919
    }
  ]
}