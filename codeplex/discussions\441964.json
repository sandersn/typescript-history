[
  {
    "Id": "1037139",
    "ThreadId": "441964",
    "Html": "Hi, has anyone put together (and would like to share :-) ) a .d.ts for Knockout JS that leverages generics?\r<br />\n<br />\nThanks.<br />\n",
    "PostedDate": "2013-04-29T07:19:17.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1037177",
    "ThreadId": "441964",
    "Html": "Hi, I have a version I have been using in one of my projects - you are welcome to give it a go.\r<br />\n<br />\n<a href=\"https://gist.github.com/pgbross/5482209\" rel=\"nofollow\">https://gist.github.com/pgbross/5482209</a>\r<br />\n<br />\n<br />\nIt is based on the non-generic version on the DefinitelyTyped github site.\r<br />\n<br />\nCheers\r<br />\n--Philip.<br />\n",
    "PostedDate": "2013-04-29T08:10:15.377-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1037240",
    "ThreadId": "441964",
    "Html": "@Philip, thanks.\r<br />\n<br />\nThe following doesn't seem right:<br />\n<pre><code>            var foo = ko.observable&lt;string&gt;();\n            foo = &quot;bar&quot;; // foo should be a function not a string\n           // This should be string\n            var baz = foo(); // TS2088 Unable to invoke type with no call signatures</code></pre>\n\n",
    "PostedDate": "2013-04-29T10:09:16.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1037370",
    "ThreadId": "441964",
    "Html": "@nabog, you are right.\r<br />\n<br />\nI hadn't spotted that initialising a variable using the static empty constructor, eg. ko.observable&lt;string&gt;(), was picking the wrong overload from KnockoutObservableStatic.\r<br />\n<br />\nThe KnockoutObservableStatic interface was there to provide access to the &quot;.fn&quot; prototype extension point. As I don't use it in my code, I have updated my definitions file at <a href=\"https://gist.github.com/pgbross/5482209\" rel=\"nofollow\">https://gist.github.com/pgbross/5482209</a> to define the static ko.observable directly.<br />\n<pre><code>...\n//observable: KnockoutObservableStatic;\nobservable&lt;T&gt;( value?: T ): KnockoutObservable;\ncomputed: KnockoutComputedStatic;\nobservableArray&lt;T&gt;( value?: T[] ): KnockoutObservableArray;\n...</code></pre>\n\nHopefully that will help the behaviour for you, but if you need access to the &quot;.fn&quot; extension point that would no longer work I guess. I don't know if there is a better way of defining the interface that would work.\r<br />\n<br />\ncheers,\r<br />\n--philip<br />\n",
    "PostedDate": "2013-04-29T14:32:29.437-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]