{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T13:29:43.3-08:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "From https://typescript.codeplex.com/discussions/453620\r\n\r\nI have also noted that the .js files were not being included in my web deployment package when I publish a project (e.g. the example \"HTML Application with TypeScript\"). I assume in your reply on Monday you mean \"They should NOT need to be part of the project to be published\" in your last sentence. \r\n\r\n So I looked a bit closer at the latest targets file to see how it adds the .js files to the published list, and it appears to set a PublishPipelineCollectFilesCore property group to include a new task TypeScriptCollectPublishFiles. It appears for this to work, that the TypeScript import target needs to be before the import of the web application target in the .csproj file. Or rather, for me, when I moved the line <Import Project=\"$(VSToolsPath)\\TypeScript\\Microsoft.TypeScript.targets\" /> to be prior to the line <Import Project=\"$(VSToolsPath)\\WebApplications\\Microsoft.WebApplication.targets\" Condition=\"'$(VSToolsPath)' != ''\" />, then it started to include the .js files without having to have them appear in visual studio (including not nested either).",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-22T11:05:44.133-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Publishing appears to require ordering for .js to be picked up",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 1567
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It starts to publish js, but it won't publish ts and map, that makes debugging online web server hard. I have tried to set ts file CopyToOutputDirectory PreserveNewest, but with no luck.",
      "PostedDate": "2013-08-27T22:15:50.137-07:00",
      "Id": 111367
    },
    {
      "Message": "Just an update to this based only on my observation. The above is true (only) for the \"demo file\"/scaffolding for new TS project (greeter).\n\nIf I add a new TypeScript file (which also creates a \"demo\" section in the new ts file):\n\n* the .js file is generated as well (nested under ts)\n* it is however, part of the solution (nested under ts file)\n* publishing the project publishes this .js (aka \"compiled\" file).",
      "PostedDate": "2013-08-28T12:29:54.443-07:00",
      "Id": 111439
    }
  ]
}