[
  {
    "Id": "1235435",
    "ThreadId": "542652",
    "Html": "Why can't TypeScript has C# styled type constraints?\r<br />\nThe Extends keyword is not familiar with C# developers, but Java developers.\r<br />\n<br />\n<img src=\"https://dl.dropboxusercontent.com/s/li5soowfp15jo6z/TypeScript_TypeConstraintUsingExtendsKeyword_SoJavaLike.JPG?dl=1&amp;token_hash=AAGYo_s9ngBROafDYw86ja8vB_Ns-G5pYwAK17_rTx6wwA\" alt=\"Image\" /><br />\n",
    "PostedDate": "2014-04-18T08:47:25.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1235454",
    "ThreadId": "542652",
    "Html": "The 'extends' keyword here refers to the shape of the type T.  Structurally, we're saying that the given type T must be equal to or larger than the constraint.  For this, in TypeScript, we use the 'extends' keyword.  This is a different functionality than that of C#.\r<br />\n<br />\nSaid another way, TypeScript has a different set of semantics and constraints than C# has.  Syntax that works better in the JavaScript/structural typing world may feel different than C#, but this change is intentional because of the different semantics.<br />\n",
    "PostedDate": "2014-04-18T09:23:22.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]