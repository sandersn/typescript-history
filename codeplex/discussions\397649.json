[
  {
    "Id": "920419",
    "ThreadId": "397649",
    "Html": "\r\n<p>Why? Could this feature be added in the future?</p>\r\n",
    "PostedDate": "2012-10-02T01:23:48.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "920438",
    "ThreadId": "397649",
    "Html": "\r\n<p>Also it seems that method overloading does not work either...</p>\r\n",
    "PostedDate": "2012-10-02T02:02:59.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "920509",
    "ThreadId": "397649",
    "Html": "<p>In TypeScript you can have a few declarations, but only one implementation of functions/constructors</p>\r\n<p>function f(x: number): number;&nbsp;// declaration</p>\r\n<p>function f(x: string): string;&nbsp;// declaration</p>\r\n<p>function f(x: any): any { return x; } // impementation</p>\r\n<p>&nbsp;</p>\r\n<p>f(10) // 10</p>\r\n<p>f(\"str\") // str</p>\r\n<p>f({a : 10}) // compile time error</p>",
    "PostedDate": "2012-10-02T04:45:59.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "920513",
    "ThreadId": "397649",
    "Html": "<p>You can have multiple constructor or method signatures, but only one implementation. For example:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">function</span> foo(s: string): string;\r\n<span style=\"color: blue;\">function</span> foo(n: number): number;\r\n<span style=\"color: blue;\">function</span> foo(x: any): any {\r\n    <span style=\"color: blue;\">return</span> x;\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>It is up to the implementation of the function to ensure it actually delivers a result that matches the overload signatures. The compiler does not validate this.</p>",
    "PostedDate": "2012-10-02T04:54:06.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923706",
    "ThreadId": "397649",
    "Html": "<p>Is there any plan to improve this support? Is this by design? Why not real overloads with implementations?</p>",
    "PostedDate": "2012-10-08T15:03:58.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923929",
    "ThreadId": "397649",
    "Html": "<blockquote style=\"border: solid .1em #ccc; font-style: italic; margin: .25em 1em 0 1em; padding: 0 .25em 0 .25em;\"><strong>ursuletzu wrote:</strong><br />\r\n<p>Why not real overloads with implementations?</p>\r\n</blockquote>\r\n<p>How would you compile that into javascript ?</p>\r\n<p>Correct me if i'm wrong but i don't think javascript support real overloading (same function identifier, multi signatures with different implementations).</p>\r\n<p>It would be possible to \"simulate\" this behavior but at the price of performance overheads :&nbsp;<a href=\"http://ejohn.org/blog/javascript-method-overloading/\">http://ejohn.org/blog/javascript-method-overloading/</a></p>",
    "PostedDate": "2012-10-09T03:39:54.647-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923956",
    "ThreadId": "397649",
    "Html": "\r\n<p>In the case of method overloading, suffixes could be added to different overloads:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>function foo(s: <span style=\"color:blue\">string</span>): <span style=\"color:blue\">string</span> -&gt; function foo_string_string(s)\nfunction foo(n: number): number -&gt; function foo_number_number(n)</pre>\r\n</div>\r\n<p>Wouldn't work for overloaded constructors, though.</p>\r\n",
    "PostedDate": "2012-10-09T04:49:42.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923972",
    "ThreadId": "397649",
    "Html": "<p>I would love to see the compiler doing this kind of renaming when js is generated...</p>",
    "PostedDate": "2012-10-09T05:24:04.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923976",
    "ThreadId": "397649",
    "Html": "\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>vexator wrote:</strong><br>\r\n<p>In the case of method overloading, suffixes could be added to different overloads:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>function foo(s: <span style=\"color:blue\">string</span>): <span style=\"color:blue\">string</span> -&gt; function foo_string_string(s)\nfunction foo(n: number): number -&gt; function foo_number_number(n)</pre>\r\n</div>\r\n<p>Wouldn't work for overloaded constructors, though.</p>\r\n</blockquote>\r\n<p>Correct me if i'm wrong, in the generated javascript implementation, each overload calls would had to evaluate which args has been provided and conditionaly (switch/if) call the corresponding generated method.</p>\r\n<p>Is it worth the&nbsp;<span>function call overhead ? Take that into consideration in high performance situations.</span></p>\r\n<p><span>I mean, if you decide to implement it that way in your code, it's your choice. But if the TS compiler implements this pattern by design, it's another story.</span></p>\r\n",
    "PostedDate": "2012-10-09T05:40:21.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923979",
    "ThreadId": "397649",
    "Html": "\r\n<p>why not:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">class</span> Foo\n{\n      show(s: string): <span style=\"color:blue\">void</span> {.. } \n      <span style=\"color:green\">//compiler will transform it to show1(s);</span>\n\n      show(s : number): <span style=\"color:blue\">void</span> { ... }\n      <span style=\"color:green\">//compiler will transform it to show2(s);</span>\n}\n\n<span style=\"color:blue\">var</span> foo = <span style=\"color:blue\">new</span> Foo();\n\nfoo.show(<span style=\"color:#a31515\">'a'</span>); <span style=\"color:green\">// will render in js  foo.show1('a');</span>\nfoo.show(1);   <span style=\"color:green\">// will render in js&quot;: foo.show2(1);</span>\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-10-09T05:47:40.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923984",
    "ThreadId": "397649",
    "Html": "<p>Ok, got it.</p>\r\n<p>This way, it could be a nice feature!</p>",
    "PostedDate": "2012-10-09T05:55:07.84-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "924946",
    "ThreadId": "397649",
    "Html": "<blockquote style=\"border: solid .1em #ccc; font-style: italic; margin: .25em 1em 0 1em; padding: 0 .25em 0 .25em;\"><strong>ahejlsberg wrote:</strong><br />\r\n<p>You can have multiple constructor or method signatures, but only one implementation. For example:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">function</span> foo(s: string): string;\r\n<span style=\"color: blue;\">function</span> foo(n: number): number;\r\n<span style=\"color: blue;\">function</span> foo(x: any): any {\r\n    <span style=\"color: blue;\">return</span> x;\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>It is up to the implementation of the function to ensure it actually delivers a result that matches the overload signatures. The compiler does not validate this.</p>\r\n</blockquote>\r\n<p>Above works in TypeScript but if foo is a method in a class the multiple signatures are rejected!</p>\r\n<p>Is this supposed to work inside classes?</p>",
    "PostedDate": "2012-10-10T14:54:07.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "924970",
    "ThreadId": "397649",
    "Html": "<p>This compiles with no errors:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">class</span> Test {\r\n    foo(s: string): string;\r\n    foo(n: number): number;\r\n    foo(x: any): any {\r\n        <span style=\"color: blue;\">return</span> x;\r\n    }\r\n}\r\n</pre>\r\n</div>",
    "PostedDate": "2012-10-10T16:24:26.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "925089",
    "ThreadId": "397649",
    "Html": "<p>Ah, ok, so the implementation overload must have parameters of most generic kind ( any ).</p>\r\n<p>Thanks, i missed this detail.</p>",
    "PostedDate": "2012-10-11T00:52:19.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]