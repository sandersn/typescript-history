{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-08-22T16:00:59.967-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "Repro steps: \r\n\r\n1) Create a file called bug.ts (reduced test case from real code):\r\n\r\n```\r\nvar foo = false ? () => 0 : () => 0;\r\n```\r\n\r\n2) Compile the file:\r\n\r\n```\r\ntsc -sourcemap bug.ts\r\n```\r\n\r\n3) Install the source map parser:\r\n\r\n```\r\nnpm install source-map\r\n```\r\n\r\n4) Run this in node:\r\n\r\n```\r\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\r\nnew SourceMapConsumer(require('fs').readFileSync('bug.js.map', 'utf8'));\r\n```\r\n\r\nAn error is thrown because the source map generated by the compiler is not valid. This is with the version currently on npm (0.9.0-1).\r\n\r\n```\r\nnode_modules/source-map/lib/source-map/array-set.js:82\r\n    throw new Error('No element indexed by ' + aIdx);\r\n          ^\r\nError: No element indexed by 1\r\n    at ArraySet_at [as at] (node_modules/source-map/lib/source-map/array-set.js:82:11)\r\n    at SourceMapConsumer_parseMappings [as _parseMappings] (node_modules/source-map/lib/source-map/source-map-consumer.js:181:42)\r\n    at new SourceMapConsumer (node_modules/source-map/lib/source-map/source-map-consumer.js:96:10)\r\n    at Object.<anonymous> (bug.js:2:37)\r\n    at Module._compile (module.js:449:26)\r\n    at Object.Module._extensions..js (module.js:467:10)\r\n    at Module.load (module.js:356:32)\r\n    at Function.Module._load (module.js:312:12)\r\n    at Module.runMain (module.js:492:10)\r\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\r\n```\r\n",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-24T22:47:38.81-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Compiler generates invalid source map",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1389
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the report, we'll take a look.",
      "PostedDate": "2013-07-25T12:20:12.24-07:00",
      "Id": 107429
    },
    {
      "Message": "I don't understand what you mean by the \"actual debugging experience\". The compiler generates invalid data and this is still a problem for me. I'm using the [source-map-support](https://npmjs.org/package/source-map-support) package to get native TypeScript stack traces in node. It uses the [source-map](https://npmjs.org/package/source-map) parser from Mozilla. However, the source map generated by the TypeScript compiler is invalid (it doesn't parse) so stack traces are broken for TypeScript code.\n\nI apologize if the reduced test case was confusing. That was the minimal form of the syntax tree I encountered that triggered the invalid source map emission. Here's a real example. Below are two files, nobug.ts and bug.ts. The second file is the first file plus the line of code that triggers the bug in the compiler. Note that these require the source-map-support package, which can be installed using `npm install source-map-support`.\n\n__nobug.ts__: (works as expected)\n```\ndeclare function require(path: string): any;\nrequire('source-map-support').install();\nvar test = () => { throw new Error('testing stack trace') };\ntest();\n```\n\nOutput:\n```\n$ tsc -sourcemap nobug.ts; node nobug.js\n\nnobug.ts:3\nvar test = () => { throw new Error('testing stack trace') };\n                        ^\nError: testing stack trace\n    at test (nobug.ts:3:25)\n    at Object.<anonymous> (nobug.ts:4)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:492:10)\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n```\n\n__bug.ts__: (added the line of code that triggers the bug, does not work as expected)\n```\ndeclare function require(path: string): any;\nrequire('source-map-support').install();\nvar test = () => { throw new Error('testing stack trace') };\ntest();\nvar foo = Math.random() < 0.5 ? () => 0 : () => 1;\n```\n\nOutput:\n```\n$ tsc -sourcemap bug.ts; node bug.js\n\nnode_modules/source-map-support/node_modules/source-map/lib/source-map/array-set.js:82\n    throw new Error('No element indexed by ' + aIdx);\n          ^\nError: No element indexed by 2\n    at ArraySet_at [as at] (node_modules/source-map-support/node_modules/source-map/lib/source-map/array-set.js:82:11)\n    at SourceMapConsumer_parseMappings [as _parseMappings] (node_modules/source-map-support/node_modules/source-map/lib/source-map/source-map-consumer.js:181:42)\n    at new SourceMapConsumer (node_modules/source-map-support/node_modules/source-map/lib/source-map/source-map-consumer.js:96:10)\n    at exports.mapSourcePosition (node_modules/source-map-support/source-map-support.js:94:14)\n    at wrapCallSite (node_modules/source-map-support/source-map-support.js:151:20)\n    at node_modules/source-map-support/source-map-support.js:187:26\n    at Array.map (native)\n    at Function.prepareStackTrace (node_modules/source-map-support/source-map-support.js:186:24)\n    at process.handleUncaughtExceptions (node_modules/source-map-support/source-map-support.js:193:23)\n    at process.EventEmitter.emit (events.js:115:20)\n```\n",
      "PostedDate": "2013-07-26T20:00:05.157-07:00",
      "Id": 107654
    },
    {
      "Message": "The actual debugging experience here matches how JavaScript works and doesn't step into the branches of a ternary expression.\n\r\n\r** Closed by danquirk 07/26/2013 3:30PM",
      "PostedDate": "2013-07-26T15:30:20.397-07:00",
      "Id": 107655
    },
    {
      "Message": "I had closer look today and the source map seems valid according to the spec. It actually looks like this is a problem with Mozilla's source-map package: [https://github.com/mozilla/source-map/pull/72](https://github.com/mozilla/source-map/pull/72).\n",
      "PostedDate": "2013-07-29T23:38:06.793-07:00",
      "Id": 107877
    },
    {
      "Message": "Thanks for following up. With my original comment what I meant was that what we're most concerned about with source maps is what the end result of a bug is (ie is your debugging experience actually degraded) as far as how we triage whether to fix certain bugs.",
      "PostedDate": "2013-08-22T16:00:44.1-07:00",
      "Id": 110834
    }
  ]
}