{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is fixed with a recent check in, should be in the next version of TypeScript.",
    "ClosedDate": "2013-07-03T15:47:58.08-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "this sinppet of code in ts file (UTF-8 encoding):\r\n\r\n  this._months.fillItems([{ key: 1, val: 'Январь' }, { key: 2, val: 'Февраль' }, { key: 3, val: 'Март' },\r\n                    { key: 4, val: 'Апрель' }, { key: 5, val: 'Май' }, { key: 6, val: 'Июнь' },\r\n                    { key: 7, val: 'Июль' }, { key: 8, val: 'Август' }, { key: 9, val: 'Сентябрь' }, { key: 10, val: 'Октябрь' },\r\n                    { key: 11, val: 'Ноябрь' }, { key: 12, val: 'Декабрь' }], true);\r\n                this._formats = new MOD.collection.Dictionary('format', { key: 0, val: '' }, 'key');\r\n                this._formats.fillItems([{ key: 'PDF', val: 'Acrobat Reader PDF' }, { key: 'WORD', val: 'MS Word DOC' }, { key: 'EXCEL', val: 'MS Excel XLS' }], true);\r\n                this._format = 'PDF';\r\n                this._channels = new MOD.collection.Dictionary('channel', { key: '', val: '' }, 'key');\r\n                this._channels.fillItems([{ key: 'email', val: 'ЭЛЕКТРОННАЯ ПОЧТА' }, { key: 'ais', val: 'АИС' }], true);\r\n                this._channel = 'email';\r\n\r\nis compiled to\r\n\r\n        this._months.fillItems([\r\n                    {\r\n                        key: 1,\r\n                        val: '??????'\r\n                    }, \r\n                    {\r\n                        key: 2,\r\n                        val: '???????'\r\n                    }, \r\n                    {\r\n                        key: 3,\r\n                        val: '????'\r\n                    }, \r\n                    {\r\n                        key: 4,\r\n                        val: '??????'\r\n                    }, \r\n                    {\r\n                        key: 5,\r\n                        val: '???'\r\n                    }, \r\n                    {\r\n                        key: 6,\r\n                        val: '????'\r\n                    }, \r\n                    {\r\n                        key: 7,\r\n                        val: '????'\r\n                    }, \r\n                    {\r\n                        key: 8,\r\n                        val: '??????'\r\n                    }, \r\n                    {\r\n                        key: 9,\r\n                        val: '????????'\r\n                    }, \r\n                    {\r\n                        key: 10,\r\n                        val: '???????'\r\n                    }, \r\n                    {\r\n                        key: 11,\r\n                        val: '??????'\r\n                    }, \r\n                    {\r\n                        key: 12,\r\n                        val: '???????'\r\n                    }\r\n                ], true);\r\n                this._formats = new RIAPP.MOD.collection.Dictionary('format', {\r\n                    key: 0,\r\n                    val: ''\r\n                }, 'key');\r\n                this._formats.fillItems([\r\n                    {\r\n                        key: 'PDF',\r\n                        val: 'Acrobat Reader PDF'\r\n                    }, \r\n                    {\r\n                        key: 'WORD',\r\n                        val: 'MS Word DOC'\r\n                    }, \r\n                    {\r\n                        key: 'EXCEL',\r\n                        val: 'MS Excel XLS'\r\n                    }\r\n                ], true);\r\n                this._format = 'PDF';\r\n                this._channels = new RIAPP.MOD.collection.Dictionary('channel', {\r\n                    key: '',\r\n                    val: ''\r\n                }, 'key');\r\n                this._channels.fillItems([\r\n                    {\r\n                        key: 'email',\r\n                        val: '??????????? ?????'\r\n                    }, \r\n                    {\r\n                        key: 'ais',\r\n                        val: '???'\r\n                    }\r\n                ], true);\r\n                this._channel = 'email';\r\n\r\n\r\nMaking russian cyrillic characters unreadable",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-23T23:45:20.413-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "After compilation non ANSI ASC characters are unreadable",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 1065
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "P.S>-relevant for typescript 0.9 alpha version",
      "PostedDate": "2013-05-23T23:53:45.65-07:00",
      "Id": 101072
    },
    {
      "Message": "Thanks for reporting. \r\n\r\nThis is fixed when using the command line compiler (tsc.exe) in the release-0.9.0 branch, but Compile on Save in Visual Studio still has this issue. We're taking a look.",
      "PostedDate": "2013-05-24T10:35:13.79-07:00",
      "Id": 101112
    },
    {
      "Message": "Oh, why is this still not fixed in the final 0.9?",
      "PostedDate": "2013-06-21T05:04:19.92-07:00",
      "Id": 103766
    },
    {
      "Message": "I'm using 0.9 beta now and all is OK.\nAt least when the source is in UTF-8 encoding.",
      "PostedDate": "2013-06-23T05:30:58.653-07:00",
      "Id": 103874
    },
    {
      "Message": "I use 0.9 final with Visual Studio Express and my ts file is UTF-8 with BOM and for \"__Compile on Save__\" it creates __ANSI__ js file.\nWith this file:\n```\nvar test = 'ÉéêÊèÈ–';\nvar nonAnsi = 'บั';\n```\n\"Compile on Save\" creates a ANSI js file:\n```\nvar test = 'ÉéêÊèÈ–';\nvar nonAnsi = '??';\n```\nI need to change \"this.__useUTF8encoding__ = writeByteOrderMark;\" to \"this.useUTF8encoding = true;\" in \"C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\IDE\\VWDExpressExtensions\\TypeScript\\__typescriptServices.js__\".\nAfter restarting Visual Studio the \"Compile on Save\" creates the right UTF-8.\n\nNormally writeByteOrderMark is here always false because byteOrderMark is statically set to 0 in this line:\n```\ncompiler.addSourceUnit(fileName, this.hostCache.getScriptSnapshot(fileName), 0 /* None */, this.hostCache.getVersion(fileName), this.hostCache.isOpen(fileName));\n```\n",
      "PostedDate": "2013-06-24T03:24:29.123-07:00",
      "Id": 103912
    },
    {
      "Message": "With 0.9.1 Compile on Save still creates only ANSI js files for me.\nBut after changing \"useUTF8encoding\" to true again, it creates UTF-8 js files.",
      "PostedDate": "2013-07-02T07:23:28.847-07:00",
      "Id": 104859
    }
  ]
}