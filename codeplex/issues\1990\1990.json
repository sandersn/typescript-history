{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:24:23.207-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "```\r\nenum E { v = 1, u = 2 };\r\ninterface I<T> { b: T; }\r\n\r\nfunction f<T>( i: I<T>[] ): T[] { return null; }\r\n\r\nvar ar1 = [ { b: E.v }, { b: E.u } ];\r\nvar x1 = f( ar1 );\r\n\r\nvar x2 = f( [ { b: E.v }, { b: E.u } ] );\r\nvar x3 = f( [ { b: 'b' }, { b: 'a' } ] );\r\n```\r\n\r\nThe `x1` assignment succeeds, and `x1` ends up with a correct type of `E[]`.\r\nThe `x3` assignment also succeeds, but `x3` has type of `{}[]` instead of `string[]`.\r\nThe `x2` assignment fails to compile (red squiggly under `f`), complaining that \"Type {} is missing property 'b' from type I<{}>\".",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-12-08T21:31:05.2-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Type inference fails with inline arrays",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1990
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This shouldn't be an error. Thanks again for the great repros.",
      "PostedDate": "2013-12-09T09:50:39.373-08:00",
      "Id": 126631
    },
    {
      "Message": "Looks like this is no longer an issue in 1.0.1, you can close it out.",
      "PostedDate": "2014-07-15T07:42:24.727-07:00",
      "Id": 152452
    }
  ]
}