{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 2,
    "Custom": null,
    "Description": "When exporting properties on a module like so:\r\n```\r\nmodule MyModule {\r\n    /**\r\n    * @param {number} x A number.\r\n    */\r\n    export var someFunc:(x:number)=>any = (x:number)=> { }\r\n}\r\n```\r\nIntellisense doesn't pick up the parameters of the strongly-typed function variable.  I'm sure there's probably a work around by declaring a signature before the module, but that's not a practical solution for every static function variable.",
    "LastUpdatedDate": "2013-11-19T16:15:05.84-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-09T22:50:37.64-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "no parameter intellisense on function variable",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1773
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "You are seeing my contrived example. Are you dismissing this so quickly? In my actually code this doesn't work (WITH a name).",
      "PostedDate": "2013-10-11T17:15:41.647-07:00",
      "Id": 118212
    },
    {
      "Message": "Your `module` lacks a name; I believe that's what's causing the problem.\n\r\n\r** Closed by RyanCavanaugh 10/11/2013 1:18PM",
      "PostedDate": "2013-10-11T13:18:39.627-07:00",
      "Id": 118213
    }
  ]
}