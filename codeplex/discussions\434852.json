[
  {
    "Id": "1008181",
    "ThreadId": "434852",
    "Html": "Hi,\r<br />\n<br />\nwhy isn't it possible to use &quot;super&quot; in static methods?<br />\n<pre><code>class Foo\n{\n    static fooBar()\n    {\n        \n    }\n}\n\nclass Bar extends Foo\n{\n    static fooBar()\n    {\n        super.fooBar();\n    }\n}</code></pre>\n\nThat gives an error &quot;Keyword 'super' can only be used inside a class instance method&quot;. But why is it so? The compiled code looks so:<br />\n<pre><code>var __extends = this.__extends || function (d, b) {\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Foo = (function () {\n    function Foo() { }\n    Foo.fooBar = function fooBar() {\n    };\n    return Foo;\n})();\nvar Bar = (function (_super) {\n    __extends(Bar, _super);\n    function Bar() {\n        _super.apply(this, arguments);\n\n    }\n    Bar.fooBar = function fooBar() {\n        _super.prototype.fooBar.call(this);\n    };\n    return Bar;\n})(Foo);\n</code></pre>\n\nIs there a way to compile static &quot;super&quot; calls to:<br />\n<pre><code>        _super.fooBar.call(this);</code></pre>\n\ninstead of:<br />\n<pre><code>        _super.prototype.fooBar.call(this);</code></pre>\n\nand add the lines:<br />\n<pre><code>    for(i in b)\n    {\n        d[i] = b[i];\n    }\n    d.parent = b;</code></pre>\n\nto the &quot;__extend&quot;-function?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2013-02-28T06:00:50.067-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]