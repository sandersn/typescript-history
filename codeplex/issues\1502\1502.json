{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "I don't think there's anything we can do on the TypeScript side that would improve the situation any. There are a lot of constraints here and we're doing the best we can with what we have to do.",
    "ClosedDate": "2013-08-15T09:12:34.12-07:00",
    "CommentCount": 6,
    "Custom": null,
    "Description": "The issue tracker for TypeScript has been such a sub-par experience that it is beginning to be off-putting.\r\n\r\nThe most annoying meta-issue, as acknowledged by TS team members, is the lack of workflow support: closing issues to request more information is just sending the wrong message. If it hadn't been for billti's encouraging meta-comment in https://typescript.codeplex.com/workitem/1432, I would have thought no-one cares.\r\n\r\nRelying on votes in an issue tracker that most people stay away from if they can, and that doesn't have good support for staying up to date, is also not a good idea. As an experiment, I'd like to know how many users are going to find this issue, and vote?\r\n\r\nThere are other meta-issues as well, some of which I reported on the codeplex tracker\r\n\r\nhttps://codeplex.codeplex.com/workitem/26557\r\nhttps://codeplex.codeplex.com/workitem/26614\r\n\r\nbut as nothing happens there, that avenue hasn't paid of, either.\r\n\r\nI understand the wish to use an inhouse system, but if that doesn't work properly, and doesn't get fixed, either, then perhaps it is time to switch to a proven-in-practice system? You -and your users- are only getting the disadvantages of an inhouse system so far.",
    "LastUpdatedDate": "2013-08-15T09:12:34.12-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-13T02:38:32.257-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Please fix issue tracking",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 6,
    "Id": 1502
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I'm very sympathetic to this, and we have been discussing internally what we could do better here in the past few weeks. I would absolutely love it if we had a state other than 'closed' for issues that need more information. We've been trying a lot of different things to improve the workflow, but we are working within some very constraining tools and need to be able to manage a ton of work items while still getting some actual engineering done.\n\nWe started out just leaving a comment in work items that need more information. This worked well when we were getting one or two issues a day, but quickly we had dozens of bugs where we were waiting for more information from the person who reported it. Because the tools provide no way to do a query e.g. \"Show me work items where the user edited the post or made a comment after I made an edit\", we got stuck in a state where we had no way other than manually looking through dozens of issues to see if any of them had been updated. We had to switch to something based on the tools so that we could figure out when to look at an issue again.",
      "PostedDate": "2013-08-13T09:33:27.627-07:00",
      "Id": 109623
    },
    {
      "Message": "Looking into Issues/Advanced View, I see a \"Reason Closed\" group, which seems to be almost never used. If you could at least select \"Need More Info\" there whenever that is the \"close\" reason, that would appear in the issue status, and would be searchable. The \"Component\" group is also unused.\n\nStill, it would be better to convince the codeplex team to add more Status entries for this - shouldn't that be fairly simple to do for an inhouse team (modulo the fun of database schema upgrades)?\n\nI understand the need to balance making progress with addressing meta-level issues but sometimes one gets so pinned down by day to day issues that it needs outside input to realize that one should not put up with tools that get in the way.",
      "PostedDate": "2013-08-13T12:46:20.437-07:00",
      "Id": 109694
    },
    {
      "Message": "> the tools provide no way to do a query e.g. \"Show me work items where the user edited the post or made a comment after I made an edit\",\n\nInstead of having to query actively (polling), other trackers allow you to use your email inbox filters for this (waiting for push). Of course, codeplex makes that impossible by not providing proper email headers (trac, eg, uses \"To: mailing list\" for general issues vs \"Cc: you\" for issues you participate in; codeplex addresses everything to \"you\" personally).\n\nThere is a highly voted codeplex issue for this, getting ignored:\n\nCodePlex Mailing Lists 'To' address\nhttps://codeplex.codeplex.com/workitem/25627",
      "PostedDate": "2013-08-13T14:37:34.13-07:00",
      "Id": 109727
    },
    {
      "Message": "There are currently 54 issues with Reason Closed = Need More Info; this field is used very commonly. Older issues don't show this because the \"Reason Closed\" field is a recent addition.\n\nPractically speaking, do you have suggestions about what the TypeScript team can do with the tools that are in place? Listing deficiencies about the CodePlex tools on the TypeScript project page isn't particularly helpful for either team. We already have many outstanding requests with the CodePlex team (and have already gotten many improvements in issue handling implemented), but their resources are also finite.",
      "PostedDate": "2013-08-13T15:45:03.9-07:00",
      "Id": 109754
    },
    {
      "Message": "> There are currently 54 issues with Reason Closed = Need More Info; \n\noops, my mistake - I overlooked a persistent filter that masked these issues in my queries.\n\n> We already have many outstanding requests with the CodePlex team...\n\nWell, I had hoped that there would be resources/will to grow that team to enable it to match the demand, at least as far as requests from other inhouse teams are concerned. But if that isn't the case, then bothering you further on this is no use.\n\n> Practically speaking, ...\n\nAt this stage? Let me put it this way: codeplex is not the first issue tracker I use that doesn't have flexible workflow support, but even trac acquired that a few years ago, IIRC; codeplex is the first issue tracker I've  used that has issue 25627; that issue was reported nearly three years ago; it has attracted three dozen votes and not even a comment/query from the codeplex team; \n\nI can't imagine having to work in an open source project with growing user community where you can't easily keep up to date about traffic on your issues; you listed that as something you have to work around (*); when do you think the codeplex team will get around to fixing what I consider a critical issue? I have to watch my typescript inbox very carefully if I do not want to miss your reactions to my tickets, because I try to glance at all tickets, and codeplex makes no distinction.\n\nFor a long time, I thought you had a separate, internal tracker, with just a few team members monitoring the external codeplex one, promoting selected issues to the internal one. \n\nAs it stands, even github issue tracking would be an improvement (the core tracker is only slightly better, but email notifications work properly, you can follow and label issues, not to mention the community and source code integration that set them apart; they even have an API which people have used to build workflows on). And easy to get, too, since you are open source anyway: just host a clone there and use their issue tracker. When (if) codeplex catches up, you can move the issues back here.\n\n(*) just an idea (ugly workaround), for TypeScript team members: create a separate account, and use that to subscribe only to the issues you follow (or work on), not to the whole project/tracker; then redirect emails from the ticket follower account to your main email in such a way that allows you to filter them away from general project traffic (inbox colour highlighting, separate folders, whatever).\n\nPS: I also suggest to employ the \"components\" group: spec, types, code emitter, module system, ... ",
      "PostedDate": "2013-08-14T02:12:22.5-07:00",
      "Id": 109824
    },
    {
      "Message": "> (*) ... create a separate account ...\n\nActually, turn that idea around: create a couple of mailing lists `typescript-tracker@googlegroups.com` and `typescript-discussions@googlegroups.com`, with `notifications@codeplex.com` as the only subscriber with posting permissions (if you can manage to get it subscribed...). \n\nThen team members and users can all subscribe to those lists on a read-only basis, to follow general project traffic, and subscribe to individual issues and discussions only when we're participating or have a specific interest.\n\nOur email inbox can then be filtered based on address (`To: typescript-tracker`) and sender (not `To: typescript-tracker`, but `From: codeplex`) , and we'll be able to see where we need to take action, even without 25627 fixed.",
      "PostedDate": "2013-08-14T04:38:29.35-07:00",
      "Id": 109853
    }
  ]
}