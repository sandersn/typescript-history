{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting this! The issue has been fixed and can be tried out in the upcoming 0.9.5 release. We also have a beta available (https://typescript.codeplex.com/wikipage?title=TypeScript%200.9.5%20beta) if you'd like to try it out.",
    "ClosedDate": "2013-11-19T13:27:18.61-08:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "I'm referencing a class from within a module called 'X.Y' - at the same time, the constructor has a parameter called 'Y'.\r\n\r\nThis works fine as long as the module definition is in one file.\r\n```\r\nmodule X {\r\n    module Y {\r\n\t\t\r\n\t\tclass A {\r\n\t\t\tconstructor(Y: any){\r\n\t\t\t\tnew B();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tclass B {\r\n\t\t\t\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n```\r\nWhen I split it in two, `new B()` compiles to `new Y.B()` where then `Y` conflicts with the constructor param `Y:any`.\r\n\r\nThe compiler should either try to reference fully using `new X.Y.B()`, or fail on compiling...\r\n\r\n```\r\nexport module X {\r\n    export module Y {\r\n\t\t\r\n\t\tclass A {\r\n\t\t\tconstructor(Y: any){\r\n\t\t\t\tnew B();\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nexport module X{\r\n\texport module Y{\r\n\t\texport class B {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n```",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-20T06:42:29.787-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "(Relative) class reference conflicting with local variable",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 1703
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks, we're taking a look",
      "PostedDate": "2013-09-20T11:47:32.59-07:00",
      "Id": 115173
    },
    {
      "Message": "Workaround is to fully reference the class in ts - that is also correctly compiled to JS.",
      "PostedDate": "2013-09-21T03:03:09.057-07:00",
      "Id": 115226
    },
    {
      "Message": "That's a nice catch.",
      "PostedDate": "2013-09-22T19:01:55.08-07:00",
      "Id": 115306
    }
  ]
}