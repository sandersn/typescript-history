{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2012-10-15T14:30:47.377-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "If you have an array string[] and you call a method like \"some()\" on it, you could automatically infer the type of the first parameter in some() based on the type. The same applies to common other methods like filter().",
    "LastUpdatedDate": "2017-11-27T11:51:35-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-12T02:21:21.113-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Automatically infer types for methods on Array",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 239
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "+1, but it really doesn't make a difference in the compiled code.\n\n",
      "PostedDate": "2012-10-13T13:15:47.287-07:00",
      "Id": 79683
    },
    {
      "Message": "Well, I think TypeScript does not make any difference to the compiled code at all, except for inheritance.",
      "PostedDate": "2012-10-14T00:40:41.83-07:00",
      "Id": 79698
    },
    {
      "Message": "If I'm understanding your suggestion correctly, we already do this:\r\n\r\nvar arr = [ 1, 2, 3 ];\r\narr.some(t => t == '3');\r\n\r\nCompile error at \"t === '3'\" - cannot compare types 'number' and 'string'\r\n\r\nIs there other behavior you're expecting, but not seeing?",
      "PostedDate": "2012-10-15T10:06:40.297-07:00",
      "Id": 79784
    },
    {
      "Message": "Check, you can close.",
      "PostedDate": "2012-10-15T12:02:03.937-07:00",
      "Id": 80010
    }
  ]
}