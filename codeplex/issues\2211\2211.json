{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:27.707-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "Currently it seems that _super_ keyword only accepts methods.\r\n\r\n```\r\nclass Box {\r\n    get byteLength() {//size of the box\r\n        return 4;//type field\r\n        //0 and 1 are special values\r\n    }\r\n    type: string;\r\n    constructor(boxType: string, extendedType?: number) {\r\n        this.type = boxType;\r\n    }\r\n}\r\nclass FileTypeBox extends Box {\r\n    majorBrand = \"mp41\";\r\n    majorVersion = 0;\r\n    compatibleBrands = [\"mp41\"];\r\n    get byteLength() {\r\n        return super.byteLength\r\n            + 4//majorBrand\r\n            + 4//majorVersion\r\n            + 4;//compatibleBrands\r\n    }\r\n    constructor() {\r\n        super(\"ftyp\");\r\n    }\r\n}\r\n```\r\n\r\nOriginally I wanted to do this, but _super_ keyword in TypeScript do not allow using _super.byteLength_.\r\nI should change _get byteLength()_ to _getByteLength()_ and it works well.\r\n\r\nWhy I cannot use property from base class but should only use methods?",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-24T19:58:32.127-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "super keyword with properties",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 3,
    "Id": 2211
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Suggestion for post-1.0.\r\n\r\nSee workaround here http://stackoverflow.com/questions/14444360/how-can-i-access-the-superclass-value-of-a-getter-in-a-subclass",
      "PostedDate": "2014-02-26T12:30:57.363-08:00",
      "Id": 134920
    },
    {
      "Message": "I wish it will work later :) Thank you for the workaround!",
      "PostedDate": "2014-03-17T01:46:04.32-07:00",
      "Id": 137049
    }
  ]
}