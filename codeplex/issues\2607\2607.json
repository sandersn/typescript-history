{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-07-21T17:17:18.57-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "This has been already mentioned in the [minification issue](https://typescript.codeplex.com/workitem/157). However, I decided to extract it into a separate issue.\r\n\r\nSee a proof of concept by Michael Bolin here: http://blog.bolinfest.com/2013/01/generating-google-closure-javascript.html",
    "LastUpdatedDate": "2014-07-21T17:17:18.57-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-07-07T03:02:48.297-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Support the Closure compiler as a compilation target",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 2,
    "Id": 2607
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Just to share my experience on this. We do write in TypeScript, compile to single js file and then perform  advance compilation with closure compiler. For closure compiler, the only issue was Object.defineProperty calls in TypeScript generated js file. Object.defineProperty requires the name of the property in quotation mark which is ignored by closure compiler. So we added a simple program to our build process that replaces Object.defineProperty calls with Object.defineProperties. \n\nFrom there on things worked out. You will get a warning from closure compiler on \"var __extends = this.__extends || function (d, b) {\", which is acceptable. Otherwise compiles with no closure compiler warnings or issues we could find so far. \n\nOur app is over 40000 lines when compiled into a single js. Here is the link to the deployed closure compiled js file: http://www.stark.red/Scripts/red.js\n",
      "PostedDate": "2014-07-07T07:16:04.663-07:00",
      "Id": 151734
    },
    {
      "Message": "Thanks for sharing. Of course, it's already possible to use the Closure compiler with TypeScript. However, the point is that the compiler would be even better at minification if type information were passed to it via appropriate jsdoc comments and other Closure-specific conventions.",
      "PostedDate": "2014-07-07T07:53:50.997-07:00",
      "Id": 151741
    },
    {
      "Message": "If this is done then we can virtually support Unions Types in typescript. See https://typescript.codeplex.com/workitem/1364#CommentContainer29",
      "PostedDate": "2014-07-08T14:42:29.253-07:00",
      "Id": 151871
    },
    {
      "Message": "This issue clearly falls under the topic of [custom emitters](https://typescript.codeplex.com/discussions/549470).",
      "PostedDate": "2014-07-11T15:03:43.797-07:00",
      "Id": 152143
    },
    {
      "Message": "Please re-file this suggestion on GitHub if you don't see an existing issue that matches the request (like a generalized custom emitter issue as mentioned).",
      "PostedDate": "2014-07-21T17:17:15.387-07:00",
      "Id": 153116
    }
  ]
}