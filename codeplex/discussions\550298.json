[
  {
    "Id": "1261786",
    "ThreadId": "550298",
    "Html": "See <a href=\"http://www.typescriptlang.org/Playground#src=import%20x%20%3D%20require('foo')%3B%0A%0Ainterface%20Window%20%7B%0A%09foo%3A%20string%3B%0A%7D%0A%0Awindow.foo%20%3D%20%22hello%22%3B\" rel=\"nofollow\">this example</a>. I'd expect to be able to use window.foo as a string, but window seems to not get typed correctly. Am I missing something? I realize that the import path isn't valid in that example, but that's not the issue at hand - I couldn't figure out how to replicate a working import in the playground, but in my local file that's hitting this issue the import is valid and isn't throwing any errors.<br />\n",
    "PostedDate": "2014-07-01T17:16:23.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262034",
    "ThreadId": "550298",
    "Html": "When you use imports in a file, it changes that file to be an external module.  This changes its namespace from the default namespace to be newly-created namespace for the external module.  To be able to change what is in Window, you need to do so from the global namespace.  You should be able to move the interfaces that augment Window from inside the external module to a .d.ts file that is ///reference'd by the external module.<br />\n",
    "PostedDate": "2014-07-02T09:40:53.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262045",
    "ThreadId": "550298",
    "Html": "Ah yeah, that makes sense - although it is certainly a bit awkward. It would be quite nice to have a way to declare types in the global namespace from inside files that have imports. Thanks for your help!<br />\n",
    "PostedDate": "2014-07-02T10:06:29.433-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]