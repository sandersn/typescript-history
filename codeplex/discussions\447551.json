[
  {
    "Id": "1058679",
    "ThreadId": "447551",
    "Html": "One of the things that has been been holding back my use of Javascript is the lack of serious support for the Date data type. The kinds of applications that I build (involving medical care) require extensive date-time manipulation capability. VBScript, for all of its other limitations, has a robust set of date validation functions (which are locale-independent) as well as numerous functions for date arithmetic - like DateDiff, DateAdd, etc. \r<br />\nThere are a large variety of third-party libraries for date validation in JavaScript, but I don't know of any library that is both 100% robust as well as locale-indepenent (very often, they assume the US mm/dd/yy[yy] format. I'm sure it would not be difficult for the TypeScript team to take advantage of the work already done for VBScript and, after putting a simple wrapper around them, make them part of the TypeScript spec.<br />\n",
    "PostedDate": "2013-06-19T07:22:01.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059191",
    "ThreadId": "447551",
    "Html": "I'm using <a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a> which seems <a href=\"http://momentjs.com/test/\" rel=\"nofollow\">very robust</a>, has all standrard date/time operations, and is localized in several languages. There's also a typescript defintion for moment.js at <a href=\"https://github.com/borisyankov/DefinitelyTyped/tree/master/moment\" rel=\"nofollow\">DefinitelyTyped</a> <br />\n",
    "PostedDate": "2013-06-20T07:25:14.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059200",
    "ThreadId": "447551",
    "Html": "\r\n<p dir=\"ltr\">Sugar.js adds a lot of useful Date functions, as well as Array, Object, etc. Also with DefinitelyTyped support.</p>\r\n",
    "PostedDate": "2013-06-20T07:42:28.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059249",
    "ThreadId": "447551",
    "Html": "\r\n<div style=\"direction:ltr; font-family:Tahoma; color:#000000; font-size:10pt\">\r\n<p>Thanks, went to the sugar site. However, when I experimented with the example on\r\n</p>\r\n<p></p>\r\n<p><a href=\"http://sugarjs.com/dates\">http://sugarjs.com/dates</a></p>\r\n<p></p>\r\n<p>I found that when I entered 5-32-2013, I found that sugar accepted the bad input and assumed June 1. similarly 32-5-2013 (entered in the Canadian/British form) yields Aug 5, 2016. This is the same behavior as in JavaScript itself, but in real life these\r\n should be flagged as data entry errors, because they are likely to be typos or transpositions.</p>\r\n<p></p>\r\n<p>A further test: I changed my browser Language settings to UK (United Kingdom), where mm/dd/yyyy is used. Entering 23-5-2013 (which means 23rd May) yielded Nov 5, 2014. In other words, the Sugar date code does not sense locale.</p>\r\n<p></p>\r\n<p>VBScript, though limited in many ways, is smart enough to sense the Web browser locale and behave accordingly. If you are familiar with it, you can try the above, and then test for correctness using the Month( date-variable) function, which will return 5\r\n if the setting of the browser is En-UK.</p>\r\n<p></p>\r\n<p>These issues are not theoretical. I maintain a Web-enabled clinical information system that supports multi-centric clinical trials, which is being used simultaneously by researchers in the US and Toronto, Canada (which follows the UK system of dates). I\r\n had to use VBScript and locale sensing simply because forcing Canadian users to enter dates in US format would be far too error-prone. VBScript is also smart enough, once it receives date data from a database (hosted in the US) to render dates on Web pages\r\n appropriately in a locale-aware manner. After all, when international users buy stuff on Amazon or E-Bay, or use other web pages, Amazon doesn't force them to enter date data in the US format, or in English.\r\n</p>\r\n<p></p>\r\n<p>The Amazon/Google developers spend significant effort localizing their Web pages. The whole idea of a framework that is supposed to help browser development is that it reduces the effort required to do so.</p>\r\n<p></p>\r\n<p>best regards,</p>\r\n<p>Prakash</p>\r\n<p></p>\r\n<p></p>\r\n<p></p>\r\n<div style=\"font-family:Times New Roman; color:#000000; font-size:16px\">\r\n<hr tabindex=\"-1\">\r\n<div id=\"divRpF458059\" style=\"direction:ltr\"><font color=\"#000000\" size=\"2\" face=\"Tahoma\"><b></b></font></div>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2013-06-20T09:02:38.117-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059276",
    "ThreadId": "447551",
    "Html": "\r\n<div dir=\"ltr\">TypeScript is not a framework though. It's purely a tool on top of JavaScript. If you want a language with a rich standard library, TypeScript isn't it. It is definitely BYOM (bring your own modules), just like JavaScript dev is. It's best to\r\n just find either a JavaScript library that works for you or write your own.</div>\r\n<div><br clear=\"all\">\r\n<div>Andrew Gaspar</div>\r\n<br>\r\n<br>\r\n<div></div>\r\n</div>\r\n",
    "PostedDate": "2013-06-20T09:43:28.843-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059410",
    "ThreadId": "447551",
    "Html": "<strong>Prakash_Nadkarni wrote:</strong><br />\n<blockquote>\nThanks, went to the sugar site. However, when I experimented with the example on   <a href=\"http://sugarjs.com/dates\" rel=\"nofollow\">http://sugarjs.com/dates</a>  I found that when I entered 5-32-2013, I found that sugar accepted the bad input and assumed June 1. similarly 32-5-2013 (entered in the Canadian/British form) yields Aug 5, 2016. This is the same behavior as in JavaScript itself, but in real life these should be flagged as data entry errors, because they are likely to be typos or transpositions.<br />\n</blockquote>\nProgramming languages and convenience libraries don't accept bad input; your application accepts bad input.<br />\n<br />\nIf you want validation of Dates, you need to <em>write</em> validation of Dates. If you want locale-aware date parsing, you need to <em>write</em> locale-aware date parsing, although it's a far better idea not to ask people to enter dates in the hopelessly ambiguous ##/##/## format in the first place.<br />\n<br />\nYou can't expect your <em>programming language</em> to catch these things for you, and even if you're using one that does (like VBScript), you don't just say &quot;here's a thing that might be a date, or not, I haven't bothered to check it&quot; and see if it throws an exception.<br />\n",
    "PostedDate": "2013-06-20T15:59:11.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059692",
    "ThreadId": "447551",
    "Html": "\r\n<div style=\"direction:ltr; font-family:Tahoma; color:#000000; font-size:10pt\">\r\n<p>Andrew,</p>\r\n<p></p>\r\n<p></p>\r\n<p>Thanks for your note. I agree that because Typescript merely generates javascript, so it's handcuffed, in a sense, by what Javascript itself supports. However, there have been other language frameworks - the earliest version of the C&#43;&#43; compiler developed\r\n by Bjarne Stroustrup and his team at Bell Labs, which generated C code rather than native code, springs to mind - where the framework provided an extremely rich type system that the target language did not.</p>\r\n<p></p>\r\n<p></p>\r\n<p>The whole idea of frameworks is supposed to be that 1) they save you programming effort 2) the resulting code is more robust / less error-prone. Given that dates are important in a variety of applications, I'm surprised that TypeScript does not include a\r\n standard set of date manipulation functions as well, which includes the best ideas from the various open-source JavaScript date-manipulation toolkits.</p>\r\n<p></p>\r\n<p></p>\r\n<p>Mark,</p>\r\n<p></p>\r\n<p></p>\r\n<p>&gt;&gt;&gt;If you want validation of Dates, you need to write validation of Dates. If you want locale-aware date parsing, you need to write locale-aware date parsing, although it's a far better idea not to ask people to enter dates in the hopelessly ambiguous ##/##/##\r\n format in the first place. </p>\r\n<p></p>\r\n<p></p>\r\n<p>We also support a study on tropical Leishmaniasis where field data is being gathered in Colombia (which uses Spanish) with the patient samples being processed for special tests at Yale (where English is used). The forms are localized through metadata - question\r\n captions, headings, etc. have both English and Spanish equivalents, so the form is rendered dynamically based on the browser's preferred language settings (nothing fancy - Google and Amazon also do this).\r\n</p>\r\n<p></p>\r\n<p></p>\r\n<p>Your suggestion to use something other than the &quot;hopelessly ambiguous&quot; ##/##/## is not workable: it may be ambiguous to a programmer, but not to the (non-programmer) end-users within a single geographical location who use this format every day of their lives\r\n without being confused, and have no idea of the issues of software localization and couldn't even begin to define the term (and shouldn't be bothered about what is a programmer's issue).</p>\r\n<p></p>\r\n<p></p>\r\n<p>In any case, if you're suggesting something like Jan-23-2013, our code accepts user input in ##/##/##(##) format and then echoes it back in MMM-nn-nnnn format as confirmation. The issue again is that in Spanish, January is Enero, and the three-letter abbreviation\r\n is different. Again, VBScript on the browser renders the correct <br>\r\nMMM-nn-nnnn format without any effort on our part - we don't store month long names or abbreviations in our browser code, because we don't need to.</p>\r\n<p></p>\r\n<p></p>\r\n<p>VBScript uses a rich internal library to do what it does - including sensing of localization information from the client machine. In our code, I end up defining date-validation/presentation functions in VBScript and calling them in JavaScript (at the cost,\r\n of course, of cross-browser compatibility).</p>\r\n<p></p>\r\n<p></p>\r\n<p>The point I'm trying to make is that the developers of VBScript at Microsoft did *something* right (though they did many other things wrong), and I'd hate to see the good part of their effort lost.</p>\r\n<p></p>\r\n<p></p>\r\n<p>&gt;&gt;&gt; I'm starting to wonder if you might have written some of the code I've reviewed recently...</p>\r\n<p></p>\r\n<p></p>\r\n<p>I don't quite know what you're referring to here - I haven't put any code out that's related to this issue - but if this is an attempt at personal invective, it is both inappropriate in this forum and not very effective. One can agree to disagree without\r\n stooping to the level of ad hominem abuse.</p>\r\n</div>\r\n",
    "PostedDate": "2013-06-21T09:06:37.963-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059704",
    "ThreadId": "447551",
    "Html": "\r\n<p dir=\"ltr\">I apologise for the last comment, I actually deleted it on the forum but I guess you got the email version.</p>\r\n<p dir=\"ltr\">VBScript did altogether too much developer hand-holding, and produced a generation of developers ill-equipped to write quality applications without it. I maintain that handling local date formats is the responsibility of the application, or, at\r\n a stretch, a UI framework.</p>\r\n<p dir=\"ltr\">It surely isn't that much effort to write a scrap of JavaScript that will take a string and parse the date correctly.</p>\r\n<p dir=\"ltr\">My recommendation would be to have year, month, day fields and construct the date from those three values, or to provide a nice calendar popup or some similar control for entering dates.</p>\r\n<p dir=\"ltr\">Regardless of all that, the fact remains that TypeScript is in no way the successor to VBScript; it is a compiler providing a thin layer over JavaScript, and as such comes with no runtime libraries, one of which would obviously be necessary to\r\n add functionality such as you propose.</p>\r\n",
    "PostedDate": "2013-06-21T10:02:37.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1329716",
    "ThreadId": "447551",
    "Html": "Hi Prakesh,\r<br />\n<br />\nI agree with you that there is something lacking in JavaScript when it comes to dates.\r<br />\n<br />\nHere's a good way of passing the locale to the client in order to parse the date using the right format.\r<br />\n<br />\n<a href=\"http://stackoverflow.com/a/674570/4504\" rel=\"nofollow\">http://stackoverflow.com/a/674570/4504</a>\r<br />\n<br />\nJust spit back the Accept-Language header or convert it to a JavaScript flag called isDDMMFormat based on the date format for that locale.\r<br />\n<br />\nThen you just have to split the string and parse it:<br />\n<pre><code>var isDDMMFormat = false; // This is generated on the server based on the Accept-Language HTTP header.\nvar year = input.substring(6);\nvar firstNumber = input.substring(2, 0);\nvar secondNumber = input.substring(5, 3);\nvar month = isDDMMFormat ? secondNumber : firstNumber;\nvar day = isDDMMFormat ? firstNumber : secondNumber;\nvar date = new Date(year, month - 1, day);</code></pre>\n\n",
    "PostedDate": "2014-12-08T02:35:06.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]