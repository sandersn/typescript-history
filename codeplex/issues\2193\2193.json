{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:28.097-07:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "I created a new web site project (blank template), and added a .ts file. I have the option for \"Automatically compile TypeScript files which are not part of a project\" enabled.\r\n\r\nTwo observations:\r\n\r\n* The generated .js file is not nested under the .ts file\r\n* Source maps are not generated (The only setting I see is module type)\r\n\r\nAnd here's what I'm really trying to do:\r\n\r\nWe have been using Webstorm for node.js development (on OSX). We are wanting to move to TypeScript, but finding that the Webstorm support isn't really up to par. So, I'm experimenting with parallels + visual studio. I want to be able to point visual studio towards the existing sources (without having to maintain a project file), and using a web site is the easiest way to do that.\r\n\r\nThis works fairly well, but not having control over compiler options and losing file nesting are moderate drawbacks.\r\n\r\nThanks,\r\n\r\nChris",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-19T10:01:08.003-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Additional options for web sites in Visual Studio",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 5,
    "Id": 2193
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Looks like I also need to be able to specify \"noImplicitAny\" on the TS build as well. (I'm wondering if that would cause VS to show implicit any's as errors in the editor...)",
      "PostedDate": "2014-02-19T14:45:45.86-08:00",
      "Id": 134113
    },
    {
      "Message": "If you are using Visual Studio with loose files then you must have a make file of some sort that you run separately which specifies things like compiler options (noImplicitAny and whatever else). How do you imagine VS setting compiler options in this scenario? \r\n\r\nFor compiler options like source maps the toggles are in VS when you right click the project and select properties. Then select the TypeScript Build tab in the project properties and the Debugging section has a checkbox for 'Generate source maps.' If you're using some version before 0.9.5 this stuff might not be there (I forget exactly when it went in).\r\n\r\nWe used to nest the JS under the TS but changed it after user feedback. I believe the issue was one of source control (ie if you check in the TS file and the JS is considered a dependent item there's no way to not have that checked in along with it).",
      "PostedDate": "2014-02-19T17:56:40.22-08:00",
      "Id": 134137
    },
    {
      "Message": "I don't have a project file because I'm using a web site, which doesn't have the same options as a project. The web site is really convenient for me because it just contains whatever files are within the directory (which allows people that don't use VS to also work on the project). I am on version 0.9.5.\n\nYou are correct that we have a separate script that builds all the typescript files. The TypeScript options do already have one of the compiler settings (build modules as AMD or COMMONJS) for files outside of a project. I would imagine the other options would be in the same location. The nice thing about letting VS build files as they're saved is that we don't have to kick off a full build to rerun tests or the server - this is extremely convenient.\n\nYour explanation of not folding makes sense. In my case, we're not using integrated source control with VS. I did try for a few hours but couldn't get it working well enough (we use multiple git repositories checked out into a parent folder). Webstorm handles that setup really well. I'll accept that I'm in the minority with the way I'm trying to use VS here... but an option to group the files would be nice :)",
      "PostedDate": "2014-02-19T19:10:47.057-08:00",
      "Id": 134148
    },
    {
      "Message": "I was looking at integrating https://github.com/evanw/node-source-map-support into my project to translate error call stacks to locations within the typescript code. It seems like I'm going to need the option to generate source maps for typescript files within a website (not in a project) for that to work well during development, though.",
      "PostedDate": "2014-02-25T14:59:55.45-08:00",
      "Id": 134708
    }
  ]
}