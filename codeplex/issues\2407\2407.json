{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "When specifying --out, the resulting js file is the compilation of the non-external module code files (in this case there are none, so it's empty).\n\nSee also https://typescript.codeplex.com/workitem/759",
    "ClosedDate": "2014-04-09T08:51:49.61-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "\r\nSimple example\r\n\r\n# Source \r\n\r\na.ts: \r\n\r\n```typescript\r\ndeclare module 'os' {\r\n    module os {\r\n        export function hostname(): string;\r\n    }\r\n    export = os;\r\n}\r\n```\r\nand b.ts:\r\n```typescript\r\n/// <reference path=\"a.ts\" />\r\n\r\nimport os = require('os');\r\nconsole.log(os.hostname());\r\n```\r\n\r\n# Compile\r\n`tsc --out out.js b.ts --module commonjs`\r\n\r\nThe generated file `out.js` will be __empty.__\r\n\r\n# Desired outcome\r\nWhat it should have: \r\n```javascript\r\nvar os = require('os');\r\nconsole.log(os.hostname());\r\n```\r\n \r\nI've also attached the sample code.",
    "LastUpdatedDate": "2014-04-09T08:51:49.61-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-04-09T03:58:59.137-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "Using --out with js external modules is invalid",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 3,
    "Id": 2407
  },
  "FileAttachments": [
    {
      "FileId": 825634,
      "FileName": "ab.zip",
      "DownloadUrl": ".\\825634"
    }
  ],
  "Comments": []
}