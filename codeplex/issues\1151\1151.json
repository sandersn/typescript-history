{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-06-17T09:20:32.16-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Consider the following code:\r\n\r\n```TypeScript\r\nvar x: string;\r\nfunction test(): string {\r\n\treturn x || 5;\r\n}\r\n```\r\n\r\nI expected there to be a type error on line 3, \"cannot convert 'number' to 'string'\" since the expression may resolve to a number in runtime. There are other variants that result in no type error, for example \"true || 5\" and \"0 || true.\" However, \"0 || 5\" gives the proper type error.\r\n\r\n\r\n",
    "LastUpdatedDate": "2013-06-17T09:20:32.16-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-15T23:03:24.14-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "No type check when using the OR operator",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1151
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "See spec section 4.15.7:\n4.15.7\tThe || operator\nThe || operator permits the operands to be of any type and produces a result that is of the best common type (section 3.10) of the two operand types.\n\nThe best common type of 'string' and 'number' is 'any', and 'any' can be converted to 'string'.\n\nWhen we implement \"no implicit any\", you will be able to have this generate a warning.",
      "PostedDate": "2013-06-17T09:20:28.617-07:00",
      "Id": 103190
    }
  ]
}