{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in the develop branch, b90ce6feb68b ",
    "ClosedDate": "2014-02-26T09:27:25.04-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi,\r\n\r\n__Version:__ 1.0RC\r\n\r\nThe following code\r\n```TypeScript\r\nmodule foo {\r\n    export class Beta {\r\n        private static foo: string;\r\n        private barfoo: string;\r\n        public bar: string;\r\n    }\r\n}\r\n```\r\n\r\nGenerates declarations file \r\n\r\n```TypeScript\r\ndeclare module foo {\r\n    class Beta {\r\n        private static foo;\r\n        private barfoo;\r\n        public bar: string;\r\n    }\r\n}\r\n```\r\n\r\nThe type annotations is missing for both private fields.\r\n\r\nWhen the declarations file is referenced in another project, which has \"no implicit any\" set, we get the compiler error: \"error TS7008: Build: Member 'foo' of object type implicitly has an 'any' type.\"\r\n\r\nI believe the convention was to ignore annotations for private fields. Hence we should ignore private ___static___ fields as well.\r\n\r\nThe workaround is to make `foo` public.\r\n\r\nI'm attaching a simple solution that reproduces the reference error.",
    "LastUpdatedDate": "2014-02-26T09:27:25.04-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-26T03:29:35.343-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Annotation missing in generated declarations for private static field",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2221
  },
  "FileAttachments": [
    {
      "FileId": 807561,
      "FileName": "Foo.zip",
      "DownloadUrl": ".\\807561"
    }
  ],
  "Comments": []
}