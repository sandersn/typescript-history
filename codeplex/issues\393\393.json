{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "fixed",
    "ClosedDate": "2012-11-12T17:30:17.713-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "If an module import is done on a / module it is not found by the compiler. The path below is fixing the problem\r\n--- a/src/compiler/typeChecker.ts\r\n+++ b/src/compiler/typeChecker.ts\r\n@@ -843,7 +843,7 @@ module TypeScript {\r\n                     // Still, normalizing here alows any language services to be free of assumptions\r\n                     var path = getRootFilePath(switchToForwardSlashes(currentFileName));\r\n \r\n-                    while (symbol == null && path != \"\" && path != \"/\") {\r\n+                    while (symbol == null && path != \"\") {\r\n                         idText = normalizePath(path + strippedIdText + \".ts\");\r\n                         symbol = search(idText);\r\n \r\n@@ -866,8 +866,12 @@ module TypeScript {\r\n                         }\r\n \r\n                         if (symbol == null) {\r\n-                            path = normalizePath(path + \"..\");\r\n-                            path = path && path != '/' ? path + '/' : path;\r\n+                            if (path === '/') {\r\n+                                path = '';\r\n+                            } else {\r\n+                                path = normalizePath(path + \"..\");\r\n+                                path = path && path != '/' ? path + '/' : path;                             \r\n+                            }                            \r\n                         }\r\n                     }\r\n                 }\r\n",
    "LastUpdatedDate": "2013-08-13T14:05:33.413-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-11-09T03:08:52.377-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "findSymbolForDynamicModule doesn't find modules in root",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 393
  },
  "FileAttachments": [],
  "Comments": []
}