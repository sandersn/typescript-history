[
  {
    "Id": "954008",
    "ThreadId": "406260",
    "Html": "\r\n<p>correct code:</p>\r\n<p>s:()=&gt;{strokeColor:string;} = () =&gt; { return { strokeColor: 'blue' } }</p>\r\n<p>incorrect:</p>\r\n<p>f:()=&gt;{strokeColor:string;} = () =&gt; {strokeColor: 'blue'}</p>\r\n<p>The compiler doesn't show neither error nor warning in the second case. Is it a bug in the compliler ?</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-12-10T07:40:55.277-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954200",
    "ThreadId": "406260",
    "Html": "\r\n<p>The ES6 committee has determined that in the ambiguous case of the second example, the { } is to always be interpreted as &quot;method body&quot; rather than &quot;object literal&quot;. It's legal syntax here -- a 'goto' label ('strokeColor:') followed by a string literal expression\r\n statement (&quot;'blue'&quot;).</p>\r\n",
    "PostedDate": "2012-12-10T14:49:26.337-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]