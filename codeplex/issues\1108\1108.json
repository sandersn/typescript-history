{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "my-class.ts defines an external module; you need to 'import' it rather than trying to reference it with a  /// <reference>. You can start a forum thread or StackOverflow question if you need more information. Thanks!",
    "ClosedDate": "2013-06-05T10:22:02.02-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm having some problems with accessing classes in scopes when import is used. The code below reproduces this. Removing the import statement clears all warnings. Is this a bug, or am I doing something wrong?\r\n\r\n\r\n$ tsc my-module.ts my-class.ts sample.ts\r\nsample.ts(4,9): The name 'MyClass' does not exist in the current scope\r\nsample.ts(4,9): The name 'MyClass' does not exist in the current scope\r\n\r\n\r\n\r\nCode:\r\n\r\n__my-module.ts__\r\n\r\n```\r\ndeclare module \"my-module\" {\r\n    export function sample(): void;\r\n}\r\n```\r\n\r\n\r\n__my-class.ts__\r\n\r\n```\r\n///<reference path='my-module.ts' />\r\n\r\nimport person = module(\"my-module\");\r\n\r\nclass MyClass\r\n{\r\n    constructor()\r\n    {\r\n        person.sample();\r\n    }\r\n}\r\n```\r\n\r\n\r\n__sample.ts__\r\n\r\n```\r\n///<reference path='my-class.ts' />\r\nclass Sample\r\n{\r\n    test:MyClass;\r\n}\r\n```",
    "LastUpdatedDate": "2013-06-05T10:22:02.02-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-05T04:59:32.843-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "MyClass does not exist in the current scope",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1108
  },
  "FileAttachments": [],
  "Comments": []
}