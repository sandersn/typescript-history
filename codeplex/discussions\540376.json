[
  {
    "Id": "1227523",
    "ThreadId": "540376",
    "Html": "In TypeScript 0.9.5 (not 0.9.7/RC1 due to <a href=\"https://typescript.codeplex.com/workitem/2253\" rel=\"nofollow\">known issues</a>), I'm trying to use addEventListener() &amp; postMessage() inside of the constructor for a Web Worker class.  However, it's not working as I don't see the console message from the posted data, so I'm looking for any suggestions as I've already tried to take into <a href=\"https://typescript.codeplex.com/workitem/2325\" rel=\"nofollow\">this known issue with the library definition</a> which makes self a Window object instead of Worker object.<br />\n<br />\nHere's my example code with my various attempts:<br />\n<br />\n<strong>app.ts file</strong><br />\n<pre><code>class Greeter {\n    start() {\n        var worker = new Worker('worker.js');\n\n        worker.addEventListener('message', (e) =&gt; {\n            console.log('Worker said: ', e.data);\n        }, false);\n\n        worker.postMessage('Hello World');\n    }\n}\n\nwindow.onload = () =&gt; {\n    var greeter = new Greeter();\n    greeter.start();\n};</code></pre>\n\n<strong>worker.ts file</strong><br />\n<pre><code>class Workman {\n    self2: Worker;\n\n    constructor() {\n        // Attempt #1: This fails.\n        /*\n        self.addEventListener('message', function(e) {\n            (&lt;any&gt; self.postMessage)(e.data);\n        }, false);\n        */\n\n        // Attempt #2: This also fails.\n        /*\n        addEventListener('message', (e) =&gt; {\n            (&lt;any&gt; postMessage)(e.data);\n        }, false);\n        */\n\n        // Attempt #3: This also fails.\n        /*\n        var listener = function (e) {\n            (&lt;any&gt; self.postMessage)(e.data);\n        }\n        self.addEventListener('message', listener);\n        */\n\n        // Attempt #4: This also fails.\n        /*\n        var that = this;\n        self.addEventListener('message', that.OnMessage);\n        */\n\n        // Attempt #5: This also fails.\n        /*\n        ((self: Worker) =&gt; {\n            self.addEventListener('message', function (e) {\n                (&lt;any&gt; self.postMessage)(e.data);\n            }, false);\n        });\n        */\n\n        // Attempt #6: This also fails.\n        /*\n        self: Worker;\n        self.addEventListener('message', function (e) {\n            (&lt;any&gt; self.postMessage)(e.data);\n        }, false);\n        */\n\n        // Attempt #7: This also fails.\n        /*\n        this.self2.addEventListener('message', function (e) {\n            (&lt;any&gt; this.self2.postMessage)(e.data);\n        }, false);\n        */\n    }\n\n    OnMessage = (e) =&gt; {\n        (&lt;any&gt; postMessage)(e.data);\n    }\n}\n\n// SUCCESS: This works!\n/*\naddEventListener('message', (e) =&gt; {\n    (&lt;any&gt; postMessage)(e.data);\n}, false);\n*/</code></pre>\n\nNote, in my testing, I only had one addEventListener() section active at a time.<br />\n",
    "PostedDate": "2014-03-27T12:09:57.453-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1229236",
    "ThreadId": "540376",
    "Html": "You might want to take a look at the changes we have done recently in develop to add a new lib.webworker.d.ts. This however will mean that you need to split your code into two sections one for webworker code, and one for everything else. Please see the discussion on [issue#2325] (<a href=\"https://typescript.codeplex.com/workitem/2325\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/2325</a>) for more details.\r<br />\n<br />\nHere is the reference to the change for splitting the library file:\r<br />\n<a href=\"https://typescript.codeplex.com/SourceControl/changeset/5d29bd2b2570bef3e1fe27902f6064c07c8eca22\" rel=\"nofollow\">https://typescript.codeplex.com/SourceControl/changeset/5d29bd2b2570bef3e1fe27902f6064c07c8eca22</a><br />\n",
    "PostedDate": "2014-04-01T17:46:24.827-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1229239",
    "ThreadId": "540376",
    "Html": "How can your code work when you haven't create an instance of your class?  The constructor doesn't run by itself.  Should it not be like this:<br />\n<pre><code>class Workman {\n    constructor() {\n        addEventListener('message', (e) =&gt; {\n            this.OnMessage(e);\n        }, false);\n    }\n\n    OnMessage = (e) =&gt; {\n        (&lt;any&gt; postMessage)(e.data);\n    }\n}\n\nnew Workman();</code></pre>\n\n--- or ---<br />\n<pre><code>class Workman {\n    private static __sctor = (() =&gt; {\n        addEventListener('message', (e) =&gt; {\n            Workman.OnMessage(e);\n        }, false);\n    })();\n\n    static OnMessage = (e) =&gt; {\n        (&lt;any&gt; postMessage)(e.data);\n    }\n}</code></pre>\n\n",
    "PostedDate": "2014-04-01T18:05:20.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1229435",
    "ThreadId": "540376",
    "Html": "@mhegazy:  I understand and I'll keep that in mind then, so thanks for letting me know.\r<br />\n \r<br />\n@jamesnw: Hmm, good point!  I was under the impression that the class's underlying constructor was automatically invoked when creating the Worker object, but that is very likely the reason things aren't working, so I'll give your suggestion a try and thanks for the help.<br />\n",
    "PostedDate": "2014-04-02T05:43:43.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]