{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Since new is a keyword and has special meaning in interfaces (it defines the constructor function), you can not use it as is.\r\n\r\nBut the following is legal and functional the same:\r\n\r\n````\r\n    interface ISomeFactory {\r\n\t \"new\"(str: string): Some;\r\n    }\r\n````\r\n",
    "ClosedDate": "2013-07-12T09:23:22.53-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Well the title says it all - I have a class that have a `new` method - this is completely legal in both javascript and typescript, but I'm not able to define an interface with this method. For now, I just renamed my method, but I think this can be considered some kind of bug.\r\n\r\n#\r\n    interface ISomeFactory {\r\n\t new(str: string): Some;\r\n    }\r\n\r\n    class Some {\r\n\t str: string;\r\n\t constructor(str: string){\r\n\t\tthis.str = str;\r\n\t }\r\n    }\r\n\r\n    class SomeFactory implements ISomeFactory{\r\n\t new(str:string): Some {\r\n\t\treturn new Some(str);\r\n\t }\r\n    }\r\n",
    "LastUpdatedDate": "2013-07-12T09:23:22.61-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-12T02:20:38.603-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Classes can have `new` method but interfaces don't",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1332
  },
  "FileAttachments": [],
  "Comments": []
}