[
  {
    "Id": "1110943",
    "ThreadId": "463238",
    "Html": "While it is nice to spread a module on multiple files, it has a big disadvantage: I cannot use module-internal classes in another file inside the same module. <br />\n<br />\nWorkaround for me: I have to export the class, which breaks the whole idea of private declarations.<br />\n<br />\nOr is there actual a way to acomplish this?<br />\n<br />\nmy sample:<br />\n<br />\nfile1.ts<br />\n<pre><code>module A{\n   class SampleA { ... }\n}</code></pre>\n\nfile2.ts<br />\n<pre><code>module A{\n\n   class SampleB { \n       // this will not work, although it would, if the declarations would be in the same file\n       var a = new SampleA();\n      \n      // wont work either, because SampleA is not exportet\n      var a = new A.SampleA();\n   }\n}</code></pre>\n\n",
    "PostedDate": "2013-10-23T02:12:04.573-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1113870",
    "ThreadId": "463238",
    "Html": "To make the symbols visible across merges, you need to export them from the module.  For example:<br />\n<br />\nfile1.ts<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">module</span> A {\n   <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">class</span> SampleA { }\n}\r\n</pre></div>file2.ts<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">module</span> A {\n\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">class</span> SampleB {\n        <span style=\"color:Blue;\">constructor</span>() {\n            <span style=\"color:Blue;\">var</span> a = <span style=\"color:Blue;\">new</span> SampleA();\n        }\n    }\n    <span style=\"color:Blue;\">export</span> <span style=\"color:Blue;\">var</span> a = <span style=\"color:Blue;\">new</span> SampleA(); \n}\r\n</pre></div>",
    "PostedDate": "2013-10-29T16:24:46.197-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]