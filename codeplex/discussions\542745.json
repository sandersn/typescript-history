[
  {
    "Id": "1235834",
    "ThreadId": "542745",
    "Html": "Hey,\r<br />\n<br />\nwhere can I find the source code for the plugin?\r<br />\n<br />\nThe reason why I am interested in it, is because it seems to run very fast when the plugin compiles when saving in Visual Studio, compared to when I call the compiler myself.\r<br />\n<br />\nSo I am curious about what you do that makes the compiler run so fast.\r<br />\n<br />\nWhen I am compiling only a few hundred lines of code I have to sit and wait for about 40 seconds for it to complete, which is becoming unbearable and I am thinking about switching back to writing in plain JavaScript again.\r<br />\n<br />\nBut if you are able to compile so fast I must be as well.\r<br />\n<br />\nIt seems to not matter with /// &lt;reference&gt; declarations when compiling on save in Visual Studio, but when I compile my files using the compiler they are needed as it will else break - I am thinking that it might be where the speed increase comes from?\r<br />\n<br />\nAny other ideas to speed it up?\r<br />\n<br />\n/ Martin<br />\n",
    "PostedDate": "2014-04-20T01:30:21.353-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1235965",
    "ThreadId": "542745",
    "Html": "you don't have to /// &lt;reference&gt; all the files in VS because by default every file is referencing all other files in the project (in earlier versions, there was a file that referenced all files, and every file referenced that file). So the speed isn't won there.\r<br />\n<br />\nBecause the plugin source isn't open source I can only guess:<br />\n<ul>\n<li>compiled stuff is kept and not compiled again if there were no changes. </li>\n<li>if you switch files the now un-active file is pre-compiled and cached.</li>\n<li>there may be some other minor / major tweeks but these two should bring a huge performance boost.</li>\n</ul>\n",
    "PostedDate": "2014-04-20T14:42:46.99-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1235974",
    "ThreadId": "542745",
    "Html": "I figured out how to improve the speed.\r<br />\nBefore I would run through all .ts files and compile them separately which took an awful lot of time as it seems to be very costly to start the the compiler - about 5-7 seconds per file.\r<br />\n<br />\nNow I combine all the files into one big temporary file and then compile it, and it also takes 5-7 seconds.\r<br />\nSo it seems that it is starting up the compiler that takes all the time, not the actual compiling itself.\r<br />\n<br />\n/ Martin<br />\n",
    "PostedDate": "2014-04-20T15:42:28.253-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1236194",
    "ThreadId": "542745",
    "Html": "The plugin is faster for compile-on-save because it's basically already done the parse/typecheck.  After that, all it needs to do is write out the .js file.<br />\n\r<br />\nYou can get a similar capability on the commandline using the npm-based TypeScript compiler and the --watch feature.  This will watch for changes in the file and run a recompile when files are out of date.\r<br />\n<br />\nWe don't do any caching yet, but we're currently exploring ways to make the compiler faster for future releases.<br />\n",
    "PostedDate": "2014-04-21T08:46:19.337-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]