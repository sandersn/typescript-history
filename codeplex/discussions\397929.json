[
  {
    "Id": "921410",
    "ThreadId": "397929",
    "Html": "\r\n<p>It is sometimes necessary to let the compiler know that a downcast is intended and therefore should not trigger compile time errors. For example:</p>\r\n<p></p>\r\n<pre>class Animal {...}\r\nclass Snake extends Animal {...}\r\nclass Horse extends Animal {...}\r\nfunction foo( animal : Animal )\r\n{ \r\n  if( animal.name == &quot;Snake&quot; ) \r\n  { \r\n    var s : Snake = animal as Snake;&nbsp;</pre>\r\n<pre>    ...\r\n  }\r\n}</pre>\r\n<p></p>\r\n<p>Thanks!</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-10-03T11:32:23.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921419",
    "ThreadId": "397929",
    "Html": "<p>You can use a type assertion. Consider:</p>\r\n<p>var s = &lt;Snake&gt;animal;</p>",
    "PostedDate": "2012-10-03T11:47:23.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921425",
    "ThreadId": "397929",
    "Html": "<p>Oh, I didn't know that - just found it in the documentation!</p>\r\n<p>In other languages 's' becomes null if 'animal' is not a 'Snake' without throwing any errors.</p>\r\n<p>But type assertions would work for me!</p>\r\n<p>Please close this thread.</p>\r\n<p>Thanks,</p>\r\n<p>- Bernd</p>",
    "PostedDate": "2012-10-03T11:54:56.91-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]