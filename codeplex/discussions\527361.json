[
  {
    "Id": "1198914",
    "ThreadId": "527361",
    "Html": "TS supports dictionaries:<br />\n<pre><code>var persons : { [id : string] : Person}</code></pre>\n\nbut I greatly miss a For Each loop that would return the typed instance of such dictionary, like:<br />\n<pre><code>for each (person : Person in persons) {\n   //\n}</code></pre>\n\n",
    "PostedDate": "2014-01-27T03:37:42.277-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1198932",
    "ThreadId": "527361",
    "Html": "TS doesn't really add any extensions to the language per se. When you say TS supports dictionaries, that's because JavaScript does -in the sense that all objects are naturally dictionaries.<br />\n<br />\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\" rel=\"nofollow\">ECMAScript 6 will introduce</a> the <code>for...of</code> statement, which TS will also almost certainly support (because TS is a superset of JS). You can use <code>for...of</code> to iterate over iterable objects or custom types by defining a generator.<br />\n<br />\nHere are a couple of workarounds<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> Person {\n    name: <span style=\"color:Blue;\">string</span>;\n    age:<span style=\"color:Blue;\">number</span>;\n}\n\n<span style=\"color:Blue;\">var</span> persons : { [id : <span style=\"color:Blue;\">string</span>] : Person } = {};\npersons[<span style=\"color:#A31515;\">&quot;a1&quot;</span>] = { name: <span style=\"color:#A31515;\">&quot;foie&quot;</span>, age: 1};\npersons[<span style=\"color:#A31515;\">&quot;a2&quot;</span>] = { name: <span style=\"color:#A31515;\">&quot;gras&quot;</span>, age: 2};\n\n<span style=\"color:Green;\">// ECMAScript 5</span>\nObject\n.keys(persons)\n.map(item =&gt; persons[item])\n.forEach(person =&gt; {\n    \n    console.log(person.name);\n})\n\n<span style=\"color:Green;\">// Prior versions</span>\n<span style=\"color:Blue;\">for</span>(<span style=\"color:Blue;\">var</span> id <span style=\"color:Blue;\">in</span> persons){\n    \n    <span style=\"color:Blue;\">var</span> person = persons[id];\n    console.log(person.name);\n}\r\n</pre></div>See also:<br />\n<br />\n<a href=\"https://typescript.codeplex.com/discussions/430880\" rel=\"nofollow\">https://typescript.codeplex.com/discussions/430880</a><br />\n<a href=\"https://typescript.codeplex.com/workitem/101\" rel=\"nofollow\">https://typescript.codeplex.com/workitem/101</a><br />\n",
    "PostedDate": "2014-01-27T05:00:10.23-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1198952",
    "ThreadId": "527361",
    "Html": "Thanks, \r<br />\n<br />\nsurely one can use the for .. in lop and cast things manually, I can't wait for the TS 1.0.\r<br />\n<br />\nWhat is the right name for this kind of iteration, &quot;for .. of&quot; or &quot;for .. each&quot; and what is the difference?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2014-01-27T06:11:27.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]