{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:41.8-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "Hi,\r\n\r\nThe reference includes mechanism is somewhat faulty and undermines confidence in the type system - in the sense that one cannot be certain that all compilation errors have been correctly identified when multiple projects are built concurrently.\r\n\r\nHere are a some of the issues:\r\n\r\nSilent fails\r\n\r\nIncorrect syntax in the path fails silently in the following circumstances, instead of displaying the red squiggly line:\r\n\r\n\r\nOmitting closing slash (\"/\") in \"/// <reference path=\"file.ts\" />\" When the quotes (\") around the path are missing When the path specifies \".../MyFolder\" instead of \"../MyFolder\"  When a \".js\" extension is accidentally used instead of \".ts\"  Space after path: path = \"file.ts\" does not work (although this doesn't seem to happen consistently)\r\n\r\nBuild issues\r\n\r\n\r\nIf a referenced file is renamed, then projects containing a reference to that file continue to build successfully in spite of the invalid reference.\r\nInvalid reference paths are sometimes only highlighted when the file containing the invalid reference opened.\r\n\r\nGeneral usability issues\r\n\r\n\r\nThe editing of the path is a bit sticky. When an incorrect path is typed in and immediately corrected, the compiler continues to refer to the old path, and in order to force the new path to be recognised it is sometimes necessary to close and reopen the\r\n file. The speed of detection is also rather slow; one finds oneself making an edit and then staring expectantly at the screen waiting to see if something is going to materialise.\r\n\r\n \r\n\r\nThe <reference> include mechanism feels like a leftover from the old JavaScript intellisense system, and TypeScript seems to need something shiny and new - and robust.\r\n\r\nPlease advise.\r\n\r\nThanks.\r\n\r\nNoel",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "TypeScript 0.9.0",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-11-20T08:46:17.15-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "General problems with<reference> includes",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 19,
    "Id": 466
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": ">If a referenced file is renamed, then projects containing a reference to that file continue to build successfully in spite of the invalid reference.\n>Invalid reference paths are sometimes only highlighted when the file containing the invalid reference opened.\n\nWow, thanks for this. It helped me figure out what was wrong with my project. No errors in IDE, many from the compiler tsc.exe. ",
      "PostedDate": "2012-11-22T00:50:22.393-08:00",
      "Id": 82871
    },
    {
      "Message": "Also, appears no absolute or project path support? I tend to organize my JS into folders... pain to be writing ../ all the time and risking issues.",
      "PostedDate": "2012-12-06T15:42:05.347-08:00",
      "Id": 83733
    },
    {
      "Message": "How important is spacing in the reference tag? \n\nI've found that this works:\n\n/// <reference path=\"jquery.d.ts\" />\n\nBut this doesn’t, and the TypeScript compiler doesn’t even let you know what’s wrong, other than the symbols you try to use from the referred file don’t exist.\n\n/// <reference path= \"jquery.d.ts\" />\n\nThe compiler should at the least let the developer know that something is wrong with the reference itself.\n",
      "PostedDate": "2013-01-29T02:42:07.057-08:00",
      "Id": 87644
    },
    {
      "Message": "I second kayub's sentiments on project path support.  \n\nAbsolute paths are supported (e.g. \"/Users/blah/source/js/jquery.d.ts\") though this isn't really a feasible option when multiple developers are involved.  ",
      "PostedDate": "2013-04-19T17:53:12.11-07:00",
      "Id": 97539
    },
    {
      "Message": "I second RupertAvery. I am now using TS 0.8.3.1\n\n/// <reference path=\"jquery.d.ts\" />\ngives me exit error code 1 and 102 warnings.\n\n/// <reference path= \"jquery.d.ts\" />\nworks.\n\nThe bug mentioned by RupertAvery was fixed, but ended up an opposite bug. Should the space between the equal sign and the path so significant?",
      "PostedDate": "2013-05-13T22:36:00.577-07:00",
      "Id": 100129
    },
    {
      "Message": "No. With the extra space, the compiler simply skip without warning. The reason why I did not get compiler error was that I haven't yet written any jQuery statements in ts code.\n\nApparently 0.8.3.1 is not so friendly to jquery.",
      "PostedDate": "2013-05-13T22:49:54.27-07:00",
      "Id": 100130
    },
    {
      "Message": "Removing 0.8.3.1 and installing 0.9 alpha resolved the problem. Now the ts codes with jquery could have intellisense and successful build.",
      "PostedDate": "2013-05-14T02:46:52.003-07:00",
      "Id": 100141
    }
  ]
}