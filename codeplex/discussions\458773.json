[
  {
    "Id": "1097953",
    "ThreadId": "458773",
    "Html": "Hi,\r<br />\nI'm coming from AS3/Java and I'm used to the (Great) packages structure of my projects, and going deeper into TypeScript I've encountered the problem of &quot;How do I structure my projects in TypeScript?&quot;\r<br />\n<br />\nHow would you structure your big projects? when I say &quot;big&quot;, I mean many classes.\r<br />\n<br />\nThe current solution is modules, and nesting the modules...\r<br />\n<br />\nTwo things to consider:<br />\n<ol>\n<li>I want to be able to load parts of my app (Not one big file)</li>\n<li>\nI don't want to put all my classes into huge modules, I want them separated/organized (Like packages)<br />\n</li>\n</ol>\nAny solution out there?\r<br />\nThanks\r<br />\nGil<br />\n",
    "PostedDate": "2013-09-23T02:52:48.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1125448",
    "ThreadId": "458773",
    "Html": "Hello Gil,\r<br />\n<br />\nI do not have an answer for you, but I am seeking the same kind of advice. I am converting a very large Silverlight e-commerce product to HTML5/CSS3 with AngularJS, Bootstrap, and jQuery that is comprised of many separately loadable modules based upon user choices.\r<br />\n<br />\nHave you discovered any good ideas about how to tackle this with Typescript?\r<br />\n<br />\nUnfortunately, it does not look like there are many users here...\r<br />\n<br />\nThanks,\r<br />\n<br />\nWarren<br />\n",
    "PostedDate": "2013-11-17T12:11:01.167-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1125892",
    "ThreadId": "458773",
    "Html": "Nop, still struggling with that...\r<br />\nThe problem is that it's based on Modules, and not packages...\r<br />\n<br />\nYou can use AMD to load your modules, but new problems with raise, like the file name does not match the class name (As we're used to on packages), or that you can't separate the module into several files and still inherit classes.\r<br />\n<br />\nLet me know if anything comes up.\r<br />\n<br />\nGil Amran<br />\n",
    "PostedDate": "2013-11-18T00:48:59.783-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1126271",
    "ThreadId": "458773",
    "Html": "I've done it several different ways, and I'm not happy with any of them. On my first project, I used AMD to load my modules dynamically at dev time, and then used &quot;r.js&quot; to merge everything together for rollout to production. But it was brittle and clunky as hell, introduced a dependency on nodejs to my build process, and took forever to get working right. And for some reason that I can't entirely recall, I needed to maintain three different versions of my load js files: one for loading in dev, one for running unit tests, and one for optimizing via r.js.\r<br />\n<br />\nI'm not much happier with the way that I'm doing it now, but it's maybe a little cleaner in some ways. I'm doing all my compiling via tsc.exe (though I'm still editing everything in Visual Studio), I manually maintain my .cmd build files, and I've abandoned AMD modules entirely. I miss the tight Visual Studio integration, but it's a lot simpler to maintain.\r<br />\n<br />\nI've read in other posts that the team is planning to resolve this sort of thing in the future, perhaps by means of something like a TypeScript project that can get included in web projects via something like an assembly reference. \r<br />\n<br />\nAll that said, the bad news is that there certainly doesn't seem to be any one great way to do it now. The good news is that there's half a dozen not-quite-100% crappy ways to do it.<br />\n",
    "PostedDate": "2013-11-18T15:16:07.253-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1126295",
    "ThreadId": "458773",
    "Html": "smithkl42,\r<br />\n<br />\nThanks, I am not surprised by your response. \r<br />\n<br />\nI have read scores of blogs and articles, downloaded/looked at 10-15 project examples, viewed many videos, and the only conclusion I have reached is that everyone seems to be doing their own thing using a very wide variety of tools and ad hoc processes. Maybe that's to be expected considering the infancy of the technologies.\r<br />\n<br />\nRegards,\r<br />\n<br />\nWarren<br />\n",
    "PostedDate": "2013-11-18T16:16:51.21-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]