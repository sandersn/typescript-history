[
  {
    "Id": "1221674",
    "ThreadId": "538699",
    "Html": "TypeScript's official doucment seldom talks about Header file, it only &quot;roughly&quot; tells us the usage of header file and we can download them when necessary from GitHub (some specific links)……<br />\n<br />\nSo I have several questions：<br />\n<br />\n1) If I have a ts source file and I use tsc --d to compile that and a header file is created. So <strong>can I delete the ts source file but just keep the generated header file and the source file's js file?</strong><br />\n<br />\n   2) <strong>How to define a header file for a js?</strong> I don't want to use tsc——because it must need a ts source file, but sometimes many projects are directly written in js files (we don't have ts files at all)？Can you guide me by providing some samples in details? You see that for the jQuery, the GitHub has defined with &quot;interface……&quot;, but sometimes we define it like &quot;declare class……&quot;,ect. So How? What's the general rules? I'm feeling puzzled....<br />\n<br />\n   3) <strong>Why should we use the header file?</strong> I still cannot understand because we can directly use a ts file instead of a header one. Can someone tell me the MOST benifits I can fetch from a header file?<br />\n<br />\n   4) <strong>How a header file finds out the source file and do linking compile?</strong> Is there a rule (e.g: Header file's name must be the same as that of a source file of js? or saving position rules?) E.g: After installing lib.d.ts, when we begin to use that, we can directly use that without more imports, so how the lib.d.ts finds out and link to the source file in TypeScript? <br />\n<br />\n __  5) A suggestion：Hope the document tells us a general method or way about converting a js file to a ts one manually (NOT USE ANY OTHER TOOLS) in detail steps.__<br />\n",
    "PostedDate": "2014-03-11T19:10:05.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1222001",
    "ThreadId": "538699",
    "Html": "1) It should be possible to do so, as the .d.ts file should represent the API of the .ts file.<br />\n\r<br />\n2) You have to write .d.ts files by hand to create .d.ts files for JavaScript.  You can find a number of examples at DefinitelyTyped: <a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped</a>  Reading through the code here should give you a start.  For working with JavaScript, you'll largely be using interfaces.  'declare' may also be used, it's a way of saying that something is visible to the script but is external to the script.\r<br />\n<br />\n3) You generally use .d.ts files to describe JavaScript libraries, or as a type information for components you've separately compiled.<br />\n\r<br />\n4) You have to reference .d.ts files by hand.  lib.d.ts is the only &quot;automatic&quot; one, the rest must either be part of your project your referenced by you manually.\r<br />\n<br />\n5) I like the suggestion.  We're currently working one documentation here, and that could be something we create: <a href=\"https://typescript.codeplex.com/wikipage?title=TypeScript%20Documentation\" rel=\"nofollow\">https://typescript.codeplex.com/wikipage?title=TypeScript%20Documentation</a><br />\n",
    "PostedDate": "2014-03-12T11:06:21.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-03-12T18:45:18.407-07:00"
  },
  {
    "Id": "1222224",
    "ThreadId": "538699",
    "Html": "JONTUNER：Many thanks!<br />\n",
    "PostedDate": "2014-03-13T00:46:18.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]