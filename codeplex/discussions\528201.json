[
  {
    "Id": "1200249",
    "ThreadId": "528201",
    "Html": "When trying to use some JavaScript patterns that I'm familiar with, I often ends up being confronted to the following problem :<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">class</span> Component&lt;T&gt; {\n    state: T;\n    \n    setState(t: T) {\n        <span style=\"color:Blue;\">this</span>.state = t;\n        <span style=\"color:Blue;\">this</span>.render();\n    }\n    \n    render() {\n            \n    }\n}\n\n\n<span style=\"color:Blue;\">interface</span> Property&lt;T&gt; {\n    getValue(): T;\n}\n\n<span style=\"color:Blue;\">class</span> ReactiveComponent&lt;T&gt; <span style=\"color:Blue;\">extends</span> Component&lt;T&gt; {\n    setValueProps(values: { [prop: <span style=\"color:Blue;\">string</span>]: Property&lt;<span style=\"color:Blue;\">any</span>&gt; }) {\n        <span style=\"color:Blue;\">this</span>.setState(&lt;T&gt;Object.keys(values).reduce((state, property) =&gt; {\n            state[property] = values[property].getValue();\n            <span style=\"color:Blue;\">return</span> state; \n        }, {}))\n    }\n}\r\n</pre></div>I would like to have the possibility to say that the <code>values</code> parameter of the <code>setValuesProps</code> should have a relation with <code>state</code>, without any possibility to do so.<br />\n<br />\nIn the same way I would like to be able to say that a method take a 'property' of an interface/class as parameter and typeof this property as return value, like for example with backbone-like model :<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> Contact {\n    name: <span style=\"color:Blue;\">string</span>;\n    age: <span style=\"color:Blue;\">number</span>;\n}\n\n<span style=\"color:Blue;\">interface</span> Model&lt;T&gt; {\n    set(name: <span style=\"color:Blue;\">string</span>, value: <span style=\"color:Blue;\">any</span>): <span style=\"color:Blue;\">void</span>\n    <span style=\"color:Green;\">// I would like to be able to tell to the compiler that name should be a </span>\n    <span style=\"color:Green;\">// property of contact  and that value should be typed to the type of this property</span>\n}\n\n<span style=\"color:Blue;\">var</span> contactModel: ModelContat\ncontactModel.set(<span style=\"color:#A31515;\">&#39;name&#39;</span>, 40) <span style=\"color:Green;\">// give an error</span>\r\n</pre></div>Perhaps a notation like :<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">interface</span> Model&lt;T&gt; {\n    set&lt;U propertyof T, V <span style=\"color:Blue;\">typeof</span> U &gt;(name: U, value: V): <span style=\"color:Blue;\">void</span>\n}\r\n</pre></div>Could resolve some of this problems, but not the first one .<br />\n<br />\nDoes someone have workaround/ideas to describe this kind of pattern? <br />\nDoes the TypeScript team has plan/idea of future feature that could solve the cases presented here ?<br />\n",
    "PostedDate": "2014-01-28T18:07:22.333-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]