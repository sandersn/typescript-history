{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:46:54.237-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "The compiler raises a semantic diagnostic (*error TS2162: Rest parameters must be array types.*) when trying to declare a variable of a function type with a rest parameter and compiling without the lib.d.ts.\r\n\r\nI am not sure if this behavior is intended, because an equivalent function declaration compiles without any errors.\r\n\r\nFor example, given a file *test.d.ts* with the following declaration\r\n```\r\ndeclare var f: (...rest: number[]) => number;\r\n```\r\n\r\ncompiling the file without lib.d.ts will result in an error\r\n```\r\n$ tsc --nolib test.d.ts\r\ntest.d.ts(1,17): error TS2162: Rest parameters must be array types.\r\n```\r\n\r\nCompiling the file with lib.d.ts does not produce any errors.\r\n\r\nAlso, the following declaration does not produce any errors when compiled without lib.d.ts.\r\n```\r\ndeclare function f(...rest: number[]):number;\r\n```\r\n",
    "LastUpdatedDate": "2014-07-21T13:46:54.237-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-07-16T11:52:18.273-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Unable to declare rest parameter when compiling without lib.d.ts",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2627
  },
  "FileAttachments": [],
  "Comments": []
}