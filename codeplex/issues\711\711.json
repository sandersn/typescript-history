{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed in 0.8.3.0",
    "ClosedDate": "2013-03-01T09:16:13.423-08:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "There seems to be regression in the 0.8.2 compiler due to scope confusion within get/set properties.\r\n\r\nThis will no longer compile:\r\n\r\n```\r\npublic set value(value: number) {\r\n    this._value = value;\r\n}\r\n\r\npublic get keys(): string[] {\r\n    return keys(this._obj);\r\n}\r\n```\r\nIn the first example, the compiler thinks the local \"value\" parameter is referring to the \"this.value\" property.\r\n\r\nError\t1\tCannot convert '(value: number) => any' to 'number'\t\r\n\r\nSimilarly, in the second example, I am calling a global \"keys\" function that happens to have the same name as the \"this.keys\" property name.\r\n\r\nError\t2\tSupplied parameters do not match any signature of call target\r\n",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-09T09:02:30.07-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Compiler fails due to scope confusion in properties",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 711
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for reporting this, marking as active which means we're taking a look at it.",
      "PostedDate": "2013-02-11T10:38:33.113-08:00",
      "Id": 89051
    }
  ]
}