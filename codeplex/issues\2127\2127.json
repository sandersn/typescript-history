{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We actually changes the behavior here and the sample works as you expect in the current develop branch.",
    "ClosedDate": "2014-01-24T16:11:28-08:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "```\r\nclass A {\r\n    constructor(a: A = null) { }\r\n}\r\n\r\nclass B extends A {\r\n    constructor(a: A, x : number = 0) { super(a); }\r\n}\r\n\r\nvar type: typeof A = B; // <= Fails, because \"a: A = null\" is supplied for class A.\r\n```\r\n\r\nThis should work, as all valid types are given.  Just because I actually REQUIRE something in a derived level is no reason to invalidate the signature.  In fact, the only difference is the derived type will have an explicitly given value (of the same expected type).",
    "LastUpdatedDate": "2014-03-31T16:13:06.823-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-01-24T13:15:52.933-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Potential bug: constructor signatures of base class and derived class fail if optional value specified",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2127
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "And yes, I know if I give \"a?: A\" for the class B constructor it would work, but I want to enforce the requirement for derived classes, which is partly the point.",
      "PostedDate": "2014-01-24T13:18:23.63-08:00",
      "Id": 131529
    },
    {
      "Message": "Cool beans! :) Thanks.",
      "PostedDate": "2014-01-25T09:31:38.323-08:00",
      "Id": 131574
    }
  ]
}