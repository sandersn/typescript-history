[
  {
    "Id": "920805",
    "ThreadId": "397770",
    "Html": "\r\n<p>Let's say I have the following class definition in base.ts:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>export <span style=\"color:blue\">class</span> Base {\n...\n}\n</pre>\r\n</div>\r\n<p>And in derived.ts, I define the following class:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>import Base = module(<span style=\"color:#a31515\">&quot;base&quot;</span>);\n\nexport <span style=\"color:blue\">class</span> Derived extends Base.Base {\n...\n}\n</pre>\r\n</div>\r\n<p>If i define all classes in separate files, then I have to import plenty of modules, all with different names. In this example, I named the module &quot;Base&quot;, so in order to access the imported class &quot;Base&quot;, I have to type &quot;Base.Base&quot;. Instead, I'd like to be\r\n able to import classes anonymously, so I can access an imported class by its name alone instead of having to do &quot;Module.Class&quot;. Is this possible?</p>\r\n",
    "PostedDate": "2012-10-02T12:23:12.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "920918",
    "ThreadId": "397770",
    "Html": "\r\n<p>It gets even worse when I declare my class inside a module, e.g. to simulate namespaces:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>export Module {\n\texport <span style=\"color:blue\">class</span> Base { \n\t\t...\n\t}\n}</pre>\r\n</div>\r\n<p>Now I have to access the exported class like this:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>import Base = module(<span style=\"color:#a31515\">&quot;base&quot;</span>); \n\nexport <span style=\"color:blue\">class</span> Derived extends Base.Module.Base { \n\t...\n}\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Is there no way around this?</p>\r\n<p>Thank you!</p>\r\n",
    "PostedDate": "2012-10-02T15:30:13.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921168",
    "ThreadId": "397770",
    "Html": "<p>Well, this works:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: gray;\">///</span><span style=\"color: green;\"> &lt;reference path=\"./base.ts\" /&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Now I can reference class Base directly. However, it only works if I remove the export keyword. Why is that?</p>",
    "PostedDate": "2012-10-03T03:59:13.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "921589",
    "ThreadId": "397770",
    "Html": "<p>See my reply to your other thread at <a href=\"http://typescript.codeplex.com/discussions/397862\">http://typescript.codeplex.com/discussions/397862</a>.&nbsp; When you use import you are using a different module system entirely. I doubt you want to factor every class into a separate external module.</p>",
    "PostedDate": "2012-10-03T17:03:45.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]