{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "When a source file contains 'export' declarations at top-level it is considered an external module (regardless of how it is subsequently referenced). External modules should always be imported with 'import' declarations, otherwise you won't have an alias through which you can reference the contents of the external module. \n\nIt is not meaningful to use /// <reference> with an external module. It will include the module in the compilation, but unless you also 'import' it there is no way to reference it.",
    "ClosedDate": "2013-10-01T17:58:41.773-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "It appears that when a \".d.ts\" contains an `export` keyword it cannot be referenced in another file (via <reference>), for example this declarations file cannot be referenced:\r\n\r\n```TypeScript\r\ndeclare class Bar { }\r\ndeclare function Foo2(bar: string): void;\r\nexport declare function Foo(bar: string): void;\r\n```\r\n\r\nThis works:\r\n\r\n```TypeScript\r\ndeclare class Bar { }\r\ndeclare function Foo2(bar: string): void;\r\n// export declare function Foo(bar: string): void;\r\n```\r\n\r\nThis may well be a bug.",
    "LastUpdatedDate": "2013-10-01T17:58:41.773-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-01T11:43:01.543-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Imports in a reference file.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1746
  },
  "FileAttachments": [],
  "Comments": []
}