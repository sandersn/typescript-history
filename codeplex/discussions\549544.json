[
  {
    "Id": "1259272",
    "ThreadId": "549544",
    "Html": "Hi,<br />\n<br />\nI am having problems extending Object.prototype using interface in the presence of DefinitelyTyped definitions. The following code :-<br />\n<pre><code>/// &lt;reference path=&quot;node/node.d.ts&quot; /&gt;\n\nimport path = require('path');\n\ninterface Object {\n    deepClone():Object;\n}\n\nfunction getFileExtension(filename:string) {\n    return path.extname(filename).split(&quot;.&quot;)[1];\n}\n\nObject.prototype.deepClone = function() {\n    var that = new Object();\n    for (var key in this) {\n        if (this.hasOwnProperty(key)) {\n            if (typeof this[key] == &quot;object&quot;)\n                that[key] = this[key].deepClone();\n            else\n                that[key] = this[key]\n        }\n    }\n    return that;\n}\n</code></pre>\n\nproduces the following error :-<br />\n<pre><code>error TS2094: The property 'deepClone' does not exist on value of type 'Object'.\n</code></pre>\n\nWhile removing the import, and leaving the node definition :-<br />\n<pre><code>/// &lt;reference path=&quot;node/node.d.ts&quot; /&gt;\n\n//import path = require('path');\n\ninterface Object {\n    deepClone():Object;\n}\n\nObject.prototype.deepClone = function() {\n    var that = new Object();\n    for (var key in this) {\n        if (this.hasOwnProperty(key)) {\n            if (typeof this[key] == &quot;object&quot;)\n                that[key] = this[key].deepClone();\n            else\n                that[key] = this[key]\n        }\n    }\n    return that;\n}\n</code></pre>\n\n<h2>This compiles okay. I don't know whether this is a problem with TypeScript or the DefinitelyTyped definitions, but it looks like its a TypeScript problem as I could not find any other 'interface Object' definitions anywhere. It looks like as soon as modules and imports are brought into the equation that Object, becomes fixed, yet there are no error messages on my Objects interface definition, yet there are errors on the actual function definitions.</h2>\nAaron<br />\n",
    "PostedDate": "2014-06-24T08:10:09.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1259273",
    "ThreadId": "549544",
    "Html": "Hi,<br />\n<br />\nI am having problems extending Object.prototype using interface in the presence of DefinitelyTyped definitions. The following code :-<br />\n<pre><code>/// &lt;reference path=&quot;node/node.d.ts&quot; /&gt;\n\nimport path = require('path');\n\ninterface Object {\n    deepClone():Object;\n}\n\nfunction getFileExtension(filename:string) {\n    return path.extname(filename).split(&quot;.&quot;)[1];\n}\n\nObject.prototype.deepClone = function() {\n    var that = new Object();\n    for (var key in this) {\n        if (this.hasOwnProperty(key)) {\n            if (typeof this[key] == &quot;object&quot;)\n                that[key] = this[key].deepClone();\n            else\n                that[key] = this[key]\n        }\n    }\n    return that;\n}\n</code></pre>\n\nproduces the following error :-<br />\n<pre><code>error TS2094: The property 'deepClone' does not exist on value of type 'Object'.\n</code></pre>\n\nWhile removing the import, and leaving the node definition :-<br />\n<pre><code>/// &lt;reference path=&quot;node/node.d.ts&quot; /&gt;\n\n//import path = require('path');\n\ninterface Object {\n    deepClone():Object;\n}\n\nObject.prototype.deepClone = function() {\n    var that = new Object();\n    for (var key in this) {\n        if (this.hasOwnProperty(key)) {\n          if (typeof this[key] == &quot;object&quot;)\n                that[key] = this[key].deepClone();\n            else\n                that[key] = this[key]\n        }\n    }\n    return that;\n}\n\n</code></pre>\n\n<h2>This compiles okay. I don't know whether this is a problem with TypeScript or the DefinitelyTyped definitions, but it looks like its a TypeScript problem as I could not find any other 'interface Object' definitions anywhere. It looks like as soon as modules and imports are brought into the equation that Object, becomes fixed, yet there are no error messages on my Objects interface definition, yet there are errors on the actual function definitions.</h2>\nAaron<br />\n",
    "PostedDate": "2014-06-24T08:14:18.18-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1259275",
    "ThreadId": "549544",
    "Html": "DefinitelyTyped website :-\r<br />\n<br />\n<a href=\"http://definitelytyped.org/\" rel=\"nofollow\">http://definitelytyped.org/</a><br />\n<h2><a href=\"https://github.com/borisyankov/DefinitelyTyped\" rel=\"nofollow\">https://github.com/borisyankov/DefinitelyTyped</a></h2>\nAaron<br />\n",
    "PostedDate": "2014-06-24T08:19:42.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1259726",
    "ThreadId": "549544",
    "Html": "Moved to be an issue.<br />\n",
    "PostedDate": "2014-06-25T08:38:11.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]