{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "https://typescript.codeplex.com/workitem/1178",
    "ClosedDate": "2013-07-01T10:24:41.883-07:00",
    "CommentCount": 2,
    "Custom": null,
    "Description": "#Problem:\r\n\r\n```\r\ngroupBy<T, U>(\r\n\t\tlist: T[],\r\n\t\titerator: (element: T, index?: number, list?: T[]) => U,\r\n\t\tcontext?: any): { [key: string]: T[]; };\r\n```\r\n\r\nError\t1\tCould not find symbol 'T'.\r\n\r\nwhere the T it cannot find is within the return object -> { [key: string]: __T__ []; };\r\n\r\n#Expected Result\r\n\r\nThe object being returned can contain generic references, in this case it is for underscore.js groupBy that returns an object that has keys (group by) and then each group has an array of items of T from the original list: T[].\r\n\r\nIf I change the return type to { [key: string]: any[] } it works perfectly, but this is losing types since the any[] should be T[].",
    "LastUpdatedDate": "2013-08-13T09:41:28.09-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-28T15:11:58.723-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Duplicate"
    },
    "Summary": "Object return type with generic T: could not find symbol",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1276
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Apparently it works on a class definition that has the <T>, but not on a function in the example given above.\n\n```\ndeclare class _<T> {\n\n\tgroupBy<TSort>(\n\t\titerator: (element: any, index?: number, list?: any[]) => TSort,\n\t\tcontext?: any): { [key: string]: T[]; };\n```",
      "PostedDate": "2013-06-28T18:03:03.27-07:00",
      "Id": 104626
    },
    {
      "Message": "Missed the duplicate.. thanks.",
      "PostedDate": "2013-07-01T11:21:07.627-07:00",
      "Id": 104780
    }
  ]
}