{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:42.3-07:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "I have the following line of code to interface with a JS host app:\r\n\r\n```\r\ndeclare var host: IHostBridge;\r\n\r\n```\r\nHowever, I want to break down certain host functionality into a series of multiple files, so I have another .ts file that needs to RE-declare the \"host\" type.  Repeating the line above in a subsequent file causes a compiler error.\r\n\r\nI propose to allow the compiler to accept multiple \"declare var\" scenarios in these cases (at the very least, allow re-defining the variable with a new derived interface that extends from the same type, then take the MOST derived type).\r\n\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-25T14:29:50.593-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Re-declare Variables to a more strict type",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 1392
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Which version of the compiler are you using?",
      "PostedDate": "2013-07-25T15:07:06.833-07:00",
      "Id": 107473
    },
    {
      "Message": "And can you give a more complete example of what you're trying to achieve?",
      "PostedDate": "2013-07-25T15:08:46.97-07:00",
      "Id": 107476
    },
    {
      "Message": "Here's a good example, in lib.d.ts there is the line:\n\n``` Typescript\ndeclare var global: any\n```\n\nBut in certain parts of my code I want to define global more restrictively so that I can get good intellisense during the file (error protection :P)\n\n``` Typescript\ndeclare var global: {\n    [index: string]: any;\n    debugmode: boolean;\n    //etc...\n}\n```\n\nAs the resulting/redeclared object is a derivative of the original declaration (any) then the compiler could use the redeclared object instead.\n\nDoes that help?",
      "PostedDate": "2013-07-25T20:41:38.7-07:00",
      "Id": 107504
    },
    {
      "Message": "Whoops, that should say node.d.ts. And where the redeclarations are, the files are also using node.d.ts",
      "PostedDate": "2013-07-25T20:43:06.06-07:00",
      "Id": 107505
    },
    {
      "Message": "^ Yes, what he said. LOL. ;)",
      "PostedDate": "2013-07-25T21:35:48.12-07:00",
      "Id": 107509
    },
    {
      "Message": "Marking this as a suggestion and assigning to Jon.",
      "PostedDate": "2013-07-26T10:28:59.453-07:00",
      "Id": 107582
    },
    {
      "Message": "By the way, this proposal will solve the need for this other one I posted as well: https://typescript.codeplex.com/workitem/1386",
      "PostedDate": "2013-07-26T11:17:48.61-07:00",
      "Id": 107595
    }
  ]
}