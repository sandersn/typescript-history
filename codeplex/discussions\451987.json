[
  {
    "Id": "1075151",
    "ThreadId": "451987",
    "Html": "In Issue 1401 I asked If is correct to try to generate the .d.ts from any .js file and the answer that RyanCavanaugh gave is that this is not a supported scenario.\r<br />\n<br />\n<br />\nConsidering that any javascript file can be compiled as one typescript file, what is the fastest way to create a d.ts file from a javascript?\r<br />\n<br />\nI know it's not typed, but after this first creation I'll type the d.ts file.<br />\n",
    "PostedDate": "2013-07-31T08:32:35.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1075605",
    "ThreadId": "451987",
    "Html": "By renaming .js to .ts and compiling with --declaration.  I believe that if your .js files are valid, what comes out of a compile after doing a rename to .ts should also be a valid .d.ts file.  You may have to fix up a couple type errors, but other than that it should work.<br />\n",
    "PostedDate": "2013-08-01T08:00:25.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1076965",
    "ThreadId": "451987",
    "Html": "Why I can't generate the declaration file from <a href=\"http://mathjs.org/js/lib/math.js\" rel=\"nofollow\">http://mathjs.org/js/lib/math.js</a>.\r<br />\n<br />\nI downloaded the latest version of typescript, downloaded this lib, renamed it to .ts but when I try to generate, the js file is generated, i used this command\r<br />\n<br />\ntsc --declaration math.ts<br />\n",
    "PostedDate": "2013-08-05T15:40:22.29-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1077275",
    "ThreadId": "451987",
    "Html": "I should have stressed earlier that you would have to fix up the type errors.  You won't be able to just rename .js and get useful .d.ts out.  If you could, in all honesty, we wouldn't need TypeScript.  The compiler can't infer all the types accurately, so when you're converting JS over, you're going to have to give that information.  In some cases, there will be relatively few such type errors to fix.  Other times, there are a lot more.  It's just based on the style the JS is written in.<br />\n\r<br />\nIn looking at math.js, I can see that it used a lot of expando style JS.  For example, towards the bottom there are a log of math.docs.xxx = ??? lines.  You would need to supply the type information for these in the current version of TypeScript (in the future, we may do more to help infer these patterns better).\r<br />\n<br />\nThe short of it is that almost all .d.ts files are written by hand because you are the one with the best understanding of what the API should be.  The compiler can take a guess, but it's meant to work with type information, and you'll need to supply that where it's needed.  \r<br />\n",
    "PostedDate": "2013-08-06T07:47:43.45-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]