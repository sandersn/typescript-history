[
  {
    "Id": "1012949",
    "ThreadId": "436050",
    "Html": "When I was browsing through the history of different Git branches, there seem to be more activities than a few months back. Still not much communication on these forums about what is going on, but that is perhaps because everyone in the team is trying hard to land the 0.9.x ASAP ;)<br />\n<br />\nWhat I noticed for the 0.9.x branch so far:<br />\n<ul>\n<li>Added support for generics</li>\n<li>New style enumerator, they now look more like plain JS objects</li>\n<li>Some language service additions </li>\n<li>Big overhaul of the parser (pull based)</li>\n<li>\nUpdated import syntax for modules. This one I'm not 100% sure, since I only noticed one test case for this and that one didn't compile for me. So perhaps not yet in 0.9.x?<br />\n</li>\n</ul>\nAre there other major changes planned for the first 0.9 release that is missed?<br />\n",
    "PostedDate": "2013-03-10T07:17:13.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1013358",
    "ThreadId": "436050",
    "Html": "I too am watching the branch, though CodePlex's interface makes it difficult to watch for backwards incompatible changes to the items I care about (basically AST and compiler interface), so I find myself doing fresh checkouts regularly. I do see that string[] is equivalent to Array&lt;string&gt; which makes me so very happy, yet the &quot;new&quot; syntax (e.g. var a = new string[] vs var a: string[] = []) for arrays seems to be removed. Also seems like you can assign to &quot;export&quot; maybe making it easier to create node modules. It is a little cryptic following changes.<br />\n",
    "PostedDate": "2013-03-11T09:59:46.023-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1013735",
    "ThreadId": "436050",
    "Html": "\r\n<div>It looks like the generics are coming along nicely and will provide most of the features that have been requested so far.\r\n<br>\r\n<br>\r\nAnd I agree it is tricky to follow what is going on. Some regular &quot;update email&quot; on this forum (could be just a few lines) what people are working on, would be great. I've seen that Google does the same for Dart (sort of publishing meeting notes of their internal\r\n design discussions) and there it really seems to keep the community more involved.\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\nOn 03/11/2013 05:59 PM, cretz wrote:<br>\r\n</div>\r\n<blockquote type=\"cite\">\r\n<p>From: cretz</p>\r\n<div id=\"ThreadNotificationPostBody\">I too am watching the branch, though CodePlex's interface makes it difficult to watch for backwards incompatible changes to the items I care about (basically AST and compiler interface), so I find myself doing fresh checkouts\r\n regularly. I do see that string[] is equivalent to Array&lt;string&gt; which makes me so very happy, yet the &quot;new&quot; syntax (e.g. var a = new string[] vs var a: string[] = []) for arrays seems to be removed. Also seems like you can assign to &quot;export&quot; maybe making\r\n it easier to create node modules. It is a little cryptic following changes.<br>\r\n</div>\r\n</blockquote>\r\n<br>\r\n",
    "PostedDate": "2013-03-12T01:28:42.35-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1014940",
    "ThreadId": "436050",
    "Html": "If you look in the doc folder in the root of the branch, you'll find a draft of the updated spec for 0.9. This should shine some light on the things we're working on.<br />\n",
    "PostedDate": "2013-03-13T18:03:02.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1016140",
    "ThreadId": "436050",
    "Html": "\r\n<div>Thanks for the tip. I did indeed notice one nice new feature (besides of course all the generics) that I wasn't fully aware of.</div>\r\n<div><br>\r\n</div>\r\n<div>An interface can now extend a class. That could indeed be a nice feature.</div>\r\n<div><br>\r\n</div>\r\n<div>It would be even more useful if a module with only import statements (and no export ones) would be part of global scope and NOT seperate external module. Than you could easily create a global set of interfaces you could use for type annotation througout\r\n your application.</div>\r\n<div><br>\r\n<br>\r\n</div>\r\n<div><br>\r\nOn 14 mrt. 2013, at 02:03 AM, &quot;paulb&quot; &lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt; wrote:<br>\r\n<br>\r\n</div>\r\n<blockquote type=\"cite\">\r\n<div>\r\n<p>From: paulb</p>\r\n<div id=\"ThreadNotificationPostBody\">If you look in the doc folder in the root of the branch, you'll find a draft of the updated spec for 0.9. This should shine some light on the things we're working on.<br>\r\n</div>\r\n</div>\r\n</blockquote>\r\n",
    "PostedDate": "2013-03-15T14:01:48.887-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]