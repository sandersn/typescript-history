[
  {
    "Id": "1210612",
    "ThreadId": "532862",
    "Html": "Specification ver. 0.9.5, p. 3.8.7:<br />\n<blockquote>\nA type reference which, directly or indirectly, references G through open type references and which contains a wrapped form of any of Gâ€™s type parameters in one or more type arguments is classified as an infinitely expanding type reference.<br />\n</blockquote>\nWell, we've tried to implement it somehow, and it seems to work in most cases. But to say that some explanation about &quot;directly or indirectly&quot; is omitted in spec would be a severe understatement. Specification needs to be expanded here to describe a complete algorithm.<br />\n",
    "PostedDate": "2014-02-19T08:29:22.763-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1211284",
    "ThreadId": "532862",
    "Html": "Will copy this to a work item to follow up.  If you can, please add a description to the issue with your questions.<br />\n",
    "PostedDate": "2014-02-20T10:09:52.017-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1211285",
    "ThreadId": "532862",
    "Html": "This discussion has been copied to a work item. Click <a href=\"https://typescript.codeplex.com/workitem/2200\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2014-02-20T10:10:15.073-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]