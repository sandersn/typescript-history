{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This appears to already be fixed in the latest bits in the develop branch.",
    "ClosedDate": "2013-10-09T12:21:04.75-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This:\r\n\r\n```\r\nclass Greeter {\r\n    greeting: string;\r\n    get \"Greeting Text\" (): string {\r\n        return this.greeting;\r\n    }\r\n}\r\n```\r\n\r\ncomplies to this:\r\n\r\n```\r\nvar Greeter = (function () {\r\n    function Greeter() {\r\n    }\r\n    Object.defineProperty(Greeter.prototype, \"\"Greeting Text\"\", {\r\n        get: function () {\r\n            return this.greeting;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Greeter;\r\n})();\r\n```\r\n\r\nNote that the name is wrapped in another set of double quotes causing invalid JavaScript. I understand that you would rarely want to have getters and setters that would need quotes. However, properties with spaces, dashes, etc. work just fine in vanilla JavaScript.",
    "LastUpdatedDate": "2013-10-09T12:21:04.75-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-10-09T09:26:37.63-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Getter and setter names with quotes",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1771
  },
  "FileAttachments": [],
  "Comments": []
}