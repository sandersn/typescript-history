[
  {
    "Id": "1083017",
    "ThreadId": "454045",
    "Html": "This is what I did to make a project work fine with 0.9.1<br />\n<br />\n1) To clean up and get better manageability: I splitted my project into three, one for tests and one for main application and one for experiments. Earlier I had them in one project, but only deployed the right set of files.<br />\n<br />\n2) To handle some typings that was not picked up by the language service for me (in particular kendo.d.ts was not picked up for me) I made a libs.any.d.ts as a temporary (lame) workaround &quot;declare var kendo:any;&quot; <br />\n<br />\n3) Remove all manually added references (reference path=...), let Visual Studio do that work (it references all ts + d.ts files in the project automatically as of 0.9.1)<br />\n<br />\n4) Make all code independent on order - i.e. move startup code to a document ready function. <br />\n<br />\n5) Compile everything into one application.js and make it create a definition file by editing the build in .csproj, see below.<br />\n<br />\n6) Use the compiled application.js and the application.d.ts in the test project.<br />\n<pre><code>  &lt;PropertyGroup Condition=&quot;'$(Configuration)' == 'Debug'&quot;&gt;\n    &lt;TypeScriptTarget&gt;ES3&lt;/TypeScriptTarget&gt;\n    &lt;TypeScriptIncludeComments&gt;true&lt;/TypeScriptIncludeComments&gt;\n    &lt;TypeScriptSourceMap&gt;true&lt;/TypeScriptSourceMap&gt;\n    &lt;TypeScriptGeneratesDeclarations&gt;true&lt;/TypeScriptGeneratesDeclarations&gt;\n    &lt;TypeScriptModuleKind&gt;AMD&lt;/TypeScriptModuleKind&gt;\n    &lt;TypeScriptOutFile&gt;application.js&lt;/TypeScriptOutFile&gt;\n  &lt;/PropertyGroup&gt;\n  &lt;PropertyGroup Condition=&quot;'$(Configuration)' == 'Release'&quot;&gt;\n    &lt;TypeScriptTarget&gt;ES3&lt;/TypeScriptTarget&gt;\n    &lt;TypeScriptIncludeComments&gt;false&lt;/TypeScriptIncludeComments&gt;\n    &lt;TypeScriptSourceMap&gt;false&lt;/TypeScriptSourceMap&gt;\n    &lt;TypeScriptModuleKind&gt;AMD&lt;/TypeScriptModuleKind&gt;\n    &lt;TypeScriptOutFile&gt;application.js&lt;/TypeScriptOutFile&gt;\n  &lt;/PropertyGroup&gt;\n</code></pre>\n\nThis looks very much like any C#-solution structure and works quite well for me. Unfortunately it makes me dependant on Visual Studio, which I hoped not to be. And the workaround in 2) is obviously not good.<br />\n<br />\nSee also <a href=\"http://joeriks.com/2013/08/21/setting-up-a-typescript-project-structure-to-make-the-compiler-happy/\" rel=\"nofollow\">http://joeriks.com/2013/08/21/setting-up-a-typescript-project-structure-to-make-the-compiler-happy/</a><br />\n",
    "PostedDate": "2013-08-21T02:15:57.043-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1083493",
    "ThreadId": "454045",
    "Html": "The 0.9.1.1 now picks up all definitions (incl the kendo one), plus it found a few type errors of mine that 0.9.1 missed. Great work guys! <br />\n<br />\nA few errors (of mine) I stumbled on and that might help others perhaps:<br />\n<br />\n0.9.1.1 reported &quot;Generic type references must include all type arguments&quot; for JQuery.d.ts and others, on these kinds of defs:<br />\n<pre><code>promise(type?: any, target?: any): JQueryPromise;\n// change to : \npromise(type?: any, target?: any): JQueryPromise&lt;any&gt;;\n// I guess I should be using T instead, but I'm not sure exacly how.\n</code></pre>\n\nA definition was not being picked up, and when run the file with that in the console I got the error TS5037: Cannot compile external modules unless the '--module' flag is provided.<br />\n<pre><code>// I used this erroneously in a few places:\nexports interface IFoo ...\n// change to (if you're not using external modules):\ninterface IFoo ...\n</code></pre>\n\nAnd I found that even though I included my definition files in Visual Studio it had one of them included as Content, check properties, Build Action. Should be TypeScriptCompile. Both .ts files and .d.ts files<br />\n",
    "PostedDate": "2013-08-22T01:13:52.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]