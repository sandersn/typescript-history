{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:35:57.52-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "```\r\nenum map {\r\n\tsearching = 1,\r\n\tsuccess = 2,\r\n\terror = 4,\r\n\ttimeout = 8,\r\n\tidle = 16\r\n}\r\n```\r\n\r\ncompiled to\r\n```\r\nvar map;\r\n(function (map) {\r\n    map[map[\"searching\"] = 1] = \"searching\";\r\n    map[map[\"success\"] = 2] = \"success\";\r\n    map[map[\"error\"] = 4] = \"error\";\r\n    map[map[\"timeout\"] = 8] = \"timeout\";\r\n    map[map[\"idle\"] = 16] = \"idle\";\r\n})(map || (map = {}));\r\n```\r\n\r\n\r\nwhat about next:\r\n```\r\nvar map;\r\n(function (map) {\r\n    map[map[1] = \"searching\"] = 1;\r\n    map[map[2] = \"success\"] = 2;\r\n    map[map[4] = \"error\"] = 4;\r\n    map[map[8] = \"timeout\"] = 8;\r\n    map[map[16] = \"idle\"] = 16;\r\n})(map || (map = {}));\r\n```\r\n\r\nor (in case not-only numeric values):\r\n```\r\nvar map;\r\n(function (map, i) {\r\n    map[map[i = \"someKey1\"] = \"searching\"] = i;\r\n    map[map[i =\"someKey2\"] = \"success\"] = i;\r\n    map[map[i = \"someKey3\"] = \"error\"] = i;\r\n    map[map[i = \"someKey4\"] = \"timeout\"] = i;\r\n    map[map[i = \"someKey5\"] = \"idle\"] = i;\r\n})(map || (map = {}));\r\n```\r\n",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-09-26T02:23:16.447-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Enhancements for enum generation",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 1733
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "After reading section 9.1 of the spec, and considering the following example, I suppose that maybe the final example restricted to numbers would be good?\n\n```typescript\nenum X {\n\tA= 1,\n\tB = 2,\n\tC = 4,\n\tAB = A | B,\n\tBC = B | C,\n\tABC = A | B | C\n}\n```",
      "PostedDate": "2013-09-26T08:11:32.993-07:00",
      "Id": 115726
    },
    {
      "Message": "What exactly do you want these new codegen patterns for?",
      "PostedDate": "2013-09-26T11:00:42.083-07:00",
      "Id": 115739
    },
    {
      "Message": "Thanks for reporting we're taking a look.",
      "PostedDate": "2013-09-27T12:16:30.607-07:00",
      "Id": 115858
    }
  ]
}