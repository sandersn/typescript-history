[
  {
    "Id": "996339",
    "ThreadId": "431938",
    "Html": "My team has been having a discussion about how much defensive programming (paranoia programming?) one ought to do in TypeScript.\r<br />\n<br />\nWe would like a mechanism to specify in code things like ENSURE, REQUIRE, ASSERT, and INVARIANT... and have those be able to wash out of our code with some compiler flag.  Something that isn't really possible without a preprocessor-and-macros (ugh!), or <em>bona fide</em> language support.\r<br />\n<br />\nI'm thinking along the lines of the D Programming Language facility for <a href=\"http://dlang.org/dbc.html\" rel=\"nofollow\">Contract Programming</a>, which has a very nice contract facility.<br />\n",
    "PostedDate": "2013-02-04T13:09:38.087-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996770",
    "ThreadId": "431938",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/700\" rel=\"nofollow\">here</a> to go to the work item and continue the discussion.<br />\n",
    "PostedDate": "2013-02-05T08:39:28.88-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]