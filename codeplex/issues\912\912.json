{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "We have looked at the trade-offs involved here and are satisfied with the current design.",
    "ClosedDate": "2013-04-15T14:56:35.92-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "If I have a class like this:\r\n\r\nclass foo {\r\n    private bar: string;\r\n    constructor(bar: string) {\r\n        this.bar = bar;\r\n    }\r\n\r\nI get this JS:\r\nvar foo = (function () {\r\n    function foo(bar) {\r\n        this.bar = bar;\r\n    }\r\n    return foo;\r\n})();\r\n\r\nWhy not try to keep this variable private so external JS code can't modify the value at all?\r\n\r\nWhy not generate the following?\r\n\r\nvar foo = (function () {\r\n    var _bar;\r\n    function foo(bar) {\r\n        _bar = bar;\r\n    }\r\n    return foo;\r\n})();\r\n\r\nThis is still perfectly valid, but adds the additional value of retaining the intent of the original code.\r\n\r\nIs there a drawback I'm missing?",
    "LastUpdatedDate": "2013-04-15T14:56:35.92-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-04-15T11:58:01.06-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "\"private\" isn't private in JS.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 912
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Well, I just saw the discussion here: https://typescript.codeplex.com/discussions/397651\n\nI understand people's comments, but I don't understand why we're using the keyword \"private\" when it just plain is NOT private.  At _best_, it's protected and yet still public to JavaScript code.\n\nEither way, I guess this should be closed since nobody's going to bother fixing this.\n",
      "PostedDate": "2013-04-15T12:17:21.823-07:00",
      "Id": 97052
    }
  ]
}