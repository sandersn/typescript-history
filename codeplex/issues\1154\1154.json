{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is because of static-side inheritance (the type of the 'B' constructor function must be a subtype of the 'A' constructor function). You'll have to name your 'create' methods differently if you want them to not be polymorphically related.",
    "ClosedDate": "2013-06-17T09:30:03.393-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have two class \r\n\r\nexport class A {\r\n    static create():A{\r\n        return new A();\r\n    }\r\n}\r\n\r\nexport class B extends A{\r\n    static create(d:number):B{\r\n        return new B(d);\r\n    }\r\n}\r\n\r\nvs error :\r\nTypes of static property 'create' of class 'B' and class 'A' are incompatible:\r\n\r\n Call signatures of types '(d: number) => B' and '() => A' are incompatible:\r\n\r\n Call signature expects 0 or fewer parameters.\r\n",
    "LastUpdatedDate": "2013-06-17T09:30:03.393-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-16T19:08:20.877-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "extends error for TS 0.9.0-beta",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1154
  },
  "FileAttachments": [],
  "Comments": []
}