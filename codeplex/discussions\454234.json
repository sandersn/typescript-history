[
  {
    "Id": "1083713",
    "ThreadId": "454234",
    "Html": "My team has been waiting for it to release so we don't get the breaking changes in the sub 1.0 releases. <br />\n",
    "PostedDate": "2013-08-22T09:05:37.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1084179",
    "ThreadId": "454234",
    "Html": "I may be wrong, but it sounds like they may have breaking changes even post-1.0. The ECMAScript 6 final spec isn't due out until next year, and from what I've heard they want to get to 1.0 before that. That means they may still have to go back and tweak the language to fit with any spec changes. Feel free to correct me if I'm mistaken.\r<br />\n<br />\nPersonally, I think it makes more sense to just keep building on the language in the meantime and only go to 1.0 <em>after</em> ECMAScript 6, but I think that ship has already sailed.<br />\n",
    "PostedDate": "2013-08-23T07:10:29.58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1084614",
    "ThreadId": "454234",
    "Html": "I'm curious how they wanna handle that myself.<br />\n<br />\nThey said they will be tracking the ECMA 6 standard, but on the other hand they are pushing for a 1.0 'soon'. So either there will be breaking changes in the future or they won't be tracking the standard.<br />\n<br />\nOne way I could see it work is by creating &quot;breaking change opt-outs&quot; through compiler flags for everything that they change; at least for a while. Kinda like a deprecation warning that you can manually choose to elevate to an error state from just a warning if you want the change right away.<br />\n<br />\nSome clarification on this would be nice, but I guess we will get to know more once 1.0 is actually released.<br />\n",
    "PostedDate": "2013-08-25T04:00:47.503-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]