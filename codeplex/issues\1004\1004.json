{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This bug has been fixed. If you're still seeing this issue, please re-open the bug (click \"Re-open Issue\" below the \"ISSUES\" tab). Thanks!",
    "ClosedDate": "2013-08-07T11:54:45.87-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "Currently, the typescript debugging does not work if you debug an Azure Cloud Service project in Visual Studio. The only way to get the debugging to work is by debugging the web project directly and not through the emulator.\r\n\r\nIt would be nice if it was possible to debug typescript with the emulator too.\r\n\r\nUPDATE:\r\n\r\nMy solution contains an Azure Cloud Service project and an HTML Application with TypeScript.\r\n\r\nAs for the tools, I am using Visual Studio 2012 (with all updates), the 0.8.3.1 release of TypeScript tools for Visual Studio and the 1.8 release of the Azure SDK.\r\n\r\nWhen I debug the code in the Azure emulator, no breakpoint set in a .ts file is triggered because there are no symbols loaded for the file (the usual behaviour when you lack debugging symbols in Visual Studio). However, if I do set the breakpoint in the .js file, it breaks, but it actually breaks into a .ts [dynamic] file.\r\n\r\nI would want to place my breakpoint in the .ts file (not in the .js file) when I place the breakpoint before starting debugging. As it is now I have to do educated guesses on what line in the .js file is the right one to break at or I have to start debugging and then set the breakpoint in the dynamic .ts file.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-07T00:23:01.977-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "azure emulator debugging",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1004
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Could you please reopen with more details exactly of what steps you are taking.  Which Azure SDK, which project template, where is the code you are trying to debug running, etc...? (i.e. are you trying to debug JavaScript running in the browser on the client end, or running in a Node host at the Azure end, etc...?).\n\nNote that under the covers you are just debugging JavaScript.  If you can debug a JavaScript file built from TypeScript then we should be able to use the source map and allow debugging using the TypeScript.  If you can't debug the actual executing JavaScript either, then we won't be able to provide TypeScript debugging for it.",
      "PostedDate": "2013-05-07T13:55:56.65-07:00",
      "Id": 99631
    },
    {
      "Message": "\n\r\n\r** Closed by billti 05/07/2013 1:56PM",
      "PostedDate": "2013-05-07T13:56:03.25-07:00",
      "Id": 99661
    },
    {
      "Message": "Thanks for the update, that was helpful. I tried a similar setup and got better results but still with a little strangeness so I've marked this as active for investigation.\r\n\r\nFor reference, with the latest Azure SDK (2.0 rather than 1.8) and the latest Typescript from the develop branch I am able to set breakpoints in the Typescript files and they are hit. There's a little weirdness with the fact that the active editor window is a dynamic version of your Typescript file but otherwise debugging appears to work largely as you would want/expect with sourcemaps.",
      "PostedDate": "2013-05-10T16:38:50.197-07:00",
      "Id": 99958
    }
  ]
}