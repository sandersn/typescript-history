[
  {
    "Id": "1059817",
    "ThreadId": "447861",
    "Html": "In the Google Map TS definition file, it has the following :\r<br />\nsetValues(values: any): void;\r<br />\nsetValues(values: undefined);\r<br />\n<br />\nThis is the definition for a google map v3 js API method :  setValues(values:Object|undefined)\r<br />\n<br />\nThe above compiles fine in TS v0.8.3.1, but after I upgrade to v0.9, the compiler displays an error - &quot;can not find symbol 'undefined'&quot;.\r<br />\n<br />\nIs this a bug in the latest TS version or anything I should do to fix the definition file?<br />\n",
    "PostedDate": "2013-06-21T16:03:30.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059828",
    "ThreadId": "447861",
    "Html": "This should be <code>setValues(values?: any): void;</code>\r<br />\n<br />\nIf you just omit the parameter, javascript will set the parameter as undefined.<br />\n",
    "PostedDate": "2013-06-21T17:03:42.113-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060458",
    "ThreadId": "447861",
    "Html": "Isn't <code>setValues(values: undefined);</code> the same as <code>setValues();</code>?<br />\n",
    "PostedDate": "2013-06-24T09:11:28.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060468",
    "ThreadId": "447861",
    "Html": "<strong>Grajkowski wrote:</strong><br />\n<blockquote>\nIsn't <code>setValues(values: undefined);</code> the same as <code>setValues();</code>?<br />\n</blockquote>\nNo; the correct way to indicate this signature in TypeScript is as nvivo suggested.<br />\n",
    "PostedDate": "2013-06-24T09:33:13.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060496",
    "ThreadId": "447861",
    "Html": "<strong>markrendle wrote:</strong><br />\n<blockquote>\nNo; the correct way to indicate this signature in TypeScript is as nvivo suggested.<br />\n</blockquote>\nI think you misunderstood the question.  I wasn't saying &quot;use this type signature.&quot;<br />\n",
    "PostedDate": "2013-06-24T10:35:55.26-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060576",
    "ThreadId": "447861",
    "Html": "@delpielo - right, as mentioned by some of the other people on the thread, if you want to say any|undefined, you use an optional argument (using the question mark).<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\nsetValues(values?: <span style=\"color:Blue;\">any</span>): <span style=\"color:Blue;\">void</span>;\r\n</pre></div>",
    "PostedDate": "2013-06-24T13:56:24.747-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1105262",
    "ThreadId": "447861",
    "Html": "I have a similar problem:\r<br />\n<br />\nI use some promises that have generic definitions (TS 0.9):<br />\n<pre><code>Promise&lt;T&gt;</code></pre>\n\nThe module that uses this and for which I'm writing a definition file has methods that return a promise for the value <code>undefined</code>.\r<br />\n<br />\nBut this is not accepted by the compiler:<br />\n<pre><code>append(path:string):Promise&lt;undefined&gt;;\n\n//&gt;&gt; error TS2095: Could not find symbol 'undefined'</code></pre>\n\nObviously the optional ? is not usable there.\r<br />\n<br />\nWhat do you advise to use here? \r<br />\n<br />\nFor now I go with <code>any</code> but is is not precise enough. I know exactly that is not just 'any' type but specifically will be 'undefined' (but what type is undefined? ehh? confusing :)<br />\n",
    "PostedDate": "2013-10-08T18:00:24.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1105268",
    "ThreadId": "447861",
    "Html": "I can answer my own question: it suddenly made sense.<br />\n<br />\nIf you have a method that has no explicit return value it is equal to returning the value <code>undefined</code>. <br />\n<br />\nAnd how do you declare the return type for that function? As <code>void</code>!<br />\n<br />\nTried it in my generics and this compiles:<br />\n<pre><code>append(path:string):Promise&lt;void&gt;;</code></pre>\n\nI leave this here for others who get this page as a search result.<br />\n",
    "PostedDate": "2013-10-08T18:26:18.043-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]