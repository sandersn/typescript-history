[
  {
    "Id": "1041940",
    "ThreadId": "443261",
    "Html": "You can write following:<br />\n<pre><code>declare class A {\n    function():any;\n}</code></pre>\n\nBut you cannot call this function:<br />\n<pre><code>var x = new A();\nx();</code></pre>\n\nValue of 'A' is not callable.\r<br />\n<br />\nHow the function can be called ?\r<br />\nIf it cannot be called why this is allowed ?<br />\n",
    "PostedDate": "2013-05-10T08:46:44.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1041969",
    "ThreadId": "443261",
    "Html": "The <code>declare</code>  keyword is used to describe <em>existing</em> objects. If you try to describing an existing object that doesn't actually exist, you will get an error.\r<br />\n<br />\nIf you want to write an actual class, don't use <code>declare</code>:<br />\n<pre><code>class A {\n    public fn() { }\n}</code></pre>\n\n",
    "PostedDate": "2013-05-10T09:36:54.28-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1041990",
    "ThreadId": "443261",
    "Html": "You don't really need existing object.\r<br />\nThis is valid code:<br />\n<pre><code>declare class A {\n    f():any;\n}\n\nvar x = new A();\nx.f();</code></pre>\n\nThe question is what &quot;function():any&quot; means in declared class and why it is allowed.<br />\n",
    "PostedDate": "2013-05-10T10:19:11.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1042048",
    "ThreadId": "443261",
    "Html": "Sorry, I misinterpreted the post. What this does is create a function called 'function':<br />\n<pre><code>declare class A {\n    function():any;\n}\n\nvar x: A;\nx.function();</code></pre>\n\n",
    "PostedDate": "2013-05-10T12:46:35.007-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1042049",
    "ThreadId": "443261",
    "Html": "Ah.. right :)\r<br />\nThanks<br />\n",
    "PostedDate": "2013-05-10T12:48:00.117-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]