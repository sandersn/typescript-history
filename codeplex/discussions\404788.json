[
  {
    "Id": "947956",
    "ThreadId": "404788",
    "Html": "\r\n<p>Currently typescript will type the&nbsp;&quot;this&quot; pointer in function callbacks as &quot;any.&quot; Arrow syntax lets us capture&nbsp;&quot;this&quot; from the outer scope, and this can enable proper typing. It would be nice to be able to provide\r\n an optional&nbsp;&quot;ambient this&quot; declaration in function signatures:</p>\r\n<p>(declare this : MyType, first: number, second: string) : any;</p>\r\n<p>The rules would be:</p>\r\n<p>1) the declaration is&nbsp;obviously&nbsp;optional<br>\r\n2) if specified, should be first parameter<br>\r\n3) cannot be used with arrow syntax&nbsp;lambdas&nbsp;(should be compiler error)<br>\r\n&nbsp;<br>\r\nI know you can cast as needed to get the intellisense but I'd rather not put this responsibility on the implementer of the function. Ideally it should be part of the definition.</p>\r\n<p>Example with Sammy:<br>\r\n<br>\r\nvar app = $.sammy(&quot;#view&quot;, function() {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; // define default route<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; this.get(&quot;#/&quot;, function() { ... }&nbsp;<br>\r\n});<br>\r\n<br>\r\nIn the above case, typescript can only type this as any. <br>\r\n<br>\r\nThoughts?</p>\r\n",
    "PostedDate": "2012-11-27T13:46:07.7-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948690",
    "ThreadId": "404788",
    "Html": "\r\n<p>@oisin: We've actually had discussions about a feature exactly like what you describe, and I believe it is a natural extension of current TypeScript which would enable use cases like the example you mention.&nbsp; Because 'this' is a keyword, we have actually\r\n talked about it as being written like:</p>\r\n<p>var f: (this: MyType, first: number) =&gt; any;</p>\r\n<p>And similarly, for implementations:</p>\r\n<p>function f(this: MyType, first: number) { return 3; }</p>\r\n<p>There's several unanswered questions around the precise rules for how this is treated in assignment compatibility, whether methods on classes have 'this' types, etc.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-11-28T16:54:22.813-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "948692",
    "ThreadId": "404788",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://typescript.codeplex.com/workitem/507\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2012-11-28T16:56:40.223-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]