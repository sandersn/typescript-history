{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Once you're in an external module, extensions to objects at the global level need to be done in a separate .d.ts file",
    "ClosedDate": "2014-03-17T08:10:50.527-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "This code works perfectly:\r\n\r\n```\r\ninterface String {\r\n    foo(): number;\r\n}\r\n\r\nString.prototype.foo = function() {\r\n    return 0;\r\n}\r\n\r\nvar s = \"some string\";\r\ns.foo();\r\n```\r\n\r\nHowever if the same code is preceded with an import statement, it breaks with a build error, although the generated JS file seems correct:\r\n\r\n```\r\nimport $ = require(\"jquery\");\r\n\r\ninterface String {\r\n    foo(): number;\r\n}\r\n\r\nString.prototype.foo = function() {\r\n    return 0;\r\n}\r\n\r\nvar s = \"some string\";\r\ns.foo();\r\n```\r\n\r\nThe error is:\r\n```\r\nerror TS2094: Build: The property 'foo' does not exist on value of type 'String'.\r\n```\r\n\r\nWhat is the right way to extend a built-in type's prototype within a module?\r\nI'm using the RC version with RequireJS.\r\n\r\nThank you.\r\n",
    "LastUpdatedDate": "2014-03-31T16:29:28.303-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-03-17T05:52:56.117-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Extending prototye does not work after import",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2328
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thank you Ryan, it works perfectly if I put the interface into a separate .d.ts file.\n\n- György Balássy",
      "PostedDate": "2014-03-17T20:02:57.637-07:00",
      "Id": 137172
    }
  ]
}