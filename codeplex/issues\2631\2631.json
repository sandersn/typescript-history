{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:45:44.017-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "In some cases, comments from the input typescript are removed despite turning on the option to preserve comments.\r\n\r\nExample:\r\n\r\n```\r\nmodule foo {\r\n    export class Foo {\r\n        // ... etc..\r\n    }\r\n    // this comment is NOT preserved\r\n}\r\n// this comment IS preserved\r\n```\r\n\r\nIn this case, I need to use comments to insert hints to the code coverage tool I'm using to ignore the (foo || foo = {}) branches of the internal module definitions that TypeScript outputs when calculating branch coverage, as these branches are only ever executed once when the file loads and never during a unit test. My workaround has been to define a global noop function that I call right after the comment:\r\n\r\n```\r\nmodule foo {\r\n  export class Foo {}\r\n  /** cc: ignore start */\r\n  noop();\r\n}\r\n/** cc: ignore end */\r\n```",
    "LastUpdatedDate": "2014-07-21T13:45:44.017-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-07-18T07:53:28.767-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Preserve Comments at the end of a module/block/array",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2631
  },
  "FileAttachments": [],
  "Comments": []
}