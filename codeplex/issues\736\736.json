{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "As part of our move to GitHub, we're closing our CodePlex suggestions and asking that people move them to the GitHub issue tracker for further discussion.  Some feature requests may already be active on GitHub, so please make sure to look for an existing issue before filing a new one.\n\nYou can find our GitHub issue tracker here:\nhttps://github.com/microsoft/typeScript/issues\n",
    "ClosedDate": "2014-07-28T15:18:56.41-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "I would much prefer it if the VS extension parts were deployed completely as a .vsix through the visual studio extension and updates tool. Then when you have another release, it would show up as an update in VS directly, no need to download and manually install another msi.\r\n\r\nI'm guessing the reason why you use an msi is to get the binaries into the \"Microsoft SDKs\" folder which makes it easier for msbuild to find but I dont' think you should put it there at all frankly. Elevated permissions should never be required for this process, in my opinion. It would be much better if the only way to get the binaries was through nuget or download a zip off of codeplex manually. That's basically how it works with npm, you can do the same with nuget.",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-02-18T13:43:29.37-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Get rid of the msi",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 736
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for the report. You are right that we needed the MSI to do things VSIX installs alone are not allowed to do, but it does create this somewhat unfortunate dichotomy. I'm assigning to Jonathon who handles suggestions.",
      "PostedDate": "2013-02-18T19:04:51.05-08:00",
      "Id": 90724
    }
  ]
}