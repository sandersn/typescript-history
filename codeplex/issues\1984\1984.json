{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-12-10T10:04:01.94-08:00",
    "CommentCount": 4,
    "Custom": null,
    "Description": "I'm in the process of upgrading my project to work with 0.9.5 and I've discovered that when using the watch flag (both for the npm and exe versions of tsc), the compiler seems to cache either the results of compilation, or the files that being compiled.\r\n\r\nSteps involved:\r\n1) I get a compilation error\r\n2) I make a fix and save the offending ts file\r\n3) Compiler observes the file change and recompiles\r\n4) The old error is still displayed\r\n5) I exit compiler watch mode (Ctrl-C) and restart the compiler\r\n6) The error is gone\r\n\r\nIf you can't reproduce, try having a stub file with references to each of the files to be compiled (via /// <reference...) and compile that, ensuring that an error exists in one or more of the referenced files. That's how I am set up. I'm not using Visual Studio for this project; everything is done from the command line.",
    "LastUpdatedDate": "2014-03-31T16:42:41.943-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-12-07T06:57:08.963-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Need More Info"
    },
    "Summary": "When in watch mode, the compiler appears to cache source files",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1984
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I can't reproduce this. Can you upload a set of files that shows this problem?\n\nAlso, what editor are you using? Some editors have really weird save semantics (they'll 'touch' the file, then actually write its contents out a few milliseconds later) that can interfere with --watch.",
      "PostedDate": "2013-12-09T11:00:39.8-08:00",
      "Id": 126641
    },
    {
      "Message": "I believe this is may be related to what I am seeing within visual studio as well:\n\n* A list of errors appears\n* I double click an error to open the offending file, which causes the errors to go away (the compiler realizes they have been fixed?)\n* I close the file : errors incorrectly re-appear.",
      "PostedDate": "2013-12-09T13:04:09.893-08:00",
      "Id": 126666
    },
    {
      "Message": "I also just retried this and don't see any issue.  I see the compiler correct compile (or show the new error, if I just change the issue) when I touch the file when running with the -w switch.\n\nPlease provide more details - preferably a project and repro steps - and reopen.  Then we'll try to reproduce the problem again, and investigate if one is observed.\n\nThanks.",
      "PostedDate": "2013-12-10T10:03:51.007-08:00",
      "Id": 126817
    },
    {
      "Message": "Sorry I haven't replied earlier, life gets in the way sometimes...\n\nMy environment is building using Powershell + nodejs (with watch flag enabled of course). I have the solution open in Visual Studio but I edit my TypeScript code externally with Sublime Text because I have a couple of TypeScript source files that, while not massive, somehow slow the TypeScript compiler to an unacceptable crawl, which causes the Intellisense in Visual Studio to be basically unusable.\n\nIn any case, I tried to create an isolated test case and was unable to reproduce the error. I'll post here again if I discover a way to make it occur consistently, but for now I'll have to put it down as something specific to my setup. Thanks for taking a look all the same.",
      "PostedDate": "2013-12-11T00:36:31.247-08:00",
      "Id": 126954
    }
  ]
}