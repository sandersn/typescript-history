{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Closing 'fixed' issue. If you see issues around codegen comment placement, can you open separate issues to keep things organized? Thanks!",
    "ClosedDate": "2013-02-19T17:31:11.573-08:00",
    "CommentCount": 7,
    "Custom": null,
    "Description": "Commenting TypeScript classes with JSDoc is tedious and un-maintainable. Perhaps this is an issue with JSDoc or the default JSDoc template, but I thought I would bring it to your attention.\r\n\r\nHere is a detailed description of the issue:\r\nhttps://github.com/jsdoc3/jsdoc/issues/272",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-11-28T10:13:36.78-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "TypeScript and JSDoc not playing well together",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 6,
    "Id": 504
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Indeed, the interop story here isn't great. This is something we're looking at for future milestones.",
      "PostedDate": "2012-11-28T10:31:18.067-08:00",
      "Id": 83165
    },
    {
      "Message": "I'm not sure how TypeScript can fix it without parsing the JSDoc comments and moving things around in the generated JavaScript, which is why I originally posted the issue on the JSDoc repo. Thoughts?",
      "PostedDate": "2012-11-28T10:35:43.887-08:00",
      "Id": 83168
    },
    {
      "Message": "I'm not convinced the JSDoc team will accept responsibility for fixing this, even if they could. So far, my original issue report has been met with stone silence.\n\nSo maybe it's entirely up to the TypeScript team...\n\nAs I detailed in the original issue (https://github.com/jsdoc3/jsdoc/issues/272), the most painful part is that the comments must include explicit names for the namespace/class/members in order for the docs to be generated correctly, which is a maintenance nightmare. For example:\n\n@namespace My.Namespace\n@class My.Namespace.SomeClass\n@constructor My.Namespace.SomeClass\n@member My.Namespace.SomeClass#_someField\n@method My.Namespace.SomeClass#_someMethod\n\nCould the tsc compiler be modified to parse, validate, and augment comments as well? It could generate the necessary JSDoc tags/names for the JSDoc generator to work and even add additional tags that it detects are missing, e.g. @public, @private, @readonly, @type {string}, etc.\n\nThat would be sweet.\n",
      "PostedDate": "2012-11-30T05:03:46.68-08:00",
      "Id": 83340
    },
    {
      "Message": "We've begun supporting a simple subset of JSDoc in TypeScript that is understood by the language service and by the Visual Studio plugin.  Marking this as 'fixed'.",
      "PostedDate": "2013-02-06T13:41:39.103-08:00",
      "Id": 88747
    },
    {
      "Message": "The 1.0 language spec makes a single reference to the term \"JSDoc\" and no reference to any commenting support.  Can you please elaborate?  Perhaps a link to the source that defines TypeScript's JSDoc support?",
      "PostedDate": "2014-04-11T10:52:46.603-07:00",
      "Id": 141517
    },
    {
      "Message": "Hi Jess\n\nNot aware of any docs but for a good example of how they're used you could look a the Definitely Typed jQuery.d.ts:\n\nhttps://github.com/borisyankov/DefinitelyTyped/blob/master/jquery/jquery.d.ts",
      "PostedDate": "2014-04-12T00:55:45.01-07:00",
      "Id": 141567
    },
    {
      "Message": "The supported subset of JSDoc is very convenient if you use Visual Studio and want better IntelliSense. Not much coding required, minimal redundacy, they play nicely together, thank you!\n\nHowever, there is no other tool on this planet (at least not one I'm aware of) that understands this subset. There are tons of tools that can generate a full documentation from JSDoc, and I could find one which could work with TypeScript. Either because they understand only JS but not TS, but mostly becuase they miss the full JSDoc tags from the comment blocks. Currently our comments are locked into VS and their only purpose is to lightup IntelliSense.\n\nPlease reopen this issue. Thank you.\n\n- Gy√∂rgy",
      "PostedDate": "2014-04-25T13:22:56.787-07:00",
      "Id": 143109
    }
  ]
}