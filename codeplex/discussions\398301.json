[
  {
    "Id": "922842",
    "ThreadId": "398301",
    "Html": "\r\n<p>see http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern, second example.</p>\r\n<p>things i noticed while reimpementing it in TypeScript:</p>\r\n<pre><span>private</span> <span>final</span> <span>double</span> ALLOWABLE <span>=</span> <span>10</span> <span>*</span> base<span>; //java<br><br>This doesn't work in TypeScript, the base property is not yet visible. I tried it with a constructor, but was not sure. Would it be right to call super() as the first statement in the contructor?<br><br>And 'protected' would really help ;-)<br><br></span><div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">class</span> PurchasePower {\r\n    <span style=\"color:blue\">public</span> base : number = 500;\r\n    <span style=\"color:blue\">public</span> ALLOWABLE: number = 0;\r\n    <span style=\"color:blue\">public</span> successor: PurchasePower;\r\n \r\n    setSuccessor (successor: PurchasePower): <span style=\"color:blue\">void</span> { <span style=\"color:blue\">this</span>.successor = successor; }\r\n    processRequest (request: PurchaseRequest): <span style=\"color:blue\">void</span> {}\r\n    log(message: string): <span style=\"color:blue\">void</span> {\r\n        document.writeln(<span style=\"color:#a31515\">&quot;&lt;p&gt;&quot;</span> &#43; message &#43; <span style=\"color:#a31515\">&quot;&lt;/p&gt;&quot;</span>);\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">class</span> ManagerPPower <span style=\"color:blue\">extends</span> PurchasePower {\r\n    processRequest(request: PurchaseRequest): <span style=\"color:blue\">void</span> {\r\n        <span style=\"color:blue\">if</span> (request.amount &lt; <span style=\"color:blue\">this</span>.ALLOWABLE) {\r\n            <span style=\"color:blue\">this</span>.log(<span style=\"color:#a31515\">&quot;Manager will approve $&quot;</span> &#43; request.amount);\r\n        } <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.successor != <span style=\"color:blue\">null</span>) {\r\n            <span style=\"color:blue\">this</span>.successor.processRequest(request);\r\n        }\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">class</span> DirectorPPower <span style=\"color:blue\">extends</span> PurchasePower {\r\n    processRequest(request: PurchaseRequest): <span style=\"color:blue\">void</span> {\r\n        <span style=\"color:blue\">this</span>.ALLOWABLE = 20 * <span style=\"color:blue\">this</span>.base;\r\n        <span style=\"color:blue\">if</span> (request.amount &lt; <span style=\"color:blue\">this</span>.ALLOWABLE) {\r\n            <span style=\"color:blue\">this</span>.log(<span style=\"color:#a31515\">&quot;Director will approve $&quot;</span> &#43; request.amount);\r\n        } <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.successor != <span style=\"color:blue\">null</span>) {\r\n            <span style=\"color:blue\">this</span>.successor.processRequest(request);\r\n        }\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">class</span> VicePresidentPPower <span style=\"color:blue\">extends</span> PurchasePower {\r\n    processRequest(request: PurchaseRequest): <span style=\"color:blue\">void</span> {\r\n        <span style=\"color:blue\">this</span>.ALLOWABLE = 40 * <span style=\"color:blue\">this</span>.base;\r\n        <span style=\"color:blue\">if</span> (request.amount &lt; <span style=\"color:blue\">this</span>.ALLOWABLE) {\r\n            <span style=\"color:blue\">this</span>.log(<span style=\"color:#a31515\">&quot;VicePresident will approve $&quot;</span> &#43; request.amount);\r\n        } <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.successor != <span style=\"color:blue\">null</span>) {\r\n            <span style=\"color:blue\">this</span>.successor.processRequest(request);\r\n        }\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">class</span> PresidentPPower <span style=\"color:blue\">extends</span> PurchasePower {\r\n    processRequest(request: PurchaseRequest): <span style=\"color:blue\">void</span> {\r\n        <span style=\"color:blue\">this</span>.ALLOWABLE = 60 * <span style=\"color:blue\">this</span>.base;\r\n        <span style=\"color:blue\">if</span> (request.amount &lt; <span style=\"color:blue\">this</span>.ALLOWABLE) {\r\n            <span style=\"color:blue\">this</span>.log(<span style=\"color:#a31515\">&quot;President will approve $&quot;</span> &#43; request.amount);\r\n        } <span style=\"color:blue\">else</span> {\r\n            <span style=\"color:blue\">this</span>.log(<span style=\"color:#a31515\">&quot;Your request for $&quot;</span> &#43; request.amount &#43; <span style=\"color:#a31515\">&quot; needs a board meeting!&quot;</span>);\r\n        }\r\n    }\r\n}\r\n\r\n<span style=\"color:blue\">class</span> PurchaseRequest {\r\n    <span style=\"color:blue\">public</span> purchaseNumber: number;\r\n    <span style=\"color:blue\">public</span> amount: number;\r\n    <span style=\"color:blue\">public</span> purpose: string;\r\n}\r\n\r\n<span style=\"color:blue\">class</span> CheckAuthority {\r\n    <span style=\"color:blue\">static</span> execute(): <span style=\"color:blue\">void</span> {\r\n        <span style=\"color:blue\">var</span> manager = <span style=\"color:blue\">new</span> ManagerPPower();\r\n        <span style=\"color:blue\">var</span> director = <span style=\"color:blue\">new</span> DirectorPPower();\r\n        <span style=\"color:blue\">var</span> vp = <span style=\"color:blue\">new</span> VicePresidentPPower();\r\n        <span style=\"color:blue\">var</span> president = <span style=\"color:blue\">new</span> PresidentPPower();\r\n        manager.setSuccessor(director);\r\n        director.setSuccessor(vp);\r\n        vp.setSuccessor(president);\r\n \r\n        <span style=\"color:blue\">var</span> request = <span style=\"color:blue\">new</span> PurchaseRequest();\r\n        request.purchaseNumber = 111;\r\n        request.amount = 4999;\r\n \r\n        manager.processRequest(request);\r\n       \r\n        request.amount = 9999;\r\n        manager.processRequest(request);\r\n       \r\n        request.amount = 19999;\r\n        manager.processRequest(request);\r\n       \r\n          request.amount = 29999;\r\n        manager.processRequest(request);\r\n       \r\n        request.amount = 30000;\r\n        manager.processRequest(request);\r\n    }\r\n}\r\n\r\nCheckAuthority.execute();\r\n</pre>\r\n</div>\r\n</pre>\r\n",
    "PostedDate": "2012-10-06T08:28:01.297-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "923478",
    "ThreadId": "398301",
    "Html": "<p>Ickman wrote up a way of simulating protected&nbsp;(<a href=\"http://typescript.codeplex.com/discussions/398325\">http://typescript.codeplex.com/discussions/398325</a>) that you might want to look at.</p>",
    "PostedDate": "2012-10-08T08:28:44.11-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]