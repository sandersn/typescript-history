[
  {
    "Id": "1277251",
    "ThreadId": "553978",
    "Html": "Hi all,\r<br />\n<br />\nWe use TypeScript a lot in ASP.Net MVC projects for implementing the client-side code (MVVM, Ajax, etc). We always face the problem that TypeScript/Javascript code is out of sync with C# server-code as R# and other Tools don't get over the &quot;technology gap&quot; from C# to TypeScript.\r<br />\n<br />\nFor example when the server returns JSON objects and one of the fields get renamed one need to search the whole TS sourcecode and renamed it there by hand otherwise the client doesn't work as expected anymore. This also adresses MVVM pattern where the HTML markup (and therefore the binding) is generated by Razor/C# and the client-viewmodel by TypeScript. Same problem.\r<br />\n<br />\nOne solution to this that cam in mind is a TypeScript Pre-Processor or Macro's. It would be very cool if I can mix C# code (eg. constants like field-/property-names into the TypeScript code. This stuff gets updated each time before the TS compiler starts and does generate the TS sourcecode before it get to the TS compiler.\r<br />\n<br />\nIs may be a way to bridge the technology-gap and may allow to fix a lot of problems because the same constants (eg. names) can be used in server-side C# code as well as in client-side TS code. Same would apply to plain Javascript code instead of TypeScript.\r<br />\n<br />\nDoes anything like this already exists? How did you handle that gap between client and server code? How to keep things in sync? Any feedback to such an approach?\r<br />\n<br />\nCheers,\r<br />\nMarc<br />\n",
    "PostedDate": "2014-07-24T04:11:28.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]