{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for logging this issue. We've moved to a new codebase on GitHub; please try your issue against the new compiler (once possible) and log an issue on the GitHub site if it still reproduces.",
    "ClosedDate": "2014-07-21T13:20:40.173-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "If I want to extend a generic interface, say `Array<T>`, I have to know the original name of the type parameter. So this works:\r\n\r\n```\r\ninterface Array<T>\r\n{\r\n  f(): void\r\n}\r\nvar xs:Array<number> = [1,2,3]\r\n```\r\n\r\nBut this doesn't:\r\n```\r\ninterface Array<A>\r\n{\r\n  f(): void\r\n}\r\nvar xs:Array<number> = [1,2,3]\r\n```\r\n\r\nThe variable declaration gives the error\r\n```\r\nGeneric type 'Array<A, T>' requires 2 type argument(s).\r\n```",
    "LastUpdatedDate": "2017-11-27T11:51:34.217-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-02-27T02:19:41.303-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "External"
    },
    "Summary": "Adding to generic interface doesn't allow alpha renaming",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2236
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Declarations with different type parameter names should be an error at the declaration site (spec section 7.2):\r\n\r\n> When a generic interface has multiple declarations, all declarations must have identical type parameter lists, i.e. identical type parameter names with identical constraints in identical order.",
      "PostedDate": "2014-02-27T11:20:43.747-08:00",
      "Id": 135312
    }
  ]
}