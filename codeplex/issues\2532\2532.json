{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2014-05-30T12:37:21.13-07:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "```\r\nvar value:number = 10;\r\nvar res = ( value < 10 ? '0'+value : value);\r\n```\r\n\r\ni'm getting the message \r\n> TS2226: Type of conditional '{}' must be identical to 'string' or 'number'.\r\n\r\nI'm _almost_ certain this is a bug.\r\n\r\n__nodejs package typescript 1.0.1.__",
    "LastUpdatedDate": "2014-06-01T14:04:27.263-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2014-05-30T08:52:57.39-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Getting TS2226 error on a valid conditional ternary operation",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2532
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Actually, it's not a bug.  `'0'+value` is a string.  `: value` is a number.  You cannot return two different types from a ternary condition.  The best common type between both of them is '{}' (any type), which I'm guessing is why the error shows that type.",
      "PostedDate": "2014-05-30T10:34:49.263-07:00",
      "Id": 148405
    },
    {
      "Message": "James is correct. Arguably we could allow this if the value was assigned to a variable explicitly typed as 'any.' If not that then what type would you give 'res' here? We don't want a simple mistake in a ternary expression to cause the resulting value to implicitly be of type 'any' and then leak into your program when the majority of the time your ternary expression should be returning 2 values of the same time.",
      "PostedDate": "2014-05-30T12:37:18.163-07:00",
      "Id": 148418
    },
    {
      "Message": "that makes sense james. thx for the explanation.",
      "PostedDate": "2014-06-01T14:04:27.263-07:00",
      "Id": 148498
    }
  ]
}