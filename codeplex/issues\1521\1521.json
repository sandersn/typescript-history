{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Thanks for reporting, this has been fixed in the 0.9.1.1 release and develop branches.\n\nWe expect to update the playground in the next couple of days to reflect these changes.",
    "ClosedDate": "2013-08-16T12:16:38.873-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This code:\r\n\r\n```\r\nexport interface I<T>\r\n{\r\n   f: ( x: Array<(t: T) => any> ) => void;\r\n}\r\n```\r\n\r\n...yields a compiler error in the online playground:\r\n\r\n`Parameter 't' of exported function is using inaccessible module 'inMemory://localhost/vs/editor/core/model/1'`\r\n\r\nI do not see this error when compiling in Visual Studio.\r\n\r\nStrangely, when `T` is referenced in the function type's __result__, it compiles fine:\r\n\r\n```\r\nexport interface I<T>\r\n{\r\n   f: ( x: Array<(t: T) => T> ) => void;\r\n}\r\n```\r\n\r\nGetting rid of `export` also allows it to compile:\r\n\r\n```\r\ninterface I<T>\r\n{\r\n   f: ( x: Array<(t: T) => any> ) => void;\r\n}\r\n```\r\n",
    "LastUpdatedDate": "2013-08-16T12:16:38.873-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-08-16T11:17:01.083-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Compiler error when using a function type in a generic type",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1521
  },
  "FileAttachments": [],
  "Comments": []
}