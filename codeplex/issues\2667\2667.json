{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 3,
    "Custom": null,
    "Description": "I am using jQuery AJAX to pass in additional data with the settings\r\n\r\n       .ajax({\r\n            url: priceUrl,\r\n            type: \"GET\",\r\n            datatype: \"json\",\r\n            contentType: \"application/json; charset=utf-8\",\r\n            aadvancedPayments: this.AdvancedPayments(),\r\n            aadvancedPayments: this.SubsequentPayments(),\r\n            success: (price) => {\r\n                var _n: number = price;\r\n\r\n                if (_n != 0) { \r\n\r\n                    if (this.aadvancedPayments === undefined)\r\n                        this.AdvancedPayments(_.findWhere(_advancedPayments, { Value: \"6\" }).Key);\r\n                    if (this.ssubsequentPayments === undefined)\r\n                        this.SubsequentPayments(_.findWhere(_subsequentPayments, { Value: \"23\" }).Key);\r\n\r\n\r\nI get an error in TypeScript \"Squiggly Line\" that aadvancedPayments and aadvancedPayments does not belong the viewmodel, in the success method. I am working in. I admit, I am a newbie here going through somebody elses mess.\r\n\r\nI save it and it generates the JS and in debug, low and behold, as I expected the additional settings are there.\r\n\r\nBut I cant compile the Solution Now because of those two errors.\r\n\r\nThis is a true bug, is there a workaround, how do I tell TS that this refferes to another context? or ignore the error??\r\n\r\nThis is using Knockout if it makes any difference.",
    "LastUpdatedDate": "2015-04-28T23:03:51.617-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2015-04-28T05:23:59.2-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Incorrect context assumption",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 2667
  },
  "FileAttachments": [
    {
      "FileId": 1452962,
      "FileName": "chrome.png",
      "DownloadUrl": ".\\1452962"
    },
    {
      "FileId": 1452963,
      "FileName": "vs.png",
      "DownloadUrl": ".\\1452963"
    }
  ],
  "Comments": [
    {
      "Message": "I omitted the issue with this which seems to work. Not pretty but I dont really get TS yet.\n\n             var _thisAjax: any = this; //Workaround for contextual issues\n                    if (_thisAjax.aadvancedPayments === undefined)",
      "PostedDate": "2015-04-28T05:32:51.603-07:00",
      "Id": 183501
    },
    {
      "Message": "OK, that didn't actually work in JavaScript it just removed VS errors. :(",
      "PostedDate": "2015-04-28T05:34:58.023-07:00",
      "Id": 183502
    },
    {
      "Message": "TypeScript treats \"this\" differently depending on context.  When you put \"this\" in a lambda type expression, it generates an implicit \"_this\" variable in the parent scope of the function and uses that instead, so it will not work as you are thinking.  What you need to do is use the normal \"function\" keyword, so make it \"success: function (price) {\" instead.",
      "PostedDate": "2015-04-28T23:03:51.617-07:00",
      "Id": 183555
    }
  ]
}