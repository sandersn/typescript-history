{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This bug has been fixed. If you're still seeing this issue, please re-open the bug (click \"Re-open Issue\" below the \"ISSUES\" tab). Thanks!",
    "ClosedDate": "2013-08-07T11:54:20.973-07:00",
    "CommentCount": 9,
    "Custom": null,
    "Description": "https://typescript.codeplex.com/SourceControl/changeset/view/45ec81e62ccef85b03b48d6f08c4ea94d33aeacd#src/compiler/text/textChangeRange.ts\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of <see cref=\"T:TextChangeRange\"/>.\r\n        /// </summary>\r\n        /// <param name=\"span\"></param>\r\n        /// <param name=\"newLength\"></param>\r\n        constructor(span: TextSpan, newLength: number) {\r\n\r\nhttps://typescript.codeplex.com/SourceControl/changeset/view/45ec81e62ccef85b03b48d6f08c4ea94d33aeacd#src/compiler/text/textSpan.ts\r\n\r\n        /// <summary>\r\n        /// Creates a TextSpan instance beginning with the position Start and having the Length\r\n        /// specified with length.\r\n        /// </summary>\r\n        constructor(start: number, length: number) {\r\n\r\nBasically, search for /// <summary> across the whole codebase, there must be a couple more files.\r\n\r\nP.S. It would be lovely to stick some meaningful text in comments instead of useless placeholders like Initializes a new instance of <see cref=\"T:TextChangeRange\"/> above. We all know the meaning of the word 'constructor', tell us something we don't know in those comments.",
    "LastUpdatedDate": "2014-01-10T10:34:33.287-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-05-05T05:34:43.5-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Convert C# style XML-doc comments",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 5,
    "Id": 998
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Are you asking the team to fix their own comments in their codebase, or are you asking for a feature whereby the TS compiler automatically converts C#-style comments into JSDoc style comments?",
      "PostedDate": "2013-05-05T17:29:33.213-07:00",
      "Id": 99451
    },
    {
      "Message": "Yes, comments should follow JSDoc, as prescribed by the compiler. There isn't that many of C# comments to  introduce a separate tool.",
      "PostedDate": "2013-05-05T23:31:41.567-07:00",
      "Id": 99460
    },
    {
      "Message": "The documentation on the whole TS codebase in general could use some massive improvement. As a user it's not very important to me, but as an observer I have no idea how you can work with each other's code when most of the TS codebase is undocumented. JSDoc (and the resulting Intellisense) really is extremely helpful. Eat your own dog food, don't you know.",
      "PostedDate": "2013-05-06T07:01:57.89-07:00",
      "Id": 99476
    },
    {
      "Message": "@mikhailik then you have my vote, it's embarassing that TS's own codebase can't be more idiomatic.",
      "PostedDate": "2013-05-06T12:53:15.69-07:00",
      "Id": 99501
    },
    {
      "Message": "These comments pre-date us standardizing on JSDoc. We'll work on converting them, but it understandably isn't going to be a high priority.",
      "PostedDate": "2013-05-06T13:31:26.033-07:00",
      "Id": 99505
    },
    {
      "Message": "Naturally, of course.\n\nAlthough it would look ridiculous is it stays out of sync with your own spec for too long. My advise is to send a minion to spend an hour measuring the amount of work, then you'd know your budget.\n\nBecause another alternative is to remove those comments. Simple, cheap and rude, but at least it won't look weird anymore.",
      "PostedDate": "2013-05-06T14:10:10.4-07:00",
      "Id": 99508
    },
    {
      "Message": "@RyanCavanaugh Totally understand that you guys have more important things to work on: this is a nice-to-have. Will you take a pull request?",
      "PostedDate": "2013-05-06T15:05:51.517-07:00",
      "Id": 99515
    },
    {
      "Message": "I actually created a tool that help convert vsdoc to jsdoc while I was trying to build type definitions for RxJS. It is not complete and does not support all vsdoc elements, but people more versed in parser building and/or regex can probably create something similar that process an entire JS file and replace all vsdocs with jsdocs in one run.\n\nhttps://github.com/egil/VSDocJSDocConverter",
      "PostedDate": "2013-05-07T03:21:47.053-07:00",
      "Id": 99562
    },
    {
      "Message": "Please implement vsdoc instead of or side by side with jsdoc.\n\nThank You.",
      "PostedDate": "2013-09-15T15:17:36.823-07:00",
      "Id": 113618
    }
  ]
}