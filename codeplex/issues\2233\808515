enum DATE_CONVERSION {
    None = 0,
    ServerLocalToClientLocal = 1,
    UtcToClientLocal = 2,
}
enum DATA_TYPE {
    None = 0,
    String = 1,
    Bool = 2,
    Integer = 3,
    Decimal = 4,
    Float = 5,
    DateTime = 6,
    Date = 7,
    Time = 8,
    Guid = 9,
    Binary = 10,
}
enum FIELD_TYPE {
    None = 0,
    ClientOnly = 1,
    Calculated = 2,
    Navigation = 3,
    RowTimeStamp = 4,
    Object = 5,
    ServerCalculated = 6,
}
interface IFieldInfo {
    fieldName: string;
    isPrimaryKey: number;
    dataType: DATA_TYPE;
    isNullable: boolean;
    isReadOnly: boolean;
    isAutoGenerated: boolean;
    isNeedOriginal: boolean;
    maxLength: number;
    dateConversion: DATE_CONVERSION;
    allowClientDefault: boolean;
    range: string;
    regex: string;
    fieldType: FIELD_TYPE;
    dependentOn: string;
    nested: IFieldInfo[];
    dependents?: string[];
    fullName?: string;
}

/*
//this version is successfully compiled (i removed enums types from it)
interface IFieldInfo {
    fieldName: string;
    isPrimaryKey: number;
    dataType: number;
    isNullable: boolean;
    isReadOnly: boolean;
    isAutoGenerated: boolean;
    isNeedOriginal: boolean;
    maxLength: number;
    dateConversion: number;
    allowClientDefault: boolean;
    range: string;
    regex: string;
    fieldType: number;
    dependentOn: string;
    nested: IFieldInfo[];
    dependents?: string[];
    fullName?: string;
}
*/

var fieldInfos: IFieldInfo[] = [{ "fieldName": "CustomerID", "isPrimaryKey": 1, "dataType": 3, "isNullable": false, "isReadOnly": true, "isAutoGenerated": true, "isNeedOriginal": true, "maxLength": 4, "dateConversion": 0, "allowClientDefault": false, "range": "", "regex": "", "fieldType": 0, "dependentOn": "", "nested": null }];