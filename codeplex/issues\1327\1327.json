{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "You simply write export= in the declaration file. You can use the --declarations flag on the compiler to automatically generate the .d.ts for a file that uses export= to see what it looks like. For example,\n\n```\nclass C {\n\tfoo() {}\n}\n\nexport=C;\n```\n\ngenerates this .d.ts\n```\ndeclare class C {\n    public foo(): void;\n}\nexport = C;\n```",
    "ClosedDate": "2013-07-11T17:13:30.84-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Even though it is now possible to export a single value from a module, like this:\r\n\r\n```\r\n    export = $;\r\n```\r\n\r\nIt is still not possible to declare such module in a ```d.ts``` file.\r\nThe spec doesn't discuss any syntax to do this.\r\nJust to be sure, I've actually tried a few obvious variations:\r\n\r\n```\r\ndeclare module \"jQuery\": JQueryStatic; \r\ndeclare module \"jQuery\" { export: JQueryStatic; }\r\ndeclare module \"jQuery\" { export = <JQueryStatic>null; }\r\n```\r\n\r\nNone of these attempts worked.",
    "LastUpdatedDate": "2013-07-11T17:13:30.84-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-07-09T21:16:26.8-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Ambient module declaration for \"export assignment\"-style modules",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1327
  },
  "FileAttachments": [],
  "Comments": []
}