[
  {
    "Id": "1112654",
    "ThreadId": "463776",
    "Html": "Hi,\r<br />\n<br />\nIs there a way to access arguments object? For variable args typescript generates code which copies elements to local array which is not always desired.<br />\n<pre><code>        var args = [];\n        for (var _i = 0; _i &lt; (arguments.length - 0); _i++) {\n            args[_i] = arguments[_i + 0];\n        }</code></pre>\n\n",
    "PostedDate": "2013-10-27T07:55:34.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1113176",
    "ThreadId": "463776",
    "Html": "@alexezh, \r<br />\n<br />\nNot sure what you mean. It's still possible to write:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">function</span> foo(...args:<span style=\"color:Blue;\">string</span>[]){\n    alert(arguments[0]);\n}\n\nfoo(<span style=\"color:#A31515;\">&quot;bar&quot;</span>); <span style=\"color:Green;\">// Alerts &quot;bar&quot;</span>\r\n</pre></div>Although intellisense doesn't seem to think the <code>arguments</code> object exists (possibly a bug), it compiles fine.<br />\n",
    "PostedDate": "2013-10-28T09:32:18.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1113225",
    "ThreadId": "463776",
    "Html": "If you want to avoid the codegen TypeScript uses for rest params and manually deal with the arguments array you can write a function overload that takes rest params and an implementation that does not, like so:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">function</span> foo(...xs: <span style=\"color:Blue;\">any</span>[]);\n<span style=\"color:Blue;\">function</span> foo() {\n    <span style=\"color:Blue;\">var</span> r = arguments[1];\n    <span style=\"color:Green;\">// do stuff</span>\n}\r\n</pre></div>generates this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">function</span> foo() {\n    <span style=\"color:Blue;\">var</span> r = arguments[1];\n    <span style=\"color:Green;\">// do stuff</span>\n}\r\n</pre></div>",
    "PostedDate": "2013-10-28T10:25:28.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]