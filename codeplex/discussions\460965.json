[
  {
    "Id": "1102850",
    "ThreadId": "460965",
    "Html": "It would be nice if we could create interfaces that define concrete types from multiple files. Here is an example of it working in the playground, but if the interface is moved to a .d.ts file classes can not be used. The workaround I have found is to create interfaces for each concrete class.\r<br />\n<br />\n<a href=\"http://www.typescriptlang.org/Playground/#src=class%20ConcreteClass%20%7B%0A%09public%20Id%3A%20string%20%3D%20%22%22%3B%0A%09constructor(id%3A%20string)%20%7B%0A%09%09this.Id%20%3D%20id%3B%0A%09%7D%0A%7D%0A%0A%0Ainterface%20ILibrary%20%7B%0A%09ConcreteClass%3A%20ConcreteClass%3B%0A%7D%0A%0Avar%20myObj%3A%20ILibrary%3B%0A%0Avar%20classObj%20%3D%20new%20myObj.ConcreteClass(%22id1%22)%3B\" rel=\"nofollow\">http://www.typescriptlang.org/Playground/#src=class%20ConcreteClass%20%7B%0A%09public%20Id%3A%20string%20%3D%20%22%22%3B%0A%09constructor(id%3A%20string)%20%7B%0A%09%09this.Id%20%3D%20id%3B%0A%09%7D%0A%7D%0A%0A%0Ainterface%20ILibrary%20%7B%0A%09ConcreteClass%3A%20ConcreteClass%3B%0A%7D%0A%0Avar%20myObj%3A%20ILibrary%3B%0A%0Avar%20classObj%20%3D%20new%20myObj.ConcreteClass(%22id1%22)%3B</a><br />\n",
    "PostedDate": "2013-10-02T10:50:29.597-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1102948",
    "ThreadId": "460965",
    "Html": "I'm not sure I'm following the issue you're having. Your ILibrary interface could certainly be in a .d.ts file as long as that file referenced the file where ConcreteClass is defined. <br />\n",
    "PostedDate": "2013-10-02T14:46:07.053-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]