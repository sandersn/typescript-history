{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-10-24T10:34:16.56-07:00",
    "CommentCount": 5,
    "Custom": null,
    "Description": "It'd be nice if we were able to create scoped classes and enums inside classes:\r\n\r\nclass MyClass {\r\n\tpublic enum SomeEnum {\r\n\t\t...\r\n\t}\r\n\r\n\tprivate ScopedClass {\r\n\t\t...\r\n\t}\r\n}",
    "LastUpdatedDate": "2017-11-27T11:51:33.707-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "typescript",
    "ReportedDate": "2012-10-06T03:54:53.137-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Classes and enums inside classes",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 18,
    "Id": 132
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "We're working on a spec for this type of feature which allows you to mix across different types of abstraction, like so:\n\n```TypeScript\nclass Store { }\nmodule Store {\n  export class Error { }\n}\n```",
      "PostedDate": "2013-03-12T08:57:08.453-07:00",
      "Id": 93042
    },
    {
      "Message": "isn't this fixed in 0.9? Declaration merging...?",
      "PostedDate": "2013-07-11T01:36:36.667-07:00",
      "Id": 105712
    },
    {
      "Message": "This is likely needed for leaflet since it has both L.Icon and L.Icon.Default.",
      "PostedDate": "2013-10-13T11:56:41.61-07:00",
      "Id": 118289
    },
    {
      "Message": "Whoops, this is already working in 0.9.1.1 with the suggested syntax.  I'll fix the definition for leaflet in DefinitelyTyped now.",
      "PostedDate": "2013-10-13T12:03:23.407-07:00",
      "Id": 118290
    },
    {
      "Message": "Yes, this should be marked as fixed.  Declaration merging is the intended solution now for inner classes.",
      "PostedDate": "2013-10-24T10:34:10.227-07:00",
      "Id": 119547
    }
  ]
}