[
  {
    "Id": "1029760",
    "ThreadId": "440121",
    "Html": "Phaser is a 2D JavaScript/TypeScript HTML5 Game Framework based heavily on Flixel.\r<br />\n<br />\nPhaser was born from a cross-polination of the AS3 Flixel game library and our own internal HTML5 game framework. The objective was to allow you to make games really quickly and remove some of the speed barriers HTML5 puts in your way.\r<br />\n<br />\n<img src=\"http://www.photonstorm.com/wp-content/uploads/2013/04/phaser_cams.png\" alt=\"Image\" />\r<br />\n<br />\nPhaser fully or partially supports the following features. This list is growing constantly and we are aware there are still a number of essential features missing:<br />\n<ul>\n<li>Asset Loading Images, Sprite Sheets, Texture Packer Data, JSON, Text Files, Audio File.</li>\n<li>Cameras Multiple world cameras, camera scale, zoom, rotation, deadzones and Sprite following.</li>\n<li>Sprites All sprites have physics properties including velocity, acceleration, bounce and drag. ScrollFactor allows them to re-act to cameras at different rates.</li>\n<li>Groups Group sprites together for collision checks, visibility toggling and function iteration.</li>\n<li>Animation Sprites can be animated by a sprite sheet or Texture Atlas (JSON Array format supported). Animation playback controls, looping, fps based timer and custom frames.</li>\n<li>Collision A QuadTree based Sprite to Sprite, Sprite to Group or Group to Group collision system.</li>\n<li>Particles An Emitter can emit Sprites in a burst or at a constant rate, setting physics properties.</li>\n<li>Input Keyboard and Mouse handling supported (Touch coming asap)</li>\n<li>Stage Easily change properties about your game via the stage, such as background color, position and size.</li>\n<li>World The game world can be any size and Sprites and collision happens within it.</li>\n<li>Sound (partial support) Currently uses WebAudio for playback. A lot more work needs to be done in this area.</li>\n<li>State Management For larger games it's useful to break your game down into States, i.e. MainMenu, Level1, GameOver, etc. The state manager makes swapping states easy, but the use of a state is completely optional.</li>\n<li>Cache All loaded resources are stored in an easy to access cache, which can be cleared between State changes or persist through-out the whole game.</li>\n<li>\nTilemaps Support for CSV and Tiled JSON format tile maps is implemented but currently limited.<br />\n</li>\n</ul>\n<img src=\"http://www.photonstorm.com/wp-content/uploads/2013/04/phaser_particles.png\" alt=\"Image\" />\r<br />\n<br />\nIt’s not yet finished of course and there is still lots to do, but with Ludam Dare around the corner I wanted to get this out sooner rather than later. So please download it, try it, kick it hard and let me know what you think.\r<br />\n<br />\nYou can run all the current tests here: <a href=\"http://gametest.mobi/phaser/\" rel=\"nofollow\">http://gametest.mobi/phaser/</a> (note they are all designed for desktop, but Phaser does also work on mobile)\r<br />\n<br />\nAnd download the full source here: <a href=\"https://github.com/photonstorm/phaser\" rel=\"nofollow\">https://github.com/photonstorm/phaser</a>\r<br />\n<br />\nWe’ve set-up a Phaser specific board on the on <a href=\"http://www.html5gamedevs.com/forum/14-phaser/\" rel=\"nofollow\">HTML5 Game Devs forum</a> – so post questions and comments or in the comments \r<br />\n<br />\nWe built Phaser using TypeScript, but you can easily use plain-vanilla JavaScript to create your games, indeed all of the Test cases were created that way. We’ve a number of exciting plans for Phaser in the near future, so definitely stay tuned! and thanks to the TypeScript team for making it a breeze to create this framework :)<br />\n",
    "PostedDate": "2013-04-12T11:21:39.687-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1030615",
    "ThreadId": "440121",
    "Html": "Very cool stuff.  Thanks for sharing! <br />\n",
    "PostedDate": "2013-04-15T06:55:15.16-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]