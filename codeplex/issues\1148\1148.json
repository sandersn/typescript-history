{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2013-06-14T09:38:02.18-07:00",
    "CommentCount": 1,
    "Custom": null,
    "Description": "Hi, in TS 0.9 Beta an explicit cast is required in the example below:\r\n\r\n```JavaScript\r\ninterface IFoo {\r\n    getFoo(): string;\r\n}\r\n\r\nclass Foo implements IFoo {\r\n    public getFoo() {\r\n         var y: any;\r\n        // Call signatures of types '() => any' and '() => string' are incompatible\r\n        // return y;\r\n        return <string>y; // Okay\r\n    }\r\n}\r\n```\r\n\r\nIs this a bug or a language feature?\r\n\r\nNot sure what benefit the cast actually provides.",
    "LastUpdatedDate": "2013-06-14T09:38:02.18-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "typescript",
    "ReportedDate": "2013-06-13T05:12:32.327-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "By Design"
    },
    "Summary": "Explicit cast from any now required?",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1148
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The explicit cast is not required if you annotate the return type of the method:\n\n````\ninterface IFoo {\n    getFoo(): string;\n}\n\nclass Foo implements IFoo {\n    public getFoo() : string {\n         var y: any;\n       return y; // Okay\n    }\n}\n\n````",
      "PostedDate": "2013-06-14T09:37:57-07:00",
      "Id": 103075
    }
  ]
}